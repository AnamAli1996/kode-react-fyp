/**
 * Style for ApCard.
 * @class ApCardStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApCardStyle */
var ApCardStyle = function (_Component) {
  (0, _inherits3.default)(ApCardStyle, _Component);

  function ApCardStyle() {
    (0, _classCallCheck3.default)(this, ApCardStyle);
    return (0, _possibleConstructorReturn3.default)(this, (ApCardStyle.__proto__ || (0, _getPrototypeOf2.default)(ApCardStyle)).apply(this, arguments));
  }

  (0, _createClass3.default)(ApCardStyle, [{
    key: 'render',
    value: function render() {
      var s = this;
      var props = s.props;

      var _ApCardStyle$styleDat = ApCardStyle.styleData(props);

      var all = _ApCardStyle$styleDat.all;
      var small = _ApCardStyle$styleDat.small;
      var medium = _ApCardStyle$styleDat.medium;
      var large = _ApCardStyle$styleDat.large;


      return _react2.default.createElement(
        _apemanReactStyle.ApStyle,
        { data: (0, _assign2.default)(all, props.style),
          smallMediaData: small,
          mediumMediaData: medium,
          largeMediaData: large
        },
        props.children
      );
    }
  }]);
  return ApCardStyle;
}(_react.Component);

(0, _assign2.default)(ApCardStyle, {
  propTypes: {
    style: _react.PropTypes.object,
    highlightColor: _react.PropTypes.string
  },
  defaultProps: {
    style: {},
    highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
    backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
  },
  styleData: function styleData(config) {
    var highlightColor = config.highlightColor;
    var backgroundColor = config.backgroundColor;

    return {
      all: {
        '.ap-card': {
          margin: '0',
          boxSizing: 'border-box',
          maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH + 'px',
          padding: '8px'
        },
        '.ap-card-inner': {
          display: 'flex',
          padding: '8px',
          borderRadius: '2px',
          boxSizing: 'border-box',
          boxShadow: '2px 2px 4px rgba(0,0,0,0.33)',
          backgroundColor: backgroundColor,
          border: '1px solid #D4D4D4',
          flexWrap: 'wrap',
          width: '100%'
        },
        '.ap-card-tappable:hover .ap-card-inner': {
          cursor: 'pointer'
        },
        '.ap-card-tappable:active .ap-card-inner': {
          boxShadow: 'none'
        },
        '.ap-card-group': {
          display: 'flex',
          flexWrap: 'wrap',
          justifyContent: 'flex-start'
        },

        '.ap-card-group-empty .ap-card-group-alt': {
          display: 'block'
        },
        '.ap-card-group-alt': {
          display: 'none',
          textAlign: 'center',
          padding: '32px 8px',
          color: '#CCC'
        },
        '.ap-card-group .ap-card': {
          width: '50%'
        }
      },
      small: {
        '.ap-card-group .ap-card': {
          width: '33%'
        }
      }
    };
  }
});

exports.default = ApCardStyle;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2NhcmRfc3R5bGUuanN4Il0sIm5hbWVzIjpbIkFwQ2FyZFN0eWxlIiwicyIsInByb3BzIiwic3R5bGVEYXRhIiwiYWxsIiwic21hbGwiLCJtZWRpdW0iLCJsYXJnZSIsInN0eWxlIiwiY2hpbGRyZW4iLCJwcm9wVHlwZXMiLCJvYmplY3QiLCJoaWdobGlnaHRDb2xvciIsInN0cmluZyIsImRlZmF1bHRQcm9wcyIsIkRFRkFVTFRfSElHSExJR0hUX0NPTE9SIiwiYmFja2dyb3VuZENvbG9yIiwiREVGQVVMVF9CQUNLR1JPVU5EX0NPTE9SIiwiY29uZmlnIiwibWFyZ2luIiwiYm94U2l6aW5nIiwibWF4V2lkdGgiLCJDT05URU5UX1dJRFRIIiwicGFkZGluZyIsImRpc3BsYXkiLCJib3JkZXJSYWRpdXMiLCJib3hTaGFkb3ciLCJib3JkZXIiLCJmbGV4V3JhcCIsIndpZHRoIiwiY3Vyc29yIiwianVzdGlmeUNvbnRlbnQiLCJ0ZXh0QWxpZ24iLCJjb2xvciJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBOzs7O0FBQ0E7Ozs7QUFFQTtJQUNNQSxXOzs7Ozs7Ozs7OzZCQUNNO0FBQ1IsVUFBTUMsSUFBSSxJQUFWO0FBRFEsVUFFRkMsS0FGRSxHQUVRRCxDQUZSLENBRUZDLEtBRkU7O0FBQUEsa0NBSTRCRixZQUFZRyxTQUFaLENBQXNCRCxLQUF0QixDQUo1Qjs7QUFBQSxVQUlGRSxHQUpFLHlCQUlGQSxHQUpFO0FBQUEsVUFJR0MsS0FKSCx5QkFJR0EsS0FKSDtBQUFBLFVBSVVDLE1BSlYseUJBSVVBLE1BSlY7QUFBQSxVQUlrQkMsS0FKbEIseUJBSWtCQSxLQUpsQjs7O0FBTVIsYUFDRTtBQUFBO0FBQUEsVUFBUyxNQUFPLHNCQUFjSCxHQUFkLEVBQW1CRixNQUFNTSxLQUF6QixDQUFoQjtBQUNTLDBCQUFpQkgsS0FEMUI7QUFFUywyQkFBa0JDLE1BRjNCO0FBR1MsMEJBQWlCQztBQUgxQjtBQUlHTCxjQUFNTztBQUpULE9BREY7QUFPRDs7Ozs7QUFHSCxzQkFBY1QsV0FBZCxFQUEyQjtBQUN6QlUsYUFBVztBQUNURixXQUFPLGlCQUFNRyxNQURKO0FBRVRDLG9CQUFnQixpQkFBTUM7QUFGYixHQURjO0FBS3pCQyxnQkFBYztBQUNaTixXQUFPLEVBREs7QUFFWkksb0JBQWdCLDBCQUFRRyx1QkFGWjtBQUdaQyxxQkFBaUIsMEJBQVFDO0FBSGIsR0FMVztBQVV6QmQsV0FWeUIscUJBVWRlLE1BVmMsRUFVTjtBQUFBLFFBQ1hOLGNBRFcsR0FDeUJNLE1BRHpCLENBQ1hOLGNBRFc7QUFBQSxRQUNLSSxlQURMLEdBQ3lCRSxNQUR6QixDQUNLRixlQURMOztBQUVqQixXQUFPO0FBQ0xaLFdBQUs7QUFDSCxvQkFBWTtBQUNWZSxrQkFBUSxHQURFO0FBRVZDLHFCQUFXLFlBRkQ7QUFHVkMsb0JBQWEsMEJBQVFDLGFBQXJCLE9BSFU7QUFJVkMsbUJBQVM7QUFKQyxTQURUO0FBT0gsMEJBQWtCO0FBQ2hCQyxtQkFBUyxNQURPO0FBRWhCRCxtQkFBUyxLQUZPO0FBR2hCRSx3QkFBYyxLQUhFO0FBSWhCTCxxQkFBVyxZQUpLO0FBS2hCTSxxQkFBVyw4QkFMSztBQU1oQlYsMkJBQWlCQSxlQU5EO0FBT2hCVyxrQkFBUSxtQkFQUTtBQVFoQkMsb0JBQVUsTUFSTTtBQVNoQkMsaUJBQU87QUFUUyxTQVBmO0FBa0JILGtEQUEwQztBQUN4Q0Msa0JBQVE7QUFEZ0MsU0FsQnZDO0FBcUJILG1EQUEyQztBQUN6Q0oscUJBQVc7QUFEOEIsU0FyQnhDO0FBd0JILDBCQUFrQjtBQUNoQkYsbUJBQVMsTUFETztBQUVoQkksb0JBQVUsTUFGTTtBQUdoQkcsMEJBQWdCO0FBSEEsU0F4QmY7O0FBOEJILG1EQUEyQztBQUN6Q1AsbUJBQVM7QUFEZ0MsU0E5QnhDO0FBaUNILDhCQUFzQjtBQUNwQkEsbUJBQVMsTUFEVztBQUVwQlEscUJBQVcsUUFGUztBQUdwQlQsbUJBQVMsVUFIVztBQUlwQlUsaUJBQU87QUFKYSxTQWpDbkI7QUF1Q0gsbUNBQTJCO0FBQ3pCSixpQkFBTztBQURrQjtBQXZDeEIsT0FEQTtBQTRDTHhCLGFBQU87QUFDTCxtQ0FBMkI7QUFDekJ3QixpQkFBTztBQURrQjtBQUR0QjtBQTVDRixLQUFQO0FBa0REO0FBOUR3QixDQUEzQjs7a0JBaUVlN0IsVyIsImZpbGUiOiJhcF9jYXJkX3N0eWxlLmpzeCIsInNvdXJjZVJvb3QiOiJsaWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFN0eWxlIGZvciBBcENhcmQuXG4gKiBAY2xhc3MgQXBDYXJkU3R5bGVcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuaW1wb3J0IFJlYWN0LCB7IFByb3BUeXBlcyBhcyB0eXBlcywgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBBcFN0eWxlIH0gZnJvbSAnYXBlbWFuLXJlYWN0LXN0eWxlJ1xuXG4vKiogQGxlbmRzIEFwQ2FyZFN0eWxlICovXG5jbGFzcyBBcENhcmRTdHlsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcyB9ID0gc1xuXG4gICAgbGV0IHsgYWxsLCBzbWFsbCwgbWVkaXVtLCBsYXJnZSB9ID0gQXBDYXJkU3R5bGUuc3R5bGVEYXRhKHByb3BzKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxBcFN0eWxlIGRhdGE9eyBPYmplY3QuYXNzaWduKGFsbCwgcHJvcHMuc3R5bGUpIH1cbiAgICAgICAgICAgICAgIHNtYWxsTWVkaWFEYXRhPXsgc21hbGwgfVxuICAgICAgICAgICAgICAgbWVkaXVtTWVkaWFEYXRhPXsgbWVkaXVtIH1cbiAgICAgICAgICAgICAgIGxhcmdlTWVkaWFEYXRhPXsgbGFyZ2UgfVxuICAgICAgPnsgcHJvcHMuY2hpbGRyZW4gfTwvQXBTdHlsZT5cbiAgICApXG4gIH1cbn1cblxuT2JqZWN0LmFzc2lnbihBcENhcmRTdHlsZSwge1xuICBwcm9wVHlwZXM6IHtcbiAgICBzdHlsZTogdHlwZXMub2JqZWN0LFxuICAgIGhpZ2hsaWdodENvbG9yOiB0eXBlcy5zdHJpbmdcbiAgfSxcbiAgZGVmYXVsdFByb3BzOiB7XG4gICAgc3R5bGU6IHt9LFxuICAgIGhpZ2hsaWdodENvbG9yOiBBcFN0eWxlLkRFRkFVTFRfSElHSExJR0hUX0NPTE9SLFxuICAgIGJhY2tncm91bmRDb2xvcjogQXBTdHlsZS5ERUZBVUxUX0JBQ0tHUk9VTkRfQ09MT1JcbiAgfSxcbiAgc3R5bGVEYXRhIChjb25maWcpIHtcbiAgICBsZXQgeyBoaWdobGlnaHRDb2xvciwgYmFja2dyb3VuZENvbG9yIH0gPSBjb25maWdcbiAgICByZXR1cm4ge1xuICAgICAgYWxsOiB7XG4gICAgICAgICcuYXAtY2FyZCc6IHtcbiAgICAgICAgICBtYXJnaW46ICcwJyxcbiAgICAgICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICAgICAgICBtYXhXaWR0aDogYCR7QXBTdHlsZS5DT05URU5UX1dJRFRIfXB4YCxcbiAgICAgICAgICBwYWRkaW5nOiAnOHB4J1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLWNhcmQtaW5uZXInOiB7XG4gICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgIHBhZGRpbmc6ICc4cHgnLFxuICAgICAgICAgIGJvcmRlclJhZGl1czogJzJweCcsXG4gICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgYm94U2hhZG93OiAnMnB4IDJweCA0cHggcmdiYSgwLDAsMCwwLjMzKScsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBiYWNrZ3JvdW5kQ29sb3IsXG4gICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICNENEQ0RDQnLFxuICAgICAgICAgIGZsZXhXcmFwOiAnd3JhcCcsXG4gICAgICAgICAgd2lkdGg6ICcxMDAlJ1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLWNhcmQtdGFwcGFibGU6aG92ZXIgLmFwLWNhcmQtaW5uZXInOiB7XG4gICAgICAgICAgY3Vyc29yOiAncG9pbnRlcidcbiAgICAgICAgfSxcbiAgICAgICAgJy5hcC1jYXJkLXRhcHBhYmxlOmFjdGl2ZSAuYXAtY2FyZC1pbm5lcic6IHtcbiAgICAgICAgICBib3hTaGFkb3c6ICdub25lJ1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLWNhcmQtZ3JvdXAnOiB7XG4gICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgIGZsZXhXcmFwOiAnd3JhcCcsXG4gICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdmbGV4LXN0YXJ0J1xuICAgICAgICB9LFxuXG4gICAgICAgICcuYXAtY2FyZC1ncm91cC1lbXB0eSAuYXAtY2FyZC1ncm91cC1hbHQnOiB7XG4gICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJ1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLWNhcmQtZ3JvdXAtYWx0Jzoge1xuICAgICAgICAgIGRpc3BsYXk6ICdub25lJyxcbiAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgICAgIHBhZGRpbmc6ICczMnB4IDhweCcsXG4gICAgICAgICAgY29sb3I6ICcjQ0NDJ1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLWNhcmQtZ3JvdXAgLmFwLWNhcmQnOiB7XG4gICAgICAgICAgd2lkdGg6ICc1MCUnXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBzbWFsbDoge1xuICAgICAgICAnLmFwLWNhcmQtZ3JvdXAgLmFwLWNhcmQnOiB7XG4gICAgICAgICAgd2lkdGg6ICczMyUnXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn0pXG5cbmV4cG9ydCBkZWZhdWx0IEFwQ2FyZFN0eWxlXG4iXX0=