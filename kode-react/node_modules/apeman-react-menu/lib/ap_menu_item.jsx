/**
 * Item for menu.
 * @class ApMenuItem
 */

'use strict'

import React, {PropTypes as types} from 'react'
import classnames from 'classnames'
import {shallowEqual} from 'asobj'
import {ApIconButton} from 'apeman-react-button'

/** @lends ApMenuItem */
const ApMenuItem = React.createClass({

  // --------------------
  // Specs
  // --------------------

  propTypes: {
    hidden: types.bool
  },

  mixins: [],

  statics: {
    /**
     * Create an item.
     * @param {string} icon - Icon class name.
     * @param {string} text - Text of item.
     * @param {function} onTap - On tap.
     * @param {object} props - Properties.
     */
    createItem (icon, text, onTap, props) {
      return (
        <ApMenuItem icon={ icon }
                    text={ text }
                    onTap={ onTap }
                    { ...props }
        />
      )
    }
  },

  getInitialState () {
    return {}
  },

  getDefaultProps () {
    return {
      hidden: false
    }
  },

  render () {
    const s = this
    let { props } = s

    let className = classnames('ap-menu-item', {
      'ap-menu-item-hidden': props.hidden
    }, props.className)
    return (
      <ApIconButton { ...props }
                    className={ className }
                    style={ Object.assign({}, props.style) }
      >
        { props.children }
      </ApIconButton>
    )
  },

  // --------------------
  // Lifecycle
  // --------------------
  shouldComponentUpdate (nextProps, nextState) {
    const s = this
    let { props, state } = s
    return !shallowEqual(props, nextProps) || shallowEqual(state, nextState)
  }

  // ------------------
  // Custom
  // ------------------

  // ------------------
  // Private
  // ------------------
})

export default ApMenuItem
