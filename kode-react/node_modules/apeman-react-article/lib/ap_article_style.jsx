/**
 * Style for ApArticle.
 * @class ApArticleStyle
 */

'use strict'

import React, { Component, PropTypes as types } from 'react'
import { ApStyle } from 'apeman-react-style'

/** @lends ApArticleStyle */
class ApArticleStyle extends Component {
  render () {
    const s = this
    let { props } = s

    let { all, small, medium, large } = ApArticleStyle.styleData(props)

    return (
      <ApStyle data={ Object.assign(all, props.style) }
               smallMediaData={ small }
               mediumMediaData={ medium }
               largeMediaData={ large }
      >{ props.children }</ApStyle>
    )
  }
}

Object.assign(ApArticleStyle, {
  propTypes: {
    style: types.object,
    highlightColor: types.string
  },
  defaultProps: {
    style: {},
    highlightColor: ApStyle.DEFAULT_HIGHLIGHT_COLOR,
    backgroundColor: ApStyle.DEFAULT_BACKGROUND_COLOR
  },
  styleData (config) {
    let { highlightColor, backgroundColor } = config
    return {
      all: {
        '.ap-article': {
          padding: '16px 0'
        },
        '.ap-selectable-article-content': {
          display: 'none'
        },
        '.ap-selectable-article-header': {
          display: 'flex',
          alignItems: 'center'
        },
        '.ap-selectable-article-header .ap-label': {
          padding: '4px 8px 4px 0'
        },
        '.ap-selectable-article-body': {
          padding: '8px 0',
          boxSizing: 'border-box'
        },
        '.ap-selectable-article-alt': {
          display: 'block',
          textAlign: 'center',
          opacity: 0.3,
          padding: '16px 8px'
        }
      }
    }
  }
})

export default ApArticleStyle
