/**
 * apeman react package for pager components.
 * @class ApPager
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _numcal = require('numcal');

var _numcal2 = _interopRequireDefault(_numcal);

var _ap_pager_item = require('./ap_pager_item');

var _ap_pager_item2 = _interopRequireDefault(_ap_pager_item);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/** @lends ApPager */
var ApPager = function (_Component) {
  _inherits(ApPager, _Component);

  function ApPager() {
    _classCallCheck(this, ApPager);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApPager).apply(this, arguments));
  }

  _createClass(ApPager, [{
    key: 'render',


    // --------------------
    // Specs
    // --------------------
    value: function render() {
      var s = this;
      var state = s.state;
      var props = s.props;


      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)('ap-pager', props.className),
          style: Object.assign({}, props.style) },
        s.renderItems(),
        props.children
      );
    }

    // --------------------
    // Lifecycle
    // --------------------

    // ------------------
    // Private
    // ------------------

  }, {
    key: 'renderItems',
    value: function renderItems() {
      var s = this;
      var props = s.props;
      var page = props.page;
      var size = props.size;
      var total = props.total;
      var onChange = props.onChange;

      var items = [];

      var min = 0;
      var max = total - 1;
      var sizeHalf = parseInt(size / 2);

      var from = _numcal2.default.max(min, _numcal2.default.min(page - sizeHalf, max - size + 1));
      var to = _numcal2.default.min(_numcal2.default.max(min + size - 1, page + sizeHalf), max);

      var newItem = function newItem(index, title) {
        return _react2.default.createElement(_ap_pager_item2.default, { key: [index, title].join('-'),
          data: index,
          title: title,
          selected: index === page,
          onTap: function onTap(_ref) {
            var page = _ref.data;
            return onChange({ page: page });
          }
        });
      };

      for (var index = from; index <= to; index++) {
        items.push(newItem(index, String(index + 1)));
      }

      if (min < page) {
        items.unshift(newItem(page - 1, '«'));
      }
      if (page < to) {
        items.push(newItem(page + 1, '»'));
      }
      return items;
    }
  }]);

  return ApPager;
}(_react.Component);

Object.assign(ApPager, {
  propTypes: {
    /** Total page count */
    total: _react.PropTypes.number.isRequired,
    /** Current page number */
    page: _react.PropTypes.number.isRequired,
    /** Number of items to show */
    size: _react.PropTypes.number,
    /** Handler for page change */
    onChange: _react.PropTypes.func
  },
  defaultProps: function defaultProps() {
    return {
      size: 5,
      page: -1,
      total: -1
    };
  }
});

exports.default = ApPager;
//# sourceMappingURL=data:application/json;base64,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QU0sQ0FBQyxDQUZGO0FBR0wsYUFBTyxDQUFDO0FBSEgsS0FBUDtBQUtEO0FBakJvQixDQUF2Qjs7a0JBb0JlLE8iLCJmaWxlIjoiYXBfcGFnZXIuanN4Iiwic291cmNlUm9vdCI6ImxpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogYXBlbWFuIHJlYWN0IHBhY2thZ2UgZm9yIHBhZ2VyIGNvbXBvbmVudHMuXG4gKiBAY2xhc3MgQXBQYWdlclxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG5pbXBvcnQgUmVhY3QsIHtDb21wb25lbnQsIFByb3BUeXBlcyBhcyB0eXBlc30gZnJvbSAncmVhY3QnXG5pbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IG51bWNhbCBmcm9tICdudW1jYWwnXG5pbXBvcnQgQXBQYWdlckl0ZW0gZnJvbSAnLi9hcF9wYWdlcl9pdGVtJ1xuXG4vKiogQGxlbmRzIEFwUGFnZXIgKi9cbmNsYXNzIEFwUGFnZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFNwZWNzXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBzdGF0ZSwgcHJvcHMgfSA9IHNcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17IGNsYXNzbmFtZXMoJ2FwLXBhZ2VyJywgcHJvcHMuY2xhc3NOYW1lKSB9XG4gICAgICAgICAgIHN0eWxlPXsgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMuc3R5bGUpIH0+XG4gICAgICAgIHsgcy5yZW5kZXJJdGVtcygpIH1cbiAgICAgICAgeyBwcm9wcy5jaGlsZHJlbiB9XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBMaWZlY3ljbGVcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gUHJpdmF0ZVxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS1cbiAgcmVuZGVySXRlbXMgKCkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMgfSA9IHNcbiAgICBsZXQgeyBwYWdlLCBzaXplLCB0b3RhbCwgb25DaGFuZ2UgfSA9IHByb3BzXG4gICAgbGV0IGl0ZW1zID0gW11cblxuICAgIGxldCBtaW4gPSAwXG4gICAgbGV0IG1heCA9IHRvdGFsIC0gMVxuICAgIGxldCBzaXplSGFsZiA9IHBhcnNlSW50KHNpemUgLyAyKVxuXG4gICAgbGV0IGZyb20gPSBudW1jYWwubWF4KG1pbiwgbnVtY2FsLm1pbihwYWdlIC0gc2l6ZUhhbGYsIG1heCAtIHNpemUgKyAxKSlcbiAgICBsZXQgdG8gPSBudW1jYWwubWluKG51bWNhbC5tYXgobWluICsgc2l6ZSAtIDEsIHBhZ2UgKyBzaXplSGFsZiksIG1heClcblxuICAgIGxldCBuZXdJdGVtID0gKGluZGV4LCB0aXRsZSkgPT4gKFxuICAgICAgPEFwUGFnZXJJdGVtIGtleT17IFsgaW5kZXgsIHRpdGxlIF0uam9pbignLScpIH1cbiAgICAgICAgICAgICAgICAgICBkYXRhPXsgaW5kZXggfVxuICAgICAgICAgICAgICAgICAgIHRpdGxlPXsgdGl0bGUgfVxuICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkPXsgaW5kZXggPT09IHBhZ2UgfVxuICAgICAgICAgICAgICAgICAgIG9uVGFwPXsgKHsgZGF0YTogcGFnZSB9KSA9PiBvbkNoYW5nZSh7IHBhZ2UgfSkgfVxuICAgICAgLz5cbiAgICApXG5cbiAgICBmb3IgKGxldCBpbmRleCA9IGZyb207IGluZGV4IDw9IHRvOyBpbmRleCsrKSB7XG4gICAgICBpdGVtcy5wdXNoKG5ld0l0ZW0oaW5kZXgsIFN0cmluZyhpbmRleCArIDEpKSlcbiAgICB9XG5cbiAgICBpZiAobWluIDwgcGFnZSkge1xuICAgICAgaXRlbXMudW5zaGlmdChuZXdJdGVtKHBhZ2UgLSAxLCAnwqsnKSlcbiAgICB9XG4gICAgaWYgKHBhZ2UgPCB0bykge1xuICAgICAgaXRlbXMucHVzaChuZXdJdGVtKHBhZ2UgKyAxLCAnwrsnKSlcbiAgICB9XG4gICAgcmV0dXJuIGl0ZW1zXG4gIH1cbn1cblxuT2JqZWN0LmFzc2lnbihBcFBhZ2VyLCB7XG4gIHByb3BUeXBlczoge1xuICAgIC8qKiBUb3RhbCBwYWdlIGNvdW50ICovXG4gICAgdG90YWw6IHR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgIC8qKiBDdXJyZW50IHBhZ2UgbnVtYmVyICovXG4gICAgcGFnZTogdHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gICAgLyoqIE51bWJlciBvZiBpdGVtcyB0byBzaG93ICovXG4gICAgc2l6ZTogdHlwZXMubnVtYmVyLFxuICAgIC8qKiBIYW5kbGVyIGZvciBwYWdlIGNoYW5nZSAqL1xuICAgIG9uQ2hhbmdlOiB0eXBlcy5mdW5jXG4gIH0sXG4gIGRlZmF1bHRQcm9wcyAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNpemU6IDUsXG4gICAgICBwYWdlOiAtMSxcbiAgICAgIHRvdGFsOiAtMVxuICAgIH1cbiAgfVxufSlcblxuZXhwb3J0IGRlZmF1bHQgQXBQYWdlclxuIl19