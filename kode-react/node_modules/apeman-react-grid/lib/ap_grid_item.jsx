/**
 * Item of grid.
 * @class ApGridItem
 */

'use strict'

import React, {PropTypes as types} from 'react'
import classnames from 'classnames'
import {ApPureMixin} from 'apeman-react-mixin-pure'
import {withTouch} from 'apeman-react-touchable'

/** @lends ApGridItem */
const ApGridItem = React.createClass({

  // --------------------
  // Specs
  // --------------------

  propTypes: {
    /** Item title text */
    title: types.string,
    /** Item context text */
    text: types.string,
    /** Item width */
    width: types.number,
    /** item height */
    height: types.number,
    /** Selected or not */
    selected: types.bool
  },

  mixins: [
    ApPureMixin
  ],

  statics: {},

  getInitialState () {
    return {}
  },

  getDefaultProps () {
    return {
      title: null,
      text: null,
      width: null,
      height: null,
      selected: false
    }
  },

  render () {
    const s = this
    let { state, props } = s

    let { width, height } = props
    let className = classnames('ap-grid-item', {
      'ap-grid-item-selected': props.selected
    }, props.className)

    return (
      <div className={ className }
           style={ Object.assign({
             width, height
           }, props.style) }>
        { s._renderTitle(props.title) }
        { s._renderText(props.text) }
        { props.children }
      </div>
    )
  },

  // --------------------
  // Lifecycle
  // --------------------

  componentWillMount () {
    const s = this
  },

  componentDidMount () {
    const s = this
  },

  componentWillReceiveProps (nextProps) {
    const s = this
  },

  componentWillUpdate (nextProps, nextState) {
    const s = this
  },

  componentDidUpdate (prevProps, prevState) {
    const s = this
  },

  componentWillUnmount () {
    const s = this
  },

  // ------------------
  // Custom
  // ------------------

  // ------------------
  // Private
  // ------------------

  _renderTitle (title) {
    if (!title) {
      return null
    }
    return (
      <h5 className='ap-grid-item-title'>{ title }</h5>
    )
  },

  _renderText (text) {
    if (!text) {
      return null
    }
    return (
      <p className='ap-grid-item-text'>{ text }</p>
    )
  }
})

export default ApGridItem
export default withTouch(ApGridItem, {
  // ------------------
  // For ApTouchMixin
  // ------------------

  getTouchData () {
    const s = this
    return s.props.data
  }
})
