/**
 * Slider component.
 * @class ApSlider
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _chopcal = require('chopcal');

var _chopcal2 = _interopRequireDefault(_chopcal);

var _rangecal = require('rangecal');

var _rangecal2 = _interopRequireDefault(_rangecal);

var _ap_slider_handle = require('./ap_slider_handle');

var _ap_slider_handle2 = _interopRequireDefault(_ap_slider_handle);

var _ap_slider_label = require('./ap_slider_label');

var _ap_slider_label2 = _interopRequireDefault(_ap_slider_label);

var _apemanReactTouchable = require('apeman-react-touchable');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApSlider */
var ApSlider = _react2.default.createClass({
  displayName: 'ApSlider',


  // --------------------
  // Specs
  // --------------------
  propTypes: {
    initial: _react.PropTypes.number,
    min: _react.PropTypes.number,
    max: _react.PropTypes.number,
    step: _react.PropTypes.number,
    onChange: _react.PropTypes.func,
    barOnly: _react.PropTypes.bool
  },

  statics: {},

  getInitialState: function getInitialState() {
    var s = this;
    var props = s.props;

    return {
      minX: 0,
      maxX: 1200,
      x: 0,
      value: props.initial
    };
  },
  getDefaultProps: function getDefaultProps() {
    return {
      initial: 50,
      min: 0,
      max: 100,
      step: 0.01,
      barOnly: false
    };
  },
  render: function render() {
    var s = this;
    var state = s.state;
    var props = s.props;


    return _react2.default.createElement(
      'div',
      { className: (0, _classnames2.default)('ap-slider', props.className) },
      _react2.default.createElement(
        'div',
        { className: 'ap-slider-inner' },
        s._renderLabel(props.min),
        _react2.default.createElement(
          'div',
          { className: 'ap-slider-bar-wrap' },
          _react2.default.createElement(
            _apemanReactTouchable.ApTouchable,
            { onTap: s.sliderBarDidTap },
            _react2.default.createElement(
              'div',
              { className: 'ap-slider-bar',
                ref: 'ap-slider-bar' },
              _react2.default.createElement('div', { className: 'ap-slider-bar-bg' }),
              _react2.default.createElement('div', { className: 'ap-slider-bar-highlight', style: { left: 0, width: state.x } })
            )
          ),
          _react2.default.createElement(_ap_slider_handle2.default, { onMove: s.sliderHandleDidMove,
            shouldMove: s.shouldSliderHandleMove,
            x: state.x,
            minX: state.minX,
            maxX: state.maxX,
            ref: 'ap-slider-handle' })
        ),
        s._renderLabel(props.max)
      )
    );
  },


  // --------------------
  // Lifecycle
  // --------------------

  componentDidMount: function componentDidMount() {
    var s = this;

    window.addEventListener('resize', s.resizeSlider);
    s.resizeSlider();
  },
  componentWillUnmount: function componentWillUnmount() {
    var s = this;
    window.removeEventListener('resize', s.resizeSlider);
  },


  // ------------------
  // Helper
  // ------------------

  resizeSlider: function resizeSlider(e) {
    var s = this;
    var w = _reactDom2.default.findDOMNode(s).offsetWidth;
    var handle = _reactDom2.default.findDOMNode(s.refs['ap-slider-handle']);
    var handleRadius = handle.offsetWidth / 2;
    var minX = 0 - handleRadius;
    var maxX = w - handleRadius;
    var rate = s._rateWithValue(s.state.value);
    s.setState({
      minX: minX,
      maxX: maxX,
      x: _rangecal2.default.value(minX, maxX, rate)
    });
  },
  sliderBarDidTap: function sliderBarDidTap(e) {
    var s = this;
    var state = s.state;
    var node = _reactDom2.default.findDOMNode(s);
    var left = node.offsetLeft;
    var minX = state.minX;
    var maxX = state.maxX;
    var x = e.center.x - left;
    var rate = _rangecal2.default.rate(minX, maxX, x);
    var value = s._valueWithRate(rate);
    s.setSliderValue(value);
  },
  sliderHandleDidMove: function sliderHandleDidMove(e) {
    var s = this;
    var state = s.state;
    var minX = state.minX;
    var maxX = state.maxX;

    var x = e.detail.x;
    var rate = _rangecal2.default.rate(minX, maxX, x + 2);
    var value = s._valueWithRate(rate);
    s.setSliderValue(value);
  },
  shouldSliderHandleMove: function shouldSliderHandleMove(p) {
    var s = this;
    return true;
  },
  setSliderValue: function setSliderValue(value) {
    var s = this;
    var state = s.state;
    var props = s.props;

    var step = props.step;
    var duplicate = state.value === value;
    if (duplicate) {
      return;
    }
    var minX = state.minX;
    var maxX = state.maxX;

    var rate = s._rateWithValue(value);
    s.setState({
      value: value,
      x: _rangecal2.default.value(minX, maxX, rate)
    });

    value = _chopcal2.default.round(value, step);

    if (s._value === value) {
      return;
    }

    s._value = value;

    if (props.onChange) {
      props.onChange(value, {
        element: s
      });
    }
  },


  // ------------------
  // Private
  // ------------------

  _rateWithValue: function _rateWithValue(value) {
    var s = this;
    var props = s.props;
    var min = props.min;
    var max = props.max;


    value = _rangecal2.default.round(min, max, value);
    return _chopcal2.default.round(_rangecal2.default.rate(min, max, value), 0.01);
  },
  _valueWithRate: function _valueWithRate(rate) {
    var s = this;
    var props = s.props;
    var min = props.min;
    var max = props.max;


    var value = _chopcal2.default.round(_rangecal2.default.value(min, max, rate), 0.01);
    return _rangecal2.default.round(min, max, value);
  },
  _renderLabel: function _renderLabel(value) {
    var s = this;
    var props = s.props;

    if (props.barOnly) {
      return null;
    }
    return _react2.default.createElement(_ap_slider_label2.default, { value: value });
  }
});

exports.default = ApSlider;
//# sourceMappingURL=data:application/json;base64,bnVsbA==