/**
 * Style for ApSelect.
 * @class ApSelectStyle
 */

'use strict'

import React, {Component, PropTypes as types} from 'react'
import {ApStyle} from 'apeman-react-style'
import acolor from 'acolor'

/** @lends ApSelectStyle */
class ApSelectStyle extends Component {
  render () {
    const s = this
    let { props } = s

    let { all, small, medium, large } = ApSelectStyle.styleData(props)

    return (
      <ApStyle data={ Object.assign(all, props.style) }
               smallMediaData={ small }
               mediumMediaData={ medium }
               largeMediaData={ large }
      >{ props.children }</ApStyle>
    )
  }
}

Object.assign(ApSelectStyle, {
  propTypes: {
    style: types.object,
    highlightColor: types.string,
    maxWidth: types.number
  },
  defaultProps: {
    style: {},
    maxWidth: ApStyle.CONTENT_WIDTH,
    highlightColor: ApStyle.DEFAULT_HIGHLIGHT_COLOR,
    backgroundColor: ApStyle.DEFAULT_BACKGROUND_COLOR
  },

  styleData (config) {
    let { highlightColor, maxWidth, backgroundColor } = config

    let minWidth = 240
    return {
      all: {
        '.ap-select-wrap': {
          position: 'relative',
          boxSizing: 'border-box',
          display: 'inline-block'
        },
        '.ap-select,.ap-select-dummy-text': {
          opacity: 0,
          zIndex: -99,
          position: 'absolute',
          display: 'block',
          width: 1,
          height: 1,
          overflow: 'hidden'
        },
        '.ap-select-options-list': {
          padding: 0,
          margin: 0,
          zIndex: 24,
          position: 'absolute',
          left: 0,
          top: 0,
          width: '100%',
          display: 'none',
          boxSizing: 'border-box',
          background: 'transparent',
          boxShadow: 'none',
          border: 'none'
        },
        '.ap-select-options-list-inner': {
          padding: 0,
          margin: 0,
          background: 'white',
          border: '1px solid #F0F0F0',
          boxShadow: '2px 2px 4px rgba(0,0,0,0.22)',
          borderRadius: '2px',
          width: '100%',
          minWidth: `${minWidth}px`,
          overflow: 'auto'
        },
        '.ap-select-options-list-visible': {
          display: 'block'
        },
        '.ap-select-options-list-item': {
          display: 'block',
          listStyle: 'none',
          padding: 0,
          margin: 0
        },
        '.ap-select-item': {
          display: 'block',
          padding: '4px 8px',
          fontSize: 'smaller',
          cursor: 'pointer',
          whiteSpace: 'nowrap',
          textOverflow: 'ellipsis',
          overflow: 'hidden'
        },
        '.ap-select-item-focused, .ap-select-item-focused:hover, .ap-select-item-focused:active': {
          textDecoration: 'none',
          backgroundColor: `${highlightColor}`,
          color: 'white'
        },
        '.ap-select-item:hover': {
          textDecoration: 'none',
          backgroundColor: `${acolor.alpha(highlightColor, 0.9)}`,
          color: 'white'
        },
        '.ap-select-item:active': {
          opacity: '0.9'
        },
        '.ap-select-label': {
          verticalAlign: 'middle',
          display: 'inline-flex',
          alignItems: 'center',
          padding: '4px 2px 4px 8px',
          color: 'inherit',
          fontSize: 'smaller',
          minHeight: '28px',
          minWidth: `${minWidth}px`,
          maxWidth: `${maxWidth}px`,
          cursor: 'pointer',
          background: 'white',
          boxSizing: 'border-box',
          borderRadius: '2px',
          border: '1px solid #CCC',
          justifyContent: 'space-between'
        },
        '.ap-select-label:hover': {
          background: '#FAFAFA'
        },
        '.ap-select-label:active': {
          background: '#F0F0F0'
        },
        '.ap-select-label-text': {
          padding: '0 4px'
        },
        '.ap-select-label-placeholder': {
          color: '#CCC'
        }
      }
    }
  }
})

export default ApSelectStyle
