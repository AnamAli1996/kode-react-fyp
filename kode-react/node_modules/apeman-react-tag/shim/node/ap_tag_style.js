/**
 * Style for ApTag.
 * @class ApTagStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/** @lends ApTagStyle */
var ApTagStyle = function (_Component) {
  _inherits(ApTagStyle, _Component);

  function ApTagStyle() {
    _classCallCheck(this, ApTagStyle);

    return _possibleConstructorReturn(this, (ApTagStyle.__proto__ || Object.getPrototypeOf(ApTagStyle)).apply(this, arguments));
  }

  _createClass(ApTagStyle, [{
    key: 'render',
    value: function render() {
      var s = this;
      var props = s.props;

      var _ApTagStyle$styleData = ApTagStyle.styleData(props);

      var all = _ApTagStyle$styleData.all;
      var small = _ApTagStyle$styleData.small;
      var medium = _ApTagStyle$styleData.medium;
      var large = _ApTagStyle$styleData.large;


      return _react2.default.createElement(
        _apemanReactStyle.ApStyle,
        { data: Object.assign(all, props.style),
          smallMediaData: small,
          mediumMediaData: medium,
          largeMediaData: large
        },
        props.children
      );
    }
  }]);

  return ApTagStyle;
}(_react.Component);

Object.assign(ApTagStyle, {
  propTypes: {
    style: _react.PropTypes.object,
    height: _react.PropTypes.number
  },
  defaultProps: {
    style: {},
    height: 16
  },
  styleData: function styleData(config) {
    var height = config.height;

    var dotSize = 4;
    var backgroundColor = '#888';
    return {
      all: {
        '.ap-tag': {
          display: 'inline-block',
          fontSize: '12px',
          padding: '0px 4px 0 0',
          margin: '0 8px 0 4px',
          textAlign: 'center',
          minWidth: '18px',
          lineHeight: height + 'px',
          color: 'white',
          backgroundColor: '' + backgroundColor,
          boxSizing: 'border-box',
          position: 'relative'
        },
        '.ap-tag-corner': {
          position: 'absolute',
          display: 'inline-block',
          width: '1px',
          height: 0,
          top: 0,
          left: -height / 2 + 'px',
          borderStyle: 'solid',
          boxSizing: 'border-box',
          borderWidth: height / 2 + 'px ' + height / 2 + 'px ' + height / 2 + 'px 0',
          borderColor: 'transparent ' + backgroundColor + ' transparent transparent'
        },
        '.ap-tag-dot': {
          display: 'inline-block',
          background: 'white',
          width: dotSize + 'px',
          height: dotSize + 'px',
          borderRadius: '50%',
          verticalAlign: 'middle',
          position: 'relative',
          top: '-1px',
          left: '-2px'
        },
        '.ap-tag-text': {
          display: 'inline-block',
          margin: '0 2px 0 0'
        }
      }
    };
  }
});

exports.default = ApTagStyle;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX3RhZ19zdHlsZS5qc3giXSwibmFtZXMiOlsiQXBUYWdTdHlsZSIsInMiLCJwcm9wcyIsInN0eWxlRGF0YSIsImFsbCIsInNtYWxsIiwibWVkaXVtIiwibGFyZ2UiLCJPYmplY3QiLCJhc3NpZ24iLCJzdHlsZSIsImNoaWxkcmVuIiwicHJvcFR5cGVzIiwib2JqZWN0IiwiaGVpZ2h0IiwibnVtYmVyIiwiZGVmYXVsdFByb3BzIiwiY29uZmlnIiwiZG90U2l6ZSIsImJhY2tncm91bmRDb2xvciIsImRpc3BsYXkiLCJmb250U2l6ZSIsInBhZGRpbmciLCJtYXJnaW4iLCJ0ZXh0QWxpZ24iLCJtaW5XaWR0aCIsImxpbmVIZWlnaHQiLCJjb2xvciIsImJveFNpemluZyIsInBvc2l0aW9uIiwid2lkdGgiLCJ0b3AiLCJsZWZ0IiwiYm9yZGVyU3R5bGUiLCJib3JkZXJXaWR0aCIsImJvcmRlckNvbG9yIiwiYmFja2dyb3VuZCIsImJvcmRlclJhZGl1cyIsInZlcnRpY2FsQWxpZ24iXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUtBOzs7Ozs7OztBQUVBOzs7O0FBQ0E7Ozs7Ozs7Ozs7QUFFQTtJQUNNQSxVOzs7Ozs7Ozs7Ozs2QkFDTTtBQUNSLFVBQU1DLElBQUksSUFBVjtBQURRLFVBRUZDLEtBRkUsR0FFUUQsQ0FGUixDQUVGQyxLQUZFOztBQUFBLGtDQUk0QkYsV0FBV0csU0FBWCxDQUFxQkQsS0FBckIsQ0FKNUI7O0FBQUEsVUFJRkUsR0FKRSx5QkFJRkEsR0FKRTtBQUFBLFVBSUdDLEtBSkgseUJBSUdBLEtBSkg7QUFBQSxVQUlVQyxNQUpWLHlCQUlVQSxNQUpWO0FBQUEsVUFJa0JDLEtBSmxCLHlCQUlrQkEsS0FKbEI7OztBQU1SLGFBQ0U7QUFBQTtBQUFBLFVBQVMsTUFBT0MsT0FBT0MsTUFBUCxDQUFjTCxHQUFkLEVBQW1CRixNQUFNUSxLQUF6QixDQUFoQjtBQUNTLDBCQUFpQkwsS0FEMUI7QUFFUywyQkFBa0JDLE1BRjNCO0FBR1MsMEJBQWlCQztBQUgxQjtBQUlHTCxjQUFNUztBQUpULE9BREY7QUFPRDs7Ozs7O0FBR0hILE9BQU9DLE1BQVAsQ0FBY1QsVUFBZCxFQUEwQjtBQUN4QlksYUFBVztBQUNURixXQUFPLGlCQUFNRyxNQURKO0FBRVRDLFlBQVEsaUJBQU1DO0FBRkwsR0FEYTtBQUt4QkMsZ0JBQWM7QUFDWk4sV0FBTyxFQURLO0FBRVpJLFlBQVE7QUFGSSxHQUxVO0FBU3hCWCxXQVR3QixxQkFTYmMsTUFUYSxFQVNMO0FBQUEsUUFDWEgsTUFEVyxHQUNBRyxNQURBLENBQ1hILE1BRFc7O0FBRWpCLFFBQUlJLFVBQVUsQ0FBZDtBQUNBLFFBQUlDLGtCQUFrQixNQUF0QjtBQUNBLFdBQU87QUFDTGYsV0FBSztBQUNILG1CQUFXO0FBQ1RnQixtQkFBUyxjQURBO0FBRVRDLG9CQUFVLE1BRkQ7QUFHVEMsbUJBQVMsYUFIQTtBQUlUQyxrQkFBUSxhQUpDO0FBS1RDLHFCQUFXLFFBTEY7QUFNVEMsb0JBQVUsTUFORDtBQU9UQyxzQkFBZVosTUFBZixPQVBTO0FBUVRhLGlCQUFPLE9BUkU7QUFTVFIsZ0NBQW9CQSxlQVRYO0FBVVRTLHFCQUFXLFlBVkY7QUFXVEMsb0JBQVU7QUFYRCxTQURSO0FBY0gsMEJBQWtCO0FBQ2hCQSxvQkFBVSxVQURNO0FBRWhCVCxtQkFBUyxjQUZPO0FBR2hCVSxpQkFBTyxLQUhTO0FBSWhCaEIsa0JBQVEsQ0FKUTtBQUtoQmlCLGVBQUssQ0FMVztBQU1oQkMsZ0JBQVMsQ0FBQ2xCLE1BQUQsR0FBVSxDQUFuQixPQU5nQjtBQU9oQm1CLHVCQUFhLE9BUEc7QUFRaEJMLHFCQUFXLFlBUks7QUFTaEJNLHVCQUFnQnBCLFNBQVMsQ0FBekIsV0FBZ0NBLFNBQVMsQ0FBekMsV0FBZ0RBLFNBQVMsQ0FBekQsU0FUZ0I7QUFVaEJxQix3Q0FBNEJoQixlQUE1QjtBQVZnQixTQWRmO0FBMEJILHVCQUFlO0FBQ2JDLG1CQUFTLGNBREk7QUFFYmdCLHNCQUFZLE9BRkM7QUFHYk4saUJBQVVaLE9BQVYsT0FIYTtBQUliSixrQkFBV0ksT0FBWCxPQUphO0FBS2JtQix3QkFBYyxLQUxEO0FBTWJDLHlCQUFlLFFBTkY7QUFPYlQsb0JBQVUsVUFQRztBQVFiRSxlQUFLLE1BUlE7QUFTYkMsZ0JBQU07QUFUTyxTQTFCWjtBQXFDSCx3QkFBZ0I7QUFDZFosbUJBQVMsY0FESztBQUVkRyxrQkFBUTtBQUZNO0FBckNiO0FBREEsS0FBUDtBQTRDRDtBQXpEdUIsQ0FBMUI7O2tCQTREZXZCLFUiLCJmaWxlIjoiYXBfdGFnX3N0eWxlLmpzeCIsInNvdXJjZVJvb3QiOiJsaWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFN0eWxlIGZvciBBcFRhZy5cbiAqIEBjbGFzcyBBcFRhZ1N0eWxlXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQsIFByb3BUeXBlcyBhcyB0eXBlcyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQXBTdHlsZSB9IGZyb20gJ2FwZW1hbi1yZWFjdC1zdHlsZSdcblxuLyoqIEBsZW5kcyBBcFRhZ1N0eWxlICovXG5jbGFzcyBBcFRhZ1N0eWxlIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyICgpIHtcbiAgICBjb25zdCBzID0gdGhpc1xuICAgIGxldCB7IHByb3BzIH0gPSBzXG5cbiAgICBsZXQgeyBhbGwsIHNtYWxsLCBtZWRpdW0sIGxhcmdlIH0gPSBBcFRhZ1N0eWxlLnN0eWxlRGF0YShwcm9wcylcblxuICAgIHJldHVybiAoXG4gICAgICA8QXBTdHlsZSBkYXRhPXsgT2JqZWN0LmFzc2lnbihhbGwsIHByb3BzLnN0eWxlKSB9XG4gICAgICAgICAgICAgICBzbWFsbE1lZGlhRGF0YT17IHNtYWxsIH1cbiAgICAgICAgICAgICAgIG1lZGl1bU1lZGlhRGF0YT17IG1lZGl1bSB9XG4gICAgICAgICAgICAgICBsYXJnZU1lZGlhRGF0YT17IGxhcmdlIH1cbiAgICAgID57IHByb3BzLmNoaWxkcmVuIH08L0FwU3R5bGU+XG4gICAgKVxuICB9XG59XG5cbk9iamVjdC5hc3NpZ24oQXBUYWdTdHlsZSwge1xuICBwcm9wVHlwZXM6IHtcbiAgICBzdHlsZTogdHlwZXMub2JqZWN0LFxuICAgIGhlaWdodDogdHlwZXMubnVtYmVyXG4gIH0sXG4gIGRlZmF1bHRQcm9wczoge1xuICAgIHN0eWxlOiB7fSxcbiAgICBoZWlnaHQ6IDE2XG4gIH0sXG4gIHN0eWxlRGF0YSAoY29uZmlnKSB7XG4gICAgbGV0IHsgaGVpZ2h0IH0gPSBjb25maWdcbiAgICBsZXQgZG90U2l6ZSA9IDRcbiAgICBsZXQgYmFja2dyb3VuZENvbG9yID0gJyM4ODgnXG4gICAgcmV0dXJuIHtcbiAgICAgIGFsbDoge1xuICAgICAgICAnLmFwLXRhZyc6IHtcbiAgICAgICAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICAgICAgICBmb250U2l6ZTogJzEycHgnLFxuICAgICAgICAgIHBhZGRpbmc6ICcwcHggNHB4IDAgMCcsXG4gICAgICAgICAgbWFyZ2luOiAnMCA4cHggMCA0cHgnLFxuICAgICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgICAgICAgbWluV2lkdGg6ICcxOHB4JyxcbiAgICAgICAgICBsaW5lSGVpZ2h0OiBgJHtoZWlnaHR9cHhgLFxuICAgICAgICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogYCR7YmFja2dyb3VuZENvbG9yfWAsXG4gICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZSdcbiAgICAgICAgfSxcbiAgICAgICAgJy5hcC10YWctY29ybmVyJzoge1xuICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgICAgICAgIHdpZHRoOiAnMXB4JyxcbiAgICAgICAgICBoZWlnaHQ6IDAsXG4gICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgIGxlZnQ6IGAkey1oZWlnaHQgLyAyfXB4YCxcbiAgICAgICAgICBib3JkZXJTdHlsZTogJ3NvbGlkJyxcbiAgICAgICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICAgICAgICBib3JkZXJXaWR0aDogYCR7aGVpZ2h0IC8gMn1weCAke2hlaWdodCAvIDJ9cHggJHtoZWlnaHQgLyAyfXB4IDBgLFxuICAgICAgICAgIGJvcmRlckNvbG9yOiBgdHJhbnNwYXJlbnQgJHtiYWNrZ3JvdW5kQ29sb3J9IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50YFxuICAgICAgICB9LFxuICAgICAgICAnLmFwLXRhZy1kb3QnOiB7XG4gICAgICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgICAgICAgYmFja2dyb3VuZDogJ3doaXRlJyxcbiAgICAgICAgICB3aWR0aDogYCR7ZG90U2l6ZX1weGAsXG4gICAgICAgICAgaGVpZ2h0OiBgJHtkb3RTaXplfXB4YCxcbiAgICAgICAgICBib3JkZXJSYWRpdXM6ICc1MCUnLFxuICAgICAgICAgIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLFxuICAgICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgICAgICAgIHRvcDogJy0xcHgnLFxuICAgICAgICAgIGxlZnQ6ICctMnB4J1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLXRhZy10ZXh0Jzoge1xuICAgICAgICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgICAgICAgIG1hcmdpbjogJzAgMnB4IDAgMCdcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufSlcblxuZXhwb3J0IGRlZmF1bHQgQXBUYWdTdHlsZVxuIl19