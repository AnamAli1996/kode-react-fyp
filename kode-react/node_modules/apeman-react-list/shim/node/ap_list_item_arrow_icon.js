/**
 * List item arrow icon component.
 * @class ApListItemArrowIcon
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _ap_list_item_icon = require('./ap_list_item_icon');

var _ap_list_item_icon2 = _interopRequireDefault(_ap_list_item_icon);

var _asobj = require('asobj');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApListItemArrowIcon */
var ApListItemArrowIcon = _react2.default.createClass({
  displayName: 'ApListItemArrowIcon',


  // --------------------
  // Specs
  // --------------------

  propTypes: {
    direction: _react.PropTypes.oneOf(['up', 'down', 'right', 'left'])
  },

  mixins: [],

  statics: {},

  getInitialState: function getInitialState() {
    return {};
  },
  getDefaultProps: function getDefaultProps() {
    return {
      direction: 'right'
    };
  },
  render: function render() {
    var s = this;
    var props = s.props;

    var className = (0, _classnames2.default)('ap-list-item-arrow-icon', 'fa fa-angle-' + props.direction, props.className);
    return _react2.default.createElement(_ap_list_item_icon2.default, { className: className,
      style: (0, _assign2.default)({}, props.style) });
  },


  // --------------------
  // Lifecycle
  // --------------------

  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    var s = this;
    var props = s.props,
        state = s.state;

    return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
  }
});

exports.default = ApListItemArrowIcon;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2xpc3RfaXRlbV9hcnJvd19pY29uLmpzeCJdLCJuYW1lcyI6WyJBcExpc3RJdGVtQXJyb3dJY29uIiwiY3JlYXRlQ2xhc3MiLCJwcm9wVHlwZXMiLCJkaXJlY3Rpb24iLCJvbmVPZiIsIm1peGlucyIsInN0YXRpY3MiLCJnZXRJbml0aWFsU3RhdGUiLCJnZXREZWZhdWx0UHJvcHMiLCJyZW5kZXIiLCJzIiwicHJvcHMiLCJjbGFzc05hbWUiLCJzdHlsZSIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIm5leHRQcm9wcyIsIm5leHRTdGF0ZSIsInN0YXRlIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFLQTs7Ozs7Ozs7OztBQUVBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBRUE7QUFDQSxJQUFNQSxzQkFBc0IsZ0JBQU1DLFdBQU4sQ0FBa0I7QUFBQTs7O0FBRTVDO0FBQ0E7QUFDQTs7QUFFQUMsYUFBVztBQUNUQyxlQUFXLGlCQUFNQyxLQUFOLENBQVksQ0FDckIsSUFEcUIsRUFFckIsTUFGcUIsRUFHckIsT0FIcUIsRUFJckIsTUFKcUIsQ0FBWjtBQURGLEdBTmlDOztBQWU1Q0MsVUFBUSxFQWZvQzs7QUFpQjVDQyxXQUFTLEVBakJtQzs7QUFtQjVDQyxpQkFuQjRDLDZCQW1CekI7QUFDakIsV0FBTyxFQUFQO0FBQ0QsR0FyQjJDO0FBdUI1Q0MsaUJBdkI0Qyw2QkF1QnpCO0FBQ2pCLFdBQU87QUFDTEwsaUJBQVc7QUFETixLQUFQO0FBR0QsR0EzQjJDO0FBNkI1Q00sUUE3QjRDLG9CQTZCbEM7QUFDUixRQUFNQyxJQUFJLElBQVY7QUFEUSxRQUVGQyxLQUZFLEdBRVFELENBRlIsQ0FFRkMsS0FGRTs7QUFHUixRQUFJQyxZQUFZLDBCQUFXLHlCQUFYLG1CQUFxREQsTUFBTVIsU0FBM0QsRUFBd0VRLE1BQU1DLFNBQTlFLENBQWhCO0FBQ0EsV0FDRSw2REFBZ0IsV0FBWUEsU0FBNUI7QUFDZ0IsYUFBUSxzQkFBYyxFQUFkLEVBQWtCRCxNQUFNRSxLQUF4QixDQUR4QixHQURGO0FBS0QsR0F0QzJDOzs7QUF3QzVDO0FBQ0E7QUFDQTs7QUFFQUMsdUJBNUM0QyxpQ0E0Q3JCQyxTQTVDcUIsRUE0Q1ZDLFNBNUNVLEVBNENDO0FBQzNDLFFBQU1OLElBQUksSUFBVjtBQUQyQyxRQUVyQ0MsS0FGcUMsR0FFcEJELENBRm9CLENBRXJDQyxLQUZxQztBQUFBLFFBRTlCTSxLQUY4QixHQUVwQlAsQ0FGb0IsQ0FFOUJPLEtBRjhCOztBQUczQyxXQUFPLENBQUMseUJBQWFOLEtBQWIsRUFBb0JJLFNBQXBCLENBQUQsSUFBbUMseUJBQWFFLEtBQWIsRUFBb0JELFNBQXBCLENBQTFDO0FBQ0Q7QUFoRDJDLENBQWxCLENBQTVCOztrQkFvRGVoQixtQiIsImZpbGUiOiJhcF9saXN0X2l0ZW1fYXJyb3dfaWNvbi5qc3giLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaXN0IGl0ZW0gYXJyb3cgaWNvbiBjb21wb25lbnQuXG4gKiBAY2xhc3MgQXBMaXN0SXRlbUFycm93SWNvblxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG5pbXBvcnQgUmVhY3QsIHtQcm9wVHlwZXMgYXMgdHlwZXN9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcydcbmltcG9ydCBBcExpc3RJdGVtSWNvbiBmcm9tICcuL2FwX2xpc3RfaXRlbV9pY29uJ1xuaW1wb3J0IHtzaGFsbG93RXF1YWx9IGZyb20gJ2Fzb2JqJ1xuXG4vKiogQGxlbmRzIEFwTGlzdEl0ZW1BcnJvd0ljb24gKi9cbmNvbnN0IEFwTGlzdEl0ZW1BcnJvd0ljb24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gU3BlY3NcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICBwcm9wVHlwZXM6IHtcbiAgICBkaXJlY3Rpb246IHR5cGVzLm9uZU9mKFtcbiAgICAgICd1cCcsXG4gICAgICAnZG93bicsXG4gICAgICAncmlnaHQnLFxuICAgICAgJ2xlZnQnXG4gICAgXSlcbiAgfSxcblxuICBtaXhpbnM6IFtdLFxuXG4gIHN0YXRpY3M6IHt9LFxuXG4gIGdldEluaXRpYWxTdGF0ZSAoKSB7XG4gICAgcmV0dXJuIHt9XG4gIH0sXG5cbiAgZ2V0RGVmYXVsdFByb3BzICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZGlyZWN0aW9uOiAncmlnaHQnXG4gICAgfVxuICB9LFxuXG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcyB9ID0gc1xuICAgIGxldCBjbGFzc05hbWUgPSBjbGFzc25hbWVzKCdhcC1saXN0LWl0ZW0tYXJyb3ctaWNvbicsIGBmYSBmYS1hbmdsZS0ke3Byb3BzLmRpcmVjdGlvbn1gLCBwcm9wcy5jbGFzc05hbWUpXG4gICAgcmV0dXJuIChcbiAgICAgIDxBcExpc3RJdGVtSWNvbiBjbGFzc05hbWU9eyBjbGFzc05hbWUgfVxuICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXsgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMuc3R5bGUpIH0+XG4gICAgICA8L0FwTGlzdEl0ZW1JY29uPlxuICAgIClcbiAgfSxcblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBMaWZlY3ljbGVcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICBzaG91bGRDb21wb25lbnRVcGRhdGUgKG5leHRQcm9wcywgbmV4dFN0YXRlKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcywgc3RhdGUgfSA9IHNcbiAgICByZXR1cm4gIXNoYWxsb3dFcXVhbChwcm9wcywgbmV4dFByb3BzKSB8fCBzaGFsbG93RXF1YWwoc3RhdGUsIG5leHRTdGF0ZSlcbiAgfVxuXG59KVxuXG5leHBvcnQgZGVmYXVsdCBBcExpc3RJdGVtQXJyb3dJY29uXG4iXX0=