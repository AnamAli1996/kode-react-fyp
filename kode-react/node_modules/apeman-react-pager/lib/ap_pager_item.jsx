/**
 * apeman react package for pager components.
 * @class ApPagerItem
 */

'use strict'

import React, {Component, PropTypes as types} from 'react'
import classnames from 'classnames'
import {shallowEqual} from 'asobj'
import {withTouch} from 'apeman-react-touchable'

/** @lends ApPagerItem */
class ApPagerItem extends Component {
  render () {
    const s = this
    let { props } = s

    let className = classnames('ap-pager-item', {
      'ap-pager-item-selected': props.selected
    }, props.className)
    return (
      <a className={ className }
         style={ Object.assign({}, props.style) }
      >
        <span className='ap-pager-item-inner'>
        { props.title }
          { props.children }
        </span>
      </a>
    )
  }

  shouldComponentUpdate (nextProps, nextState) {
    const s = this
    let { props, state } = s
    return !shallowEqual(props, nextProps) || shallowEqual(state, nextState)
  }

}

Object.assign(ApPagerItem, {
  // --------------------
  // Specs
  // --------------------

  propTypes: {
    /** Text */
    title: types.string,
    /** Selected or not */
    selected: types.bool,
    /** Data for event */
    data: types.any
  },

  defaultProps: {
    selected: false
  }

})

export default ApPagerItem // Dummy export for doc parser
export default withTouch(ApPagerItem, {
  getTouchData () {
    const s = this
    let { props } = s
    return props.data
  }
})
