/**
 * apeman react package label component.
 * @class ApLabel
 */

'use strict'

import React, {PropTypes as types} from 'react'
import classnames from 'classnames'
import {clone} from 'asobj'
import {withTouch} from 'apeman-react-touchable'
import {ApPureMixin} from 'apeman-react-mixin-pure'

/** @lends ApLabel */
const ApLabel = React.createClass({

  // --------------------
  // Specs
  // --------------------

  propTypes: {
    htmlFor: types.string
  },

  mixins: [
    ApPureMixin
  ],

  statics: {},

  getInitialState () {
    return {}
  },

  getDefaultProps () {
    return {
      htmlFor: null
    }
  },

  render () {
    const s = this
    let { props } = s
    let labelProps = clone(props, {
      without: 'hasTouch'
    })
    return (
      <label { ...labelProps }
             className={ classnames('ap-label', props.className) }
             htmlFor={ props.htmlFor }
      >{ props.children }</label>
    )
  },

  // --------------------
  // For ApTouchMixin
  // --------------------
  getTouchData () {
    const s = this
    let { props } = s
    return props.data
  }
})

export default ApLabel // Dummy export for duc parser
export default withTouch(ApLabel)
