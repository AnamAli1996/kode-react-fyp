/**
 * Style for ApCatalog.
 * @class ApCatalogStyle
 */

'use strict'

import React, {PropTypes as types} from 'react'
import {ApStyle} from 'apeman-react-style'

/** @lends ApCatalogStyle */
const ApCatalogStyle = React.createClass({
  propTypes: {
    style: types.object,
    highlightColor: types.string
  },
  getDefaultProps () {
    return {
      style: {},
      highlightColor: ApStyle.DEFAULT_HIGHLIGHT_COLOR,
      backgroundColor: ApStyle.DEFAULT_BACKGROUND_COLOR,
      transitionDuration: 500
    }
  },
  statics: {
    styleData (config) {
      let { highlightColor, backgroundColor, transitionDuration } = config
      return {
        all: {
          '.ap-catalog': {
            display: 'block',
            margin: '0 auto'
          },
          '.ap-catalog-inner': {
            display: 'flex',
            flexFlow: 'row wrap',
            justifyContent: 'flex-start'
          },
          '.ap-menu-inner-end': {
            flex: 'auto',
            display: 'inline-block',
            width: '0px',
            opacity: 0
          },
          '.ap-catalog-item': {
            display: 'block'
          },
          '.ap-catalog-item-summary': {
            padding: '8px 16px',
            border: '1px solid #AAA',
            margin: '-1px'
          },
          '.ap-catalog-item-summary:hover': {
            cursor: 'pointer'
          },
          '.ap-catalog-item-summary:active': {
            opacity: '0.8'
          },
          '.ap-catalog-item-detail': {
            display: 'none',
            position: 'fixed',
            left: 0,
            top: 0,
            width: '100%',
            height: '100%',
            zIndex: 8,
            background: 'white',
            padding: '16px 32px',
            boxSizing: 'border-box'
          },
          '.ap-catalog-item-detail-at-left': {
            left: '-100%'
          },
          '.ap-catalog-item-detail-at-top': {
            top: '-100%'
          },
          '.ap-catalog-item-detail-at-right': {
            left: '100%'
          },
          '.ap-catalog-item-detail-at-bottom': {
            top: '100%'
          },
          '.ap-catalog-item-detail-open': {
            display: 'block',
            transition: `left ${transitionDuration}ms, top ${transitionDuration}ms`
          }

        }
      }
    }
  },
  render () {
    const s = this
    let { props } = s

    let { all, small, medium, large } = ApCatalogStyle.styleData(props)

    return (
      <ApStyle data={ Object.assign(all, props.style) }
               smallMediaData={ small }
               mediumMediaData={ medium }
               largeMediaData={ large }
      >{ props.children }</ApStyle>
    )
  }
})

export default ApCatalogStyle
