/**
 * Item of grid.
 * @class ApGridItem
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _apemanReactMixinPure = require('apeman-react-mixin-pure');

var _apemanReactTouchable = require('apeman-react-touchable');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApGridItem */
var ApGridItem = _react2.default.createClass({
  displayName: 'ApGridItem',


  // --------------------
  // Specs
  // --------------------

  propTypes: {
    /** Item title text */
    title: _react.PropTypes.string,
    /** Item context text */
    text: _react.PropTypes.string,
    /** Item width */
    width: _react.PropTypes.number,
    /** item height */
    height: _react.PropTypes.number,
    /** Selected or not */
    selected: _react.PropTypes.bool
  },

  mixins: [_apemanReactMixinPure.ApPureMixin],

  statics: {},

  getInitialState: function getInitialState() {
    return {};
  },
  getDefaultProps: function getDefaultProps() {
    return {
      title: null,
      text: null,
      width: null,
      height: null,
      selected: false
    };
  },
  render: function render() {
    var s = this;
    var state = s.state;
    var props = s.props;
    var width = props.width;
    var height = props.height;

    var className = (0, _classnames2.default)('ap-grid-item', {
      'ap-grid-item-selected': props.selected
    }, props.className);

    return _react2.default.createElement(
      'div',
      { className: className,
        style: Object.assign({
          width: width, height: height
        }, props.style) },
      s._renderTitle(props.title),
      s._renderText(props.text),
      props.children
    );
  },


  // --------------------
  // Lifecycle
  // --------------------

  componentWillMount: function componentWillMount() {
    var s = this;
  },
  componentDidMount: function componentDidMount() {
    var s = this;
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var s = this;
  },
  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
    var s = this;
  },
  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
    var s = this;
  },
  componentWillUnmount: function componentWillUnmount() {
    var s = this;
  },


  // ------------------
  // Custom
  // ------------------

  // ------------------
  // Private
  // ------------------

  _renderTitle: function _renderTitle(title) {
    if (!title) {
      return null;
    }
    return _react2.default.createElement(
      'h5',
      { className: 'ap-grid-item-title' },
      title
    );
  },
  _renderText: function _renderText(text) {
    if (!text) {
      return null;
    }
    return _react2.default.createElement(
      'p',
      { className: 'ap-grid-item-text' },
      text
    );
  }
});

exports.default = ApGridItem;
exports.default = (0, _apemanReactTouchable.withTouch)(ApGridItem, {
  // ------------------
  // For ApTouchMixin
  // ------------------

  getTouchData: function getTouchData() {
    var s = this;
    return s.props.data;
  }
});
//# sourceMappingURL=data:application/json;base64,bnVsbA==