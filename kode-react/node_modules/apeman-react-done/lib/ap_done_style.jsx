/**
 * Style for ApDone.
 * @class ApDoneStyle
 */

'use strict'

import React, {Component, PropTypes as types} from 'react'
import {ApStyle} from 'apeman-react-style'

/** @lends ApDoneStyle */
class ApDoneStyle extends Component {
  render () {
    const s = this
    let { props } = s

    let { all, small, medium, large } = ApDoneStyle.styleData(props)

    return (
      <ApStyle data={ Object.assign(all, props.style) }
               smallMediaData={ small }
               mediumMediaData={ medium }
               largeMediaData={ large }
      >{ props.children }</ApStyle>
    )
  }
}

Object.assign(ApDoneStyle, {
  propTypes: {
    style: types.object,
    highlightColor: types.string
  },

  defaultProps: {
    style: {},
    highlightColor: ApStyle.DEFAULT_HIGHLIGHT_COLOR,
    backgroundColor: ApStyle.DEFAULT_BACKGROUND_COLOR
  },
  styleData (config) {
    let { highlightColor, backgroundColor } = config
    return {
      all: {
        '.ap-done': {
          textAlign: 'center'
        },
        '.ap-done-button-container': {
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center'
        },
        '.ap-done-button': {
          fontSize: '11px',
          padding: '4px 16px'
        },
        '.ap-done-link': {
          display: 'inline-block',
          padding: '8px 16px',
          color: `${highlightColor}`,
          textDecoration: 'underline',
          fontSize: '14px'
        },
        '.ap-done-link:hover': {},
        '.ap-done-link:active': {
          opacity: '0.8'
        }
      }

    }
  }
})

export default ApDoneStyle
