/**
 * apeman react package for pager components.
 * @class ApPager
 */

'use strict'

import React, {Component, PropTypes as types} from 'react'
import classnames from 'classnames'
import numcal from 'numcal'
import ApPagerItem from './ap_pager_item'

/** @lends ApPager */
class ApPager extends Component {

  // --------------------
  // Specs
  // --------------------
  render () {
    const s = this
    let { state, props } = s

    return (
      <div className={ classnames('ap-pager', props.className) }
           style={ Object.assign({}, props.style) }>
        { s.renderItems() }
        { props.children }
      </div>
    )
  }

  // --------------------
  // Lifecycle
  // --------------------

  // ------------------
  // Private
  // ------------------
  renderItems () {
    const s = this
    let { props } = s
    let { page, size, total, onChange } = props
    let items = []

    let min = 0
    let max = total - 1
    let sizeHalf = parseInt(size / 2)

    let from = numcal.max(min, numcal.min(page - sizeHalf, max - size + 1))
    let to = numcal.min(numcal.max(min + size - 1, page + sizeHalf), max)

    let newItem = (index, title) => (
      <ApPagerItem key={ [ index, title ].join('-') }
                   data={ index }
                   title={ title }
                   selected={ index === page }
                   onTap={ ({ data: page }) => onChange({ page }) }
      />
    )

    for (let index = from; index <= to; index++) {
      items.push(newItem(index, String(index + 1)))
    }

    if (min < page) {
      items.unshift(newItem(page - 1, '«'))
    }
    if (page < to) {
      items.push(newItem(page + 1, '»'))
    }
    return items
  }
}

Object.assign(ApPager, {
  propTypes: {
    /** Total page count */
    total: types.number.isRequired,
    /** Current page number */
    page: types.number.isRequired,
    /** Number of items to show */
    size: types.number,
    /** Handler for page change */
    onChange: types.func
  },
  defaultProps () {
    return {
      size: 5,
      page: -1,
      total: -1
    }
  }
})

export default ApPager
