/**
 * Chat item
 * @class ApChatItem
 */

'use strict'

import React, {PropTypes as types} from 'react'
import classnames from 'classnames'

function formatDate (date) {
  if (!date) {
    return ''
  }
  return String(date)
}

/** @lends ApChatItem */
const ApChatItem = React.createClass({

  // --------------------
  // Specs
  // --------------------

  propTypes: {
    /** Balloon text */
    text: types.string,
    /** Align direction */
    align: types.oneOf([ 'left', 'right' ]),
    /** Info texts */
    info: types.oneOfType([
      types.array,
      types.string
    ])
  },

  mixins: [],

  statics: {},

  getInitialState () {
    return {}
  },

  getDefaultProps () {
    return {
      text: null,
      align: 'left',
      info: null
    }
  },

  render () {
    const s = this
    let { state, props } = s

    return (
      <div className={ classnames('ap-chat-item', `ap-chat-item-align-${props.align}`, {
        
      } ,props.className) }
           style={ Object.assign({}, props.style) }>
        { s._renderBalloon([].concat(props.text)) }
        { s._renderInfo(props.info) }
        { props.children }
      </div>
    )
  },

  // --------------------
  // Lifecycle
  // --------------------

  componentWillMount () {
    const s = this
  },

  componentDidMount () {
    const s = this
  },

  componentWillReceiveProps (nextProps) {
    const s = this
  },

  shouldComponentUpdate (nextProps, nextState) {
    const s = this
    return true
  },

  componentWillUpdate (nextProps, nextState) {
    const s = this
  },

  componentDidUpdate (prevProps, prevState) {
    const s = this
  },

  componentWillUnmount () {
    const s = this
  },

  // ------------------
  // Custom
  // ------------------

  // ------------------
  // Private
  // ------------------

  _renderInfo (info) {
    const s = this
    if (!info) {
      return null
    }
    info = [].concat(info)
    return (
      <span className="ap-chat-item-info">
        {
          info.map((info) => (
            <span key={ info }>{ info }</span>
          ))
        }
      </span>
    )
  },

  _renderBalloon (text) {
    const s = this
    if (!text) {
      return null
    }
    return (
      <span className="ap-chat-item-balloon">
        <span className="ap-chat-item-balloon-arrow"/>
        <span className="ap-chat-item-balloon-content">
        { text }
        </span>
      </span>
    )
  }
})

export default ApChatItem
