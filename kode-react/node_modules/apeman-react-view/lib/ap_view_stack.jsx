/**
 * Stack for views.
 * @class ApViewStack
 */

'use strict'

import React, {Component, PropTypes as types} from 'react'
import classnames from 'classnames'
import ReactCSSTransitionGroup from 'react-addons-css-transition-group'

/** @lends ApViewStack */
class ApViewStack extends Component {
  render () {
    const s = this
    let { props } = s

    let { transitionTimeout, fixed } = props
    let className = classnames('ap-view-stack', {
      'ap-view-stack-empty': React.Children.count(props.children) === 0,
      'ap-view-stack-fixed': fixed
    }, props.className)
    return (
      <div className={ className }
           style={ Object.assign({}, props.style) }>
        <ReactCSSTransitionGroup component='div'
                                 className='ap-view-stack-inner'
                                 transitionName='ap-view-stack-transition'
                                 transitionEnterTimeout={ transitionTimeout }
                                 transitionLeaveTimeout={ transitionTimeout }
        >
          {
            // Reverse children so that last view coming first
            React.Children.toArray(props.children).reverse()
          }
        </ReactCSSTransitionGroup>
      </div>
    )
  }
}

Object.assign(ApViewStack, {
  // --------------------
  // Specs
  // --------------------

  propTypes: {
    /** Duration for transition */
    transitionTimeout: types.number,
    fixed: types.bool
  },

  defaultProps: {
    transitionTimeout: 400,
    fixed: false
  }
})

export default ApViewStack
