/**
 * Style for ApField.
 * @class ApFieldStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApFieldStyle */
var ApFieldStyle = function (_Component) {
  (0, _inherits3.default)(ApFieldStyle, _Component);

  function ApFieldStyle() {
    (0, _classCallCheck3.default)(this, ApFieldStyle);
    return (0, _possibleConstructorReturn3.default)(this, (ApFieldStyle.__proto__ || (0, _getPrototypeOf2.default)(ApFieldStyle)).apply(this, arguments));
  }

  (0, _createClass3.default)(ApFieldStyle, [{
    key: 'render',
    value: function render() {
      var s = this;
      var props = s.props;

      var _ApFieldStyle$styleDa = ApFieldStyle.styleData(props);

      var all = _ApFieldStyle$styleDa.all;
      var small = _ApFieldStyle$styleDa.small;
      var medium = _ApFieldStyle$styleDa.medium;
      var large = _ApFieldStyle$styleDa.large;


      return _react2.default.createElement(
        _apemanReactStyle.ApStyle,
        { data: (0, _assign2.default)(all, props.style),
          smallMediaData: small,
          mediumMediaData: medium,
          largeMediaData: large
        },
        props.children
      );
    }
  }]);
  return ApFieldStyle;
}(_react.Component);

(0, _assign2.default)(ApFieldStyle, {
  propTypes: {
    style: _react.PropTypes.object
  },
  defaultProps: {
    style: {}
  },
  styleData: function styleData(config) {
    var hPadding = 8;
    return {
      all: {
        '.ap-field': {
          display: 'block',
          margin: '4px 0'
        },
        '.ap-field-inner': {
          display: 'block',
          maxWidth: '480px'
        },
        '.ap-field-label': {
          display: 'block',
          fontSize: '14px',
          minWidth: 96,
          padding: 0,
          margin: 0,
          textAlign: 'left',
          boxSizing: 'border-box'
        },
        '.ap-field-label-inner': {
          display: 'block',
          fontSize: '12px',
          padding: '4px ' + hPadding + 'px 0',
          color: '#888',
          boxSizing: 'border-box'
        },
        '.ap-field-value': {
          display: 'block',
          width: '100%',
          padding: '0 ' + hPadding + 'px',
          boxSizing: 'border-box'
        },
        '.ap-field-value .ap-text-wrap, .ap-field-value .ap-password-wrap': {
          margin: 0,
          padding: 0
        },
        '.ap-field-value .ap-text, .ap-field-value .ap-password': {
          width: '100%',
          boxSizing: 'border-box',
          margin: '2px 0'
        },
        '.ap-field-set': {
          borderStyle: 'solid',
          borderRadius: '2px'
        },
        '.ap-field-set-plain': {
          border: 'none',
          padding: 0,
          margin: 0
        },
        '.ap-field-legend': {
          padding: '0 4px'
        },
        '.ap-field-align-center .ap-field-inner': {
          textAlign: 'center',
          display: 'block'
        }
      },
      small: {
        '.ap-field-inner': {
          display: 'flex',
          alignItems: 'center'
        },
        '.ap-field-label': {
          display: 'inline-block',
          padding: 0,
          margin: 0
        },
        '.ap-field-label-inner': {
          display: 'inline-block',
          minWidth: '48px',
          fontSize: 'inherit',
          padding: '8px ' + hPadding + 'px'
        },
        '.ap-field-value': {
          verticalAlign: 'middle',
          padding: '4px 8px'
        }
      }
    };
  }
});

exports.default = ApFieldStyle;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2ZpZWxkX3N0eWxlLmpzeCJdLCJuYW1lcyI6WyJBcEZpZWxkU3R5bGUiLCJzIiwicHJvcHMiLCJzdHlsZURhdGEiLCJhbGwiLCJzbWFsbCIsIm1lZGl1bSIsImxhcmdlIiwic3R5bGUiLCJjaGlsZHJlbiIsInByb3BUeXBlcyIsIm9iamVjdCIsImRlZmF1bHRQcm9wcyIsImNvbmZpZyIsImhQYWRkaW5nIiwiZGlzcGxheSIsIm1hcmdpbiIsIm1heFdpZHRoIiwiZm9udFNpemUiLCJtaW5XaWR0aCIsInBhZGRpbmciLCJ0ZXh0QWxpZ24iLCJib3hTaXppbmciLCJjb2xvciIsIndpZHRoIiwiYm9yZGVyU3R5bGUiLCJib3JkZXJSYWRpdXMiLCJib3JkZXIiLCJhbGlnbkl0ZW1zIiwidmVydGljYWxBbGlnbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBOzs7O0FBQ0E7Ozs7QUFFQTtJQUNNQSxZOzs7Ozs7Ozs7OzZCQUNNO0FBQ1IsVUFBTUMsSUFBSSxJQUFWO0FBRFEsVUFFRkMsS0FGRSxHQUVRRCxDQUZSLENBRUZDLEtBRkU7O0FBQUEsa0NBSTRCRixhQUFhRyxTQUFiLENBQXVCRCxLQUF2QixDQUo1Qjs7QUFBQSxVQUlGRSxHQUpFLHlCQUlGQSxHQUpFO0FBQUEsVUFJR0MsS0FKSCx5QkFJR0EsS0FKSDtBQUFBLFVBSVVDLE1BSlYseUJBSVVBLE1BSlY7QUFBQSxVQUlrQkMsS0FKbEIseUJBSWtCQSxLQUpsQjs7O0FBTVIsYUFDRTtBQUFBO0FBQUEsVUFBUyxNQUFPLHNCQUFjSCxHQUFkLEVBQW1CRixNQUFNTSxLQUF6QixDQUFoQjtBQUNTLDBCQUFpQkgsS0FEMUI7QUFFUywyQkFBa0JDLE1BRjNCO0FBR1MsMEJBQWlCQztBQUgxQjtBQUlHTCxjQUFNTztBQUpULE9BREY7QUFPRDs7Ozs7QUFHSCxzQkFBY1QsWUFBZCxFQUE0QjtBQUMxQlUsYUFBVztBQUNURixXQUFPLGlCQUFNRztBQURKLEdBRGU7QUFJMUJDLGdCQUFjO0FBQ1pKLFdBQU87QUFESyxHQUpZO0FBTzFCTCxXQVAwQixxQkFPZlUsTUFQZSxFQU9QO0FBQ2pCLFFBQUlDLFdBQVcsQ0FBZjtBQUNBLFdBQU87QUFDTFYsV0FBSztBQUNILHFCQUFhO0FBQ1hXLG1CQUFTLE9BREU7QUFFWEMsa0JBQVE7QUFGRyxTQURWO0FBS0gsMkJBQW1CO0FBQ2pCRCxtQkFBUyxPQURRO0FBRWpCRSxvQkFBVTtBQUZPLFNBTGhCO0FBU0gsMkJBQW1CO0FBQ2pCRixtQkFBUyxPQURRO0FBRWpCRyxvQkFBVSxNQUZPO0FBR2pCQyxvQkFBVSxFQUhPO0FBSWpCQyxtQkFBUyxDQUpRO0FBS2pCSixrQkFBUSxDQUxTO0FBTWpCSyxxQkFBVyxNQU5NO0FBT2pCQyxxQkFBVztBQVBNLFNBVGhCO0FBa0JILGlDQUF5QjtBQUN2QlAsbUJBQVMsT0FEYztBQUV2Qkcsb0JBQVUsTUFGYTtBQUd2QkUsNEJBQWdCTixRQUFoQixTQUh1QjtBQUl2QlMsaUJBQU8sTUFKZ0I7QUFLdkJELHFCQUFXO0FBTFksU0FsQnRCO0FBeUJILDJCQUFtQjtBQUNqQlAsbUJBQVMsT0FEUTtBQUVqQlMsaUJBQU8sTUFGVTtBQUdqQkosMEJBQWNOLFFBQWQsT0FIaUI7QUFJakJRLHFCQUFXO0FBSk0sU0F6QmhCO0FBK0JILDRFQUFvRTtBQUNsRU4sa0JBQVEsQ0FEMEQ7QUFFbEVJLG1CQUFTO0FBRnlELFNBL0JqRTtBQW1DSCxrRUFBMEQ7QUFDeERJLGlCQUFPLE1BRGlEO0FBRXhERixxQkFBVyxZQUY2QztBQUd4RE4sa0JBQVE7QUFIZ0QsU0FuQ3ZEO0FBd0NILHlCQUFpQjtBQUNmUyx1QkFBYSxPQURFO0FBRWZDLHdCQUFjO0FBRkMsU0F4Q2Q7QUE0Q0gsK0JBQXVCO0FBQ3JCQyxrQkFBUSxNQURhO0FBRXJCUCxtQkFBUyxDQUZZO0FBR3JCSixrQkFBUTtBQUhhLFNBNUNwQjtBQWlESCw0QkFBb0I7QUFDbEJJLG1CQUFTO0FBRFMsU0FqRGpCO0FBb0RILGtEQUEwQztBQUN4Q0MscUJBQVcsUUFENkI7QUFFeENOLG1CQUFTO0FBRitCO0FBcER2QyxPQURBO0FBMERMVixhQUFPO0FBQ0wsMkJBQW1CO0FBQ2pCVSxtQkFBUyxNQURRO0FBRWpCYSxzQkFBWTtBQUZLLFNBRGQ7QUFLTCwyQkFBbUI7QUFDakJiLG1CQUFTLGNBRFE7QUFFakJLLG1CQUFTLENBRlE7QUFHakJKLGtCQUFRO0FBSFMsU0FMZDtBQVVMLGlDQUF5QjtBQUN2QkQsbUJBQVMsY0FEYztBQUV2Qkksb0JBQVUsTUFGYTtBQUd2QkQsb0JBQVUsU0FIYTtBQUl2QkUsNEJBQWdCTixRQUFoQjtBQUp1QixTQVZwQjtBQWdCTCwyQkFBbUI7QUFDakJlLHlCQUFlLFFBREU7QUFFakJULG1CQUFTO0FBRlE7QUFoQmQ7QUExREYsS0FBUDtBQWdGRDtBQXpGeUIsQ0FBNUI7O2tCQTRGZXBCLFkiLCJmaWxlIjoiYXBfZmllbGRfc3R5bGUuanN4Iiwic291cmNlUm9vdCI6ImxpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU3R5bGUgZm9yIEFwRmllbGQuXG4gKiBAY2xhc3MgQXBGaWVsZFN0eWxlXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQsIFByb3BUeXBlcyBhcyB0eXBlcyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQXBTdHlsZSB9IGZyb20gJ2FwZW1hbi1yZWFjdC1zdHlsZSdcblxuLyoqIEBsZW5kcyBBcEZpZWxkU3R5bGUgKi9cbmNsYXNzIEFwRmllbGRTdHlsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcyB9ID0gc1xuXG4gICAgbGV0IHsgYWxsLCBzbWFsbCwgbWVkaXVtLCBsYXJnZSB9ID0gQXBGaWVsZFN0eWxlLnN0eWxlRGF0YShwcm9wcylcblxuICAgIHJldHVybiAoXG4gICAgICA8QXBTdHlsZSBkYXRhPXsgT2JqZWN0LmFzc2lnbihhbGwsIHByb3BzLnN0eWxlKSB9XG4gICAgICAgICAgICAgICBzbWFsbE1lZGlhRGF0YT17IHNtYWxsIH1cbiAgICAgICAgICAgICAgIG1lZGl1bU1lZGlhRGF0YT17IG1lZGl1bSB9XG4gICAgICAgICAgICAgICBsYXJnZU1lZGlhRGF0YT17IGxhcmdlIH1cbiAgICAgID57IHByb3BzLmNoaWxkcmVuIH08L0FwU3R5bGU+XG4gICAgKVxuICB9XG59XG5cbk9iamVjdC5hc3NpZ24oQXBGaWVsZFN0eWxlLCB7XG4gIHByb3BUeXBlczoge1xuICAgIHN0eWxlOiB0eXBlcy5vYmplY3RcbiAgfSxcbiAgZGVmYXVsdFByb3BzOiB7XG4gICAgc3R5bGU6IHt9XG4gIH0sXG4gIHN0eWxlRGF0YSAoY29uZmlnKSB7XG4gICAgbGV0IGhQYWRkaW5nID0gOFxuICAgIHJldHVybiB7XG4gICAgICBhbGw6IHtcbiAgICAgICAgJy5hcC1maWVsZCc6IHtcbiAgICAgICAgICBkaXNwbGF5OiAnYmxvY2snLFxuICAgICAgICAgIG1hcmdpbjogJzRweCAwJ1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLWZpZWxkLWlubmVyJzoge1xuICAgICAgICAgIGRpc3BsYXk6ICdibG9jaycsXG4gICAgICAgICAgbWF4V2lkdGg6ICc0ODBweCdcbiAgICAgICAgfSxcbiAgICAgICAgJy5hcC1maWVsZC1sYWJlbCc6IHtcbiAgICAgICAgICBkaXNwbGF5OiAnYmxvY2snLFxuICAgICAgICAgIGZvbnRTaXplOiAnMTRweCcsXG4gICAgICAgICAgbWluV2lkdGg6IDk2LFxuICAgICAgICAgIHBhZGRpbmc6IDAsXG4gICAgICAgICAgbWFyZ2luOiAwLFxuICAgICAgICAgIHRleHRBbGlnbjogJ2xlZnQnLFxuICAgICAgICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnXG4gICAgICAgIH0sXG4gICAgICAgICcuYXAtZmllbGQtbGFiZWwtaW5uZXInOiB7XG4gICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICAgICAgICBmb250U2l6ZTogJzEycHgnLFxuICAgICAgICAgIHBhZGRpbmc6IGA0cHggJHtoUGFkZGluZ31weCAwYCxcbiAgICAgICAgICBjb2xvcjogJyM4ODgnLFxuICAgICAgICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnXG4gICAgICAgIH0sXG4gICAgICAgICcuYXAtZmllbGQtdmFsdWUnOiB7XG4gICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgIHBhZGRpbmc6IGAwICR7aFBhZGRpbmd9cHhgLFxuICAgICAgICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnXG4gICAgICAgIH0sXG4gICAgICAgICcuYXAtZmllbGQtdmFsdWUgLmFwLXRleHQtd3JhcCwgLmFwLWZpZWxkLXZhbHVlIC5hcC1wYXNzd29yZC13cmFwJzoge1xuICAgICAgICAgIG1hcmdpbjogMCxcbiAgICAgICAgICBwYWRkaW5nOiAwXG4gICAgICAgIH0sXG4gICAgICAgICcuYXAtZmllbGQtdmFsdWUgLmFwLXRleHQsIC5hcC1maWVsZC12YWx1ZSAuYXAtcGFzc3dvcmQnOiB7XG4gICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICAgICAgICBtYXJnaW46ICcycHggMCdcbiAgICAgICAgfSxcbiAgICAgICAgJy5hcC1maWVsZC1zZXQnOiB7XG4gICAgICAgICAgYm9yZGVyU3R5bGU6ICdzb2xpZCcsXG4gICAgICAgICAgYm9yZGVyUmFkaXVzOiAnMnB4J1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLWZpZWxkLXNldC1wbGFpbic6IHtcbiAgICAgICAgICBib3JkZXI6ICdub25lJyxcbiAgICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAgIG1hcmdpbjogMFxuICAgICAgICB9LFxuICAgICAgICAnLmFwLWZpZWxkLWxlZ2VuZCc6IHtcbiAgICAgICAgICBwYWRkaW5nOiAnMCA0cHgnXG4gICAgICAgIH0sXG4gICAgICAgICcuYXAtZmllbGQtYWxpZ24tY2VudGVyIC5hcC1maWVsZC1pbm5lcic6IHtcbiAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgICAgIGRpc3BsYXk6ICdibG9jaydcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHNtYWxsOiB7XG4gICAgICAgICcuYXAtZmllbGQtaW5uZXInOiB7XG4gICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInXG4gICAgICAgIH0sXG4gICAgICAgICcuYXAtZmllbGQtbGFiZWwnOiB7XG4gICAgICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgICAgICAgcGFkZGluZzogMCxcbiAgICAgICAgICBtYXJnaW46IDBcbiAgICAgICAgfSxcbiAgICAgICAgJy5hcC1maWVsZC1sYWJlbC1pbm5lcic6IHtcbiAgICAgICAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICAgICAgICBtaW5XaWR0aDogJzQ4cHgnLFxuICAgICAgICAgIGZvbnRTaXplOiAnaW5oZXJpdCcsXG4gICAgICAgICAgcGFkZGluZzogYDhweCAke2hQYWRkaW5nfXB4YFxuICAgICAgICB9LFxuICAgICAgICAnLmFwLWZpZWxkLXZhbHVlJzoge1xuICAgICAgICAgIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLFxuICAgICAgICAgIHBhZGRpbmc6ICc0cHggOHB4J1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59KVxuXG5leHBvcnQgZGVmYXVsdCBBcEZpZWxkU3R5bGVcbiJdfQ==