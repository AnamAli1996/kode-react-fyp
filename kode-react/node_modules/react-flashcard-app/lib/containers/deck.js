'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _redux = require('redux');

var _actions = require('../actions');

var _card = require('./card');

var _card2 = _interopRequireDefault(_card);

var Deck = function Deck(props) {
  if (props.total === 0) {
    return _react2['default'].createElement(
      'div',
      { className: 'deck' },
      _react2['default'].createElement(
        'div',
        { className: 'card', 'data-is-current': 'true' },
        _react2['default'].createElement(
          'div',
          { className: 'card-face' },
          _react2['default'].createElement(
            'div',
            { className: 'card-text' },
            'no cards left in this deck'
          )
        )
      )
    );
  }
  return _react2['default'].createElement(
    'div',
    { onClick: props.flip, className: 'deck', title: 'click to flip' },
    props.cards.map(function (card, index) {
      return _react2['default'].createElement(_card2['default'], {
        isCurrent: index === props.cardIndex,
        key: card.id,
        values: card.values
      });
    })
  );
};

exports.Deck = Deck;
Deck.propTypes = {
  cards: _propTypes2['default'].arrayOf(_propTypes2['default'].object).isRequired,
  flip: _propTypes2['default'].func.isRequired,
  total: _propTypes2['default'].number.isRequired,
  cardIndex: _propTypes2['default'].number.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  return {
    cardIndex: state.app.cardIndex,
    cards: state.app.deck.cards,
    removed: state.app.removed,
    total: state.app.deck.length - state.app.removed.length
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)({ flip: _actions.flip }, dispatch);
};

exports['default'] = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Deck);