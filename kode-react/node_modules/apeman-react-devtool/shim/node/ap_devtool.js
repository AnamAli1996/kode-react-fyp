/**
 * apeman react package for developer tools.
 * @class ApDevtool
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _stringcase = require('stringcase');

var _stringcase2 = _interopRequireDefault(_stringcase);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _apemanReactButton = require('apeman-react-button');

var _asenv = require('asenv');

var _apemanReactMixinLayout = require('apeman-react-mixin-layout');

var _apemanReactDraggable = require('apeman-react-draggable');

var _bwindow = require('bwindow');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApDevtool */
var ApDevtool = _react2.default.createClass({
  displayName: 'ApDevtool',


  // --------------------
  // Specs
  // --------------------

  propTypes: {
    /** Version string of the application */
    version: _react.PropTypes.string,
    /** Information object */
    info: _react.PropTypes.object,
    /** Action handlers */
    actions: _react.PropTypes.object
  },

  mixins: [_apemanReactMixinLayout.ApLayoutMixin],

  statics: {},

  getInitialState: function getInitialState() {
    var s = this;
    var isClientSide = !!(0, _bwindow.get)('window');
    return {
      enabled: isClientSide && !(0, _asenv.isProduction)(),
      open: false
    };
  },
  getDefaultProps: function getDefaultProps() {
    return {
      version: null,
      info: null
    };
  },
  render: function render() {
    var s = this;
    var state = s.state;
    var props = s.props;
    var layouts = s.layouts;


    if (!state.enabled) {
      return null;
    }

    return _react2.default.createElement(
      _apemanReactDraggable.ApDraggable,
      { className: (0, _classnames2.default)('ap-devtool', {
          'ap-devtool-open': state.open,
          'ap-devtool-closed': !state.open
        }, props.className),
        onTap: s.handleTap,
        style: Object.assign(layouts.draggable, props.style)
      },
      _react2.default.createElement(
        'div',
        { className: 'ap-devtool-title' },
        'Devtool'
      ),
      _react2.default.createElement(
        'div',
        { className: 'ap-devtool-display' },
        _react2.default.createElement('div', { className: 'ap-devtool-closed-handle' }),
        _react2.default.createElement(
          'div',
          { className: 'ap-devtool-inner', ref: function ref(inner) {
              return s.registerInner(inner);
            } },
          s._renderCaption(window.location.origin, (0, _asenv.getEnv)()),
          s._renderInfo(props.info || {}),
          s._renderActions(props.actions || {}),
          _react2.default.createElement(
            'div',
            null,
            props.children
          )
        )
      )
    );
  },


  // --------------------
  // Lifecycle
  // --------------------

  // ------------------
  // For ApLayoutMixin
  // ------------------

  getInitialLayouts: function getInitialLayouts() {
    return {
      draggable: {
        width: 'auto',
        height: 'auto'
      }
    };
  },
  calcLayouts: function calcLayouts() {
    var s = this;
    var state = s.state;

    if (!state.enabled) {
      return {};
    }
    var inner = s.inner;

    var PADDING = 8;
    var rect = inner.getBoundingClientRect();
    return {
      draggable: {
        width: rect.width + PADDING,
        height: rect.height + PADDING
      }
    };
  },


  // ------------------
  // Custom
  // ------------------

  registerInner: function registerInner(inner) {
    var s = this;
    s.inner = inner;
  },
  handleTap: function handleTap(e) {
    var s = this;
    var byActionButton = e.target && e.target.classList.contains('ap-devtool-action-button');
    if (byActionButton) {
      return;
    }
    s.setState({
      open: !s.state.open
    });
  },


  // ------------------
  // Private
  // ------------------

  _renderCaption: function _renderCaption(host, NODE_ENV) {
    var s = this;
    var props = s.props;

    var version = props.version;
    if (version && !/^v/.test(version)) {
      version = 'v' + version;
    }
    return _react2.default.createElement(
      'div',
      { className: 'ap-devtool-caption' },
      _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'span',
          { className: (0, _classnames2.default)('ap-devtool-env-label', 'ap-devtool-env-label-' + _stringcase2.default.spinalcase(NODE_ENV)) },
          NODE_ENV
        ),
        _react2.default.createElement(
          'span',
          { className: '' },
          'Â '
        ),
        _react2.default.createElement(
          'span',
          { className: 'ap-devtool-version-label' },
          '(',
          version,
          ')'
        )
      ),
      _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'span',
          null,
          host
        )
      )
    );
  },
  _renderInfo: function _renderInfo(info) {
    var s = this;
    var rows = Object.keys(info).filter(function (name) {
      return info[name] !== null;
    }).filter(function (name) {
      return info[name] !== undefined;
    }).map(function (name) {
      return _react2.default.createElement(
        'tr',
        { className: 'ap-devtool-info-row',
          key: 'ap-devtool-info-row-' + name },
        _react2.default.createElement(
          'th',
          { className: 'ap-devtool-cell' },
          name
        ),
        _react2.default.createElement(
          'td',
          { className: (0, _classnames2.default)('ap-devtool-cell', {
              'ap-devtool-numeric': typeof info[name] === 'number'
            }) },
          info[name]
        )
      );
    });
    if (!rows.length) {
      return null;
    }
    return _react2.default.createElement(
      'table',
      { className: 'ap-devtool-info-table' },
      _react2.default.createElement(
        'tbody',
        null,
        rows
      )
    );
  },
  _renderActions: function _renderActions(actions) {
    var names = Object.keys(actions || {});
    if (!names.length) {
      return null;
    }
    return _react2.default.createElement(
      'div',
      { className: 'ap-devtool-actions' },
      names.map(function (name) {
        return _react2.default.createElement(
          _apemanReactButton.ApButton,
          { className: 'ap-devtool-action-button',
            onTap: actions[name],
            key: name },
          name
        );
      })
    );
  }
});

exports.default = ApDevtool;
//# sourceMappingURL=data:application/json;base64,bnVsbA==