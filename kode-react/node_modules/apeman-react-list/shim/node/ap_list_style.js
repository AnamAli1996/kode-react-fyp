/**
 * Style for ApList.
 * @class ApListStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApListStyle */
var ApListStyle = function (_Component) {
  (0, _inherits3.default)(ApListStyle, _Component);

  function ApListStyle() {
    (0, _classCallCheck3.default)(this, ApListStyle);
    return (0, _possibleConstructorReturn3.default)(this, (ApListStyle.__proto__ || (0, _getPrototypeOf2.default)(ApListStyle)).apply(this, arguments));
  }

  (0, _createClass3.default)(ApListStyle, [{
    key: 'render',
    value: function render() {
      var s = this;
      var props = s.props;

      var _ApListStyle$styleDat = ApListStyle.styleData(props),
          all = _ApListStyle$styleDat.all,
          small = _ApListStyle$styleDat.small,
          medium = _ApListStyle$styleDat.medium,
          large = _ApListStyle$styleDat.large;

      return _react2.default.createElement(
        _apemanReactStyle.ApStyle,
        { data: (0, _assign2.default)(all, props.style),
          smallMediaData: small,
          mediumMediaData: medium,
          largeMediaData: large
        },
        props.children
      );
    }
  }]);
  return ApListStyle;
}(_react.Component);

(0, _assign2.default)(ApListStyle, {
  propTypes: {
    style: _react.PropTypes.object
  },
  defaultProps: {
    style: {},
    borderColor: '#EEE',
    backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR,
    headerColor: _apemanReactStyle.ApStyle.CAPTION_COLOR,
    headerBorderColor: _apemanReactStyle.ApStyle.CAPTION_BORDER_COLOR,
    rowHeight: _apemanReactStyle.ApStyle.ROW_HEIGHT
  },
  styleData: function styleData(config) {
    var rowHeight = config.rowHeight,
        borderColor = config.borderColor,
        backgroundColor = config.backgroundColor,
        headerColor = config.headerColor,
        headerBorderColor = config.headerBorderColor;

    var height = 48;
    return {
      all: {
        '.ap-list': {
          display: 'block',
          padding: 0,
          margin: '8px 0',
          listStyle: 'none',
          position: 'relative',
          minHeight: '48px'
        },
        '.ap-list-spinner': {
          position: 'absolute',
          left: 0,
          top: 0,
          bottom: 0,
          right: 0,
          zIndex: 4,
          backgroundColor: '' + _apemanReactStyle.ApStyle.COVER_BACKGROUND
        },
        '.ap-list-item': {
          display: 'block',
          borderBottom: '1px solid ' + borderColor,
          minHeight: rowHeight + 'px',
          padding: '0 4px',
          height: height,
          lineHeight: height + 'px'
        },
        '.ap-list-item-tappable': {
          cursor: 'pointer'
        },
        '.ap-list-item-tappable:hover': {
          backgroundColor: 'rgba(200,200,200,0.1)'
        },
        '.ap-list-item-tappable:active': {
          opacity: '0.8'
        },
        '.ap-list-item-inner,.ap-list-item-inner:link,.ap-list-item-inner:link:hover,.ap-list-item-inner:link:active': {
          display: 'flex',
          alignContent: 'center',
          alignItems: 'center',
          justifyContent: 'flex-end',
          textDecoration: 'none',
          color: 'inherit'
        },
        '.ap-list-item-icon': {
          padding: '0 4px'
        },
        '.ap-list-item-text': {
          display: 'inline-block',
          padding: '0 8px',
          width: '100%'
        },
        '.ap-list-item-aligner': {
          display: 'inline-block',
          opacity: 0,
          width: '1px',
          overflow: 'hidden',
          whiteSpace: 'pre',
          color: 'transparent',
          verticalAlign: 'middle'
        },
        '.ap-list-item-arrow-icon': {
          color: '#AAA',
          fontSize: '24px',
          display: 'inline-flex',
          justifyContent: 'center',
          alignItems: 'center'
        },
        '.ap-list-item-sumbnail-image': {
          marginLeft: '-4px'
        },
        '.ap-list-header': {
          display: 'block',
          fontSize: '9px',
          padding: '2px 12px 1px',
          verticalAlign: 'middle',
          position: 'relative',
          borderTop: '1px solid ' + headerBorderColor,
          borderBottom: '1px solid ' + headerBorderColor,
          marginBottom: '-1px',
          color: '' + headerColor,
          fontWeight: '100',
          background: 'rgba(0, 0, 0, 0.01)'
        },
        '.ap-list-body': {
          display: 'block',
          margin: '0 0 -1px',
          overflow: 'hidden'
        },
        '.ap-list-footer': {
          display: 'block',
          position: 'relative'
        },
        '.ap-list-footer-spinner': {
          position: 'absolute',
          left: 0,
          top: 0,
          bottom: 0,
          right: 0,
          zIndex: 4,
          backgroundColor: '' + _apemanReactStyle.ApStyle.COVER_BACKGROUND
        },
        '.ap-list-more-button': {
          display: 'none',
          textAlign: 'center',
          padding: '16px 0',
          fontSize: '11px',
          color: '#888',
          background: 'rgba(0, 0, 0, 0.01)',
          borderTop: '1px solid ' + borderColor
        },
        '.ap-list-more-button:hover': {
          cursor: 'pointer',
          opacity: '0.9'
        },
        '.ap-list-more-button:active': {
          cursor: 'pointer',
          opacity: '0.66'
        },
        '.ap-list-more-button-enabled': {
          display: 'block'
        },
        '.ap-list-item-title-wrap': {
          display: 'inline-flex',
          justifyContent: 'center',
          flexDirection: 'column',
          overflow: 'hidden'
        },
        '.ap-list-item-title': {
          display: 'block',
          lineHeight: 'initial'
        },
        '.ap-list-item-sub-title': {
          display: 'block',
          fontSize: '9px',
          lineHeight: 'initial',
          color: '#AAA',
          whiteSpace: 'nowrap',
          textOverflow: 'ellipsis',
          overflow: 'hidden'
        },
        '.ap-list-empty .ap-list-body': {
          background: '#F5F5F5'
        },
        '.ap-list-empty .ap-list-alt': {
          display: 'block'
        },
        '.ap-list-alt': {
          display: 'none',
          textAlign: 'center',
          padding: '32px 8px',
          color: '#CCC'
        },
        '.ap-list-item-alt': {
          textAlign: 'center',
          color: '#CCC',
          width: '100%'
        },
        '.ap-list-bar': {
          display: 'flex',
          margin: 0,
          padding: '0 8px',
          background: 'transparent',
          justifyContent: 'space-between'
        },
        '.ap-list-bar .ap-form': {
          margin: 0,
          display: 'inline-flex',
          alignItems: 'center'
        },
        '.ap-list-bar-message': {
          lineHeight: '36px',
          fontSize: 'smaller',
          display: 'inline-block',
          padding: '0 4px',
          color: '#888'
        },
        '.ap-list-item-footer': {
          display: 'block',
          padding: '4px 8px',
          fontSize: '12px'
        }
      }
    };
  }
});

exports.default = ApListStyle;
//# sourceMappingURL=data:application/json;base64,