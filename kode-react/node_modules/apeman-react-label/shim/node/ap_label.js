/**
 * apeman react package label component.
 * @class ApLabel
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _asobj = require('asobj');

var _apemanReactTouchable = require('apeman-react-touchable');

var _apemanReactMixinPure = require('apeman-react-mixin-pure');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApLabel */
var ApLabel = _react2.default.createClass({
  displayName: 'ApLabel',


  // --------------------
  // Specs
  // --------------------

  propTypes: {
    htmlFor: _react.PropTypes.string
  },

  mixins: [_apemanReactMixinPure.ApPureMixin],

  statics: {},

  getInitialState: function getInitialState() {
    return {};
  },
  getDefaultProps: function getDefaultProps() {
    return {
      htmlFor: null
    };
  },
  render: function render() {
    var s = this;
    var props = s.props;

    var labelProps = (0, _asobj.clone)(props, {
      without: 'hasTouch'
    });
    return _react2.default.createElement(
      'label',
      _extends({}, labelProps, {
        className: (0, _classnames2.default)('ap-label', props.className),
        htmlFor: props.htmlFor
      }),
      props.children
    );
  },


  // --------------------
  // For ApTouchMixin
  // --------------------
  getTouchData: function getTouchData() {
    var s = this;
    var props = s.props;

    return props.data;
  }
});

exports.default = ApLabel; // Dummy export for duc parser

exports.default = (0, _apemanReactTouchable.withTouch)(ApLabel);
//# sourceMappingURL=data:application/json;base64,bnVsbA==