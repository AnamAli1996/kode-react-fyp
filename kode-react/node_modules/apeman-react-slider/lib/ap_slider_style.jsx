/**
 * Style for ApSlider.
 * @class ApSliderStyle
 */

'use strict'

import React, {PropTypes as types} from 'react'
import {ApStyle} from 'apeman-react-style'

/** @lends ApSliderStyle */
const ApSliderStyle = React.createClass({
  propTypes: {
    style: types.object,
    handleSize: types.number,
    barHeight: types.number,
    highlightColor: types.string
  },
  getDefaultProps () {
    return {
      style: {},
      handleSize: 24,
      barHeight: 4,
      highlightColor: '#38E'
    }
  },
  statics: {
    styleData (config) {
      let {
        handleSize,
        barHeight,
        highlightColor
      } = config
      let sliderPadding = 6
      let handlePaddingRate = -20
      return {
        all: {
          '.ap-slider': {
            position: 'relative',
            height: `${handleSize + 2}px`
          },
          '.ap-slider-inner': {
            display: 'flex',
            margin: '2px 0'
          },
          '.ap-slider-bar-wrap': {
            display: 'block',
            position: 'relative',
            width: '100%',
            boxSizing: 'border-box'
          },
          '.ap-slider-bar': {
            position: 'absolute',
            left: 0,
            right: 0,
            height: `${barHeight + sliderPadding}px`,
            top: `${handleSize / 2 - sliderPadding}px`
          },
          '.ap-slider-bar-bg': {
            position: 'absolute',
            left: 0,
            top: `${sliderPadding}px`,
            right: 0,
            height: `${barHeight}px`,
            borderRadius: barHeight / 2,
            border: '1px solid #BBB',
            backgroundColor: '#CCC'
          },
          '.ap-slider-bar-highlight': {
            backgroundColor: highlightColor,
            top: sliderPadding,
            position: 'absolute',
            height: barHeight,
            borderRadius: barHeight / 2,
            border: '1px solid rgba(0,0,0,0.1)',
            maxWidth: '100%'
          },
          '.ap-slider-handle': {
            position: 'relative',
            display: 'inline-block',
            cursor: '-webkit-grab'
          },
          '.ap-slider-handle-area': {
            position: 'absolute',
            display: 'inline-block',
            color: 'transparent',
            opacity: 0,
            left: `${handlePaddingRate}%`,
            top: `${handlePaddingRate}%`,
            right: `${handlePaddingRate}%`,
            bottom: `${handlePaddingRate}%`
          },
          '.ap-slider-handle:active': {
            cursor: '-webkit-grabbing',
            backgroundColor: '#FCFCFC'
          },
          '.ap-slider-handle-icon': {
            width: `${handleSize}px`,
            height: `${handleSize}px`,
            borderRadius: '50%',
            display: 'inline-block',
            backgroundColor: 'white',
            border: '1px solid #DDD',
            boxShadow: '1px 1px 2px rgba(0,0,0,0.5)',
            position: 'relative',
            zIndex: 3
          },
          '.ap-slider-handle-icon:hover': {
            boxShadow: '1px 1px 3px rgba(0,0,0,0.5)'
          },
          '.ap-slider-label': {
            display: 'inline-block',
            padding: '2px 4px',
            textAlign: 'right',
            minWidth: '24px',
            fontSize: '14px',
            lineHeight: `${handleSize}px`,
            boxSizing: 'border-box'
          }
        }
      }
    }
  },
  render () {
    const s = this
    let { props } = s

    let { all, small, medium, large } = ApSliderStyle.styleData(props)

    return (
      <ApStyle data={ Object.assign(all, props.style) }
               smallMediaData={ small }
               mediumMediaData={ medium }
               largeMediaData={ large }
      >{ props.children }</ApStyle>
    )
  }
})

export default ApSliderStyle
