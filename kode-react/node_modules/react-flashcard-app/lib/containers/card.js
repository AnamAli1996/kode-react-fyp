'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _card_face = require('./card_face');

var _card_face2 = _interopRequireDefault(_card_face);

var Card = function Card(props) {
  return _react2['default'].createElement(
    'div',
    {
      className: 'card',
      'data-is-flipped': props.isFlipped,
      'data-is-current': props.isCurrent
    },
    _react2['default'].createElement(_card_face2['default'], {
      className: 'card-face front',
      text: props.values[props.isReverted === true ? 1 : 0]
    }),
    _react2['default'].createElement(_card_face2['default'], {
      className: 'card-face back',
      text: props.values[props.isReverted === true ? 0 : 1],
      isFlipped: true
    })
  );
};

Card.propTypes = {
  isCurrent: _propTypes2['default'].bool.isRequired,
  values: _propTypes2['default'].arrayOf(_propTypes2['default'].string).isRequired,
  isReverted: _propTypes2['default'].bool.isRequired,
  isFlipped: _propTypes2['default'].bool
};

Card.defaultProps = {
  isFlipped: false,
  isReverted: false,
  className: 'card'
};

var mapStateToProps = function mapStateToProps(state) {
  return {
    isFlipped: state.card.isFlipped,
    isReverted: state.card.isReverted
  };
};

exports['default'] = (0, _reactRedux.connect)(mapStateToProps)(Card);
module.exports = exports['default'];