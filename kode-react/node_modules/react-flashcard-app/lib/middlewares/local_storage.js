'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
var getRemoved = function getRemoved(deckIndex) {
  var removed = localStorage.getItem('removed-' + deckIndex);
  if (removed !== null && removed !== '') {
    return removed.split(',').map(function (item) {
      return parseInt(item, 10);
    });
  }
  return [];
};

exports.getRemoved = getRemoved;
var setRemoved = function setRemoved(removed, deckIndex) {
  return localStorage.setItem('removed-' + deckIndex, removed);
};

exports.setRemoved = setRemoved;
var localStorageMiddleware = function localStorageMiddleware(store) {
  return function (next) {
    return function (action) {
      var returnValue = undefined;
      var newAction = undefined;
      switch (action.type) {
        case 'INIT_APP':
          {
            newAction = action;
            newAction.data.removed = getRemoved(newAction.data.data.id);
            returnValue = next(newAction);
            break;
          }
        case 'RESET':
        case 'REMOVE_CARD':
        case 'UNDO_REMOVE':
          {
            returnValue = next(action);
            var _store$getState$app = store.getState().app;
            var deck = _store$getState$app.deck;
            var removed = _store$getState$app.removed;

            setRemoved(removed, deck.id);
            break;
          }
        default:
          {
            returnValue = next(action);
            break;
          }
      }
      return returnValue;
    };
  };
};

exports['default'] = localStorageMiddleware;