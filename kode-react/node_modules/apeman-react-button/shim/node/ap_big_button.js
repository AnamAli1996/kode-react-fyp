/**
 * Big button component.
 * @class ApBigButton
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _ap_button = require('./ap_button');

var _ap_button2 = _interopRequireDefault(_ap_button);

var _asobj = require('asobj');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApBigButton */
var ApBigButton = _react2.default.createClass({
  displayName: 'ApBigButton',


  // --------------------
  // Specs
  // --------------------

  propTypes: {
    disabled: _react.PropTypes.bool,
    onTap: _react.PropTypes.func,
    text: _react.PropTypes.string,
    size: _react.PropTypes.number
  },

  mixins: [],

  getInitialState: function getInitialState() {
    return {};
  },
  getDefaultProps: function getDefaultProps() {
    return {
      disabled: false,
      onTap: null,
      text: null,
      size: 94
    };
  },
  render: function render() {
    var s = this;
    var props = s.props;
    var size = props.size;

    var style = (0, _assign2.default)({
      width: size, height: size
    }, props.style);
    return _react2.default.createElement(
      _ap_button2.default,
      (0, _extends3.default)({}, props, {
        className: (0, _classnames2.default)('ap-big-button', props.className),
        wide: false,
        style: style
      }),
      _react2.default.createElement(
        'span',
        { className: 'ap-big-button-text' },
        props.text
      ),
      props.children
    );
  },


  // --------------------
  // Lifecycle
  // --------------------
  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    var s = this;
    var props = s.props,
        state = s.state;

    return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
  }
});

exports.default = ApBigButton;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2JpZ19idXR0b24uanN4Il0sIm5hbWVzIjpbIkFwQmlnQnV0dG9uIiwiY3JlYXRlQ2xhc3MiLCJwcm9wVHlwZXMiLCJkaXNhYmxlZCIsImJvb2wiLCJvblRhcCIsImZ1bmMiLCJ0ZXh0Iiwic3RyaW5nIiwic2l6ZSIsIm51bWJlciIsIm1peGlucyIsImdldEluaXRpYWxTdGF0ZSIsImdldERlZmF1bHRQcm9wcyIsInJlbmRlciIsInMiLCJwcm9wcyIsInN0eWxlIiwid2lkdGgiLCJoZWlnaHQiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIm5leHRQcm9wcyIsIm5leHRTdGF0ZSIsInN0YXRlIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUVBO0FBQ0EsSUFBTUEsY0FBYyxnQkFBTUMsV0FBTixDQUFrQjtBQUFBOzs7QUFFcEM7QUFDQTtBQUNBOztBQUVBQyxhQUFXO0FBQ1RDLGNBQVUsaUJBQU1DLElBRFA7QUFFVEMsV0FBTyxpQkFBTUMsSUFGSjtBQUdUQyxVQUFNLGlCQUFNQyxNQUhIO0FBSVRDLFVBQU0saUJBQU1DO0FBSkgsR0FOeUI7O0FBYXBDQyxVQUFRLEVBYjRCOztBQWVwQ0MsaUJBZm9DLDZCQWVqQjtBQUNqQixXQUFPLEVBQVA7QUFDRCxHQWpCbUM7QUFtQnBDQyxpQkFuQm9DLDZCQW1CakI7QUFDakIsV0FBTztBQUNMVixnQkFBVSxLQURMO0FBRUxFLGFBQU8sSUFGRjtBQUdMRSxZQUFNLElBSEQ7QUFJTEUsWUFBTTtBQUpELEtBQVA7QUFNRCxHQTFCbUM7QUE0QnBDSyxRQTVCb0Msb0JBNEIxQjtBQUNSLFFBQU1DLElBQUksSUFBVjtBQURRLFFBRUZDLEtBRkUsR0FFUUQsQ0FGUixDQUVGQyxLQUZFO0FBQUEsUUFHRlAsSUFIRSxHQUdPTyxLQUhQLENBR0ZQLElBSEU7O0FBSVIsUUFBSVEsUUFBUSxzQkFBYztBQUN4QkMsYUFBT1QsSUFEaUIsRUFDWFUsUUFBUVY7QUFERyxLQUFkLEVBRVRPLE1BQU1DLEtBRkcsQ0FBWjtBQUdBLFdBQ0U7QUFBQTtBQUFBLGlDQUFlRCxLQUFmO0FBQ1UsbUJBQVksMEJBQVcsZUFBWCxFQUE0QkEsTUFBTUksU0FBbEMsQ0FEdEI7QUFFVSxjQUFPLEtBRmpCO0FBR1UsZUFBUUg7QUFIbEI7QUFLVTtBQUFBO0FBQUEsVUFBTSxXQUFVLG9CQUFoQjtBQUNNRCxjQUFNVDtBQURaLE9BTFY7QUFRSVMsWUFBTUs7QUFSVixLQURGO0FBWUQsR0EvQ21DOzs7QUFpRHBDO0FBQ0E7QUFDQTtBQUNBQyx1QkFwRG9DLGlDQW9EYkMsU0FwRGEsRUFvREZDLFNBcERFLEVBb0RTO0FBQzNDLFFBQU1ULElBQUksSUFBVjtBQUQyQyxRQUVyQ0MsS0FGcUMsR0FFcEJELENBRm9CLENBRXJDQyxLQUZxQztBQUFBLFFBRTlCUyxLQUY4QixHQUVwQlYsQ0FGb0IsQ0FFOUJVLEtBRjhCOztBQUczQyxXQUFPLENBQUMseUJBQWFULEtBQWIsRUFBb0JPLFNBQXBCLENBQUQsSUFBbUMsQ0FBQyx5QkFBYUUsS0FBYixFQUFvQkQsU0FBcEIsQ0FBM0M7QUFDRDtBQXhEbUMsQ0FBbEIsQ0FBcEI7O2tCQTJEZXhCLFciLCJmaWxlIjoiYXBfYmlnX2J1dHRvbi5qc3giLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBCaWcgYnV0dG9uIGNvbXBvbmVudC5cbiAqIEBjbGFzcyBBcEJpZ0J1dHRvblxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG5pbXBvcnQgUmVhY3QsIHtQcm9wVHlwZXMgYXMgdHlwZXN9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcydcbmltcG9ydCBBcEJ1dHRvbiBmcm9tICcuL2FwX2J1dHRvbidcbmltcG9ydCB7c2hhbGxvd0VxdWFsfSBmcm9tICdhc29iaidcblxuLyoqIEBsZW5kcyBBcEJpZ0J1dHRvbiAqL1xuY29uc3QgQXBCaWdCdXR0b24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gU3BlY3NcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICBwcm9wVHlwZXM6IHtcbiAgICBkaXNhYmxlZDogdHlwZXMuYm9vbCxcbiAgICBvblRhcDogdHlwZXMuZnVuYyxcbiAgICB0ZXh0OiB0eXBlcy5zdHJpbmcsXG4gICAgc2l6ZTogdHlwZXMubnVtYmVyXG4gIH0sXG5cbiAgbWl4aW5zOiBbXSxcblxuICBnZXRJbml0aWFsU3RhdGUgKCkge1xuICAgIHJldHVybiB7fVxuICB9LFxuXG4gIGdldERlZmF1bHRQcm9wcyAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICAgIG9uVGFwOiBudWxsLFxuICAgICAgdGV4dDogbnVsbCxcbiAgICAgIHNpemU6IDk0XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcyB9ID0gc1xuICAgIGxldCB7IHNpemUgfSA9IHByb3BzXG4gICAgbGV0IHN0eWxlID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICB3aWR0aDogc2l6ZSwgaGVpZ2h0OiBzaXplXG4gICAgfSwgcHJvcHMuc3R5bGUpXG4gICAgcmV0dXJuIChcbiAgICAgIDxBcEJ1dHRvbiB7IC4uLnByb3BzIH1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9eyBjbGFzc25hbWVzKCdhcC1iaWctYnV0dG9uJywgcHJvcHMuY2xhc3NOYW1lKSB9XG4gICAgICAgICAgICAgICAgd2lkZT17IGZhbHNlIH1cbiAgICAgICAgICAgICAgICBzdHlsZT17IHN0eWxlIH1cbiAgICAgID5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2FwLWJpZy1idXR0b24tdGV4dCc+XG4gICAgICAgICAgICAgICAgICAgIHsgcHJvcHMudGV4dCB9XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICB7IHByb3BzLmNoaWxkcmVuIH1cbiAgICAgIDwvQXBCdXR0b24+XG4gICAgKVxuICB9LFxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIExpZmVjeWNsZVxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuICBzaG91bGRDb21wb25lbnRVcGRhdGUgKG5leHRQcm9wcywgbmV4dFN0YXRlKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcywgc3RhdGUgfSA9IHNcbiAgICByZXR1cm4gIXNoYWxsb3dFcXVhbChwcm9wcywgbmV4dFByb3BzKSB8fCAhc2hhbGxvd0VxdWFsKHN0YXRlLCBuZXh0U3RhdGUpXG4gIH0sXG59KVxuXG5leHBvcnQgZGVmYXVsdCBBcEJpZ0J1dHRvblxuIl19