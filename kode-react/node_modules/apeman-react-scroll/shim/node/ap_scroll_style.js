/**
 * Style for ApScroll.
 * @class ApScrollStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApScrollStyle */
var ApScrollStyle = _react2.default.createClass({
  displayName: 'ApScrollStyle',

  propTypes: {
    style: _react.PropTypes.object,
    highlightColor: _react.PropTypes.string
  },
  getDefaultProps: function getDefaultProps() {
    return {
      style: {},
      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
    };
  },

  statics: {
    styleData: function styleData(config) {
      var highlightColor = config.highlightColor;
      var backgroundColor = config.backgroundColor;

      return {
        all: {
          '.ap-scroll': {
            overflow: 'hidden'
          }
        }
      };
    }
  },
  render: function render() {
    var s = this;
    var props = s.props;

    var _ApScrollStyle$styleD = ApScrollStyle.styleData(props);

    var all = _ApScrollStyle$styleD.all;
    var small = _ApScrollStyle$styleD.small;
    var medium = _ApScrollStyle$styleD.medium;
    var large = _ApScrollStyle$styleD.large;


    return _react2.default.createElement(
      _apemanReactStyle.ApStyle,
      { data: Object.assign(all, props.style),
        smallMediaData: small,
        mediumMediaData: medium,
        largeMediaData: large
      },
      props.children
    );
  }
});

exports.default = ApScrollStyle;
//# sourceMappingURL=data:application/json;base64,bnVsbA==