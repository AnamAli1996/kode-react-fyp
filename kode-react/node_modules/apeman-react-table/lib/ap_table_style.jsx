/**
 * Style for ApTable.
 * @class ApTableStyle
 */

'use strict'

import React, {PropTypes as types} from 'react'
import {ApStyle} from 'apeman-react-style'

/** @lends ApTableStyle */
const ApTableStyle = React.createClass({
  propTypes: {
    style: types.object,
    highlightColor: types.string
  },
  getDefaultProps () {
    return {
      style: {},
      highlightColor: ApStyle.DEFAULT_HIGHLIGHT_COLOR,
      backgroundColor: ApStyle.DEFAULT_BACKGROUND_COLOR,
      borderColor: '#CCC'
    }
  },
  statics: {
    styleData (config) {
      let { highlightColor, backgroundColor, borderColor } = config
      return {
        all: {
          '.ap-table': {
            borderCollapse: 'collapse',
            width: '100%'
          },
          '.ap-table-cell': {
            padding: '4px 8px',
            border: `1px solid ${borderColor}`
          },
          '.ap-table-cell:first-child': {
            borderLeft: 'none'
          },
          '.ap-table-cell:last-child': {
            borderRight: 'none'
          },
          '.ap-table-head .ap-table-row:first-child .ap-table-cell': {
            borderTop: 'none'
          },
          '.ap-table-body:first-child .ap-table-cell': {
            borderTop: 'none'
          },
          '.ap-table-body:last-child .ap-table-cell': {
            borderBottom: 'none'
          },
          '.ap-table-foot:last-child .ap-table-cell': {
            borderBottom: 'none'
          },
          '.ap-table-header-tappable': {
            cursor: 'pointer'
          },
          '.ap-table-header-icon': {
            float: 'right'
          }
        }

      }
    }
  },
  render () {
    const s = this
    let { props } = s

    let { all, small, medium, large } = ApTableStyle.styleData(props)

    return (
      <ApStyle data={ Object.assign(all, props.style) }
               smallMediaData={ small }
               mediumMediaData={ medium }
               largeMediaData={ large }
      >{ props.children }</ApStyle>
    )
  }
})

export default ApTableStyle
