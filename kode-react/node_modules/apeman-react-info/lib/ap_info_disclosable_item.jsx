/**
 * Info item with disclosable feature
 * @class ApInfoDisclosableItem
 */
'use strict'

import React, {PropTypes as types} from 'react'
import classnames from 'classnames'
import {ApPureMixin} from 'apeman-react-mixin-pure'
import {ApLayoutMixin} from 'apeman-react-mixin-layout'
import ApInfoItem from './ap_info_item'
import {ApIconButton} from 'apeman-react-button'

const { NEXT_ICON, PREV_ICON } = ApInfoItem

/** @lends ApInfoDisclosableItem */
const ApInfoDisclosableItem = React.createClass({
  // --------------------
  // Specs
  // --------------------

  propTypes: {
    label: types.string,
    value: types.string,
    unit: types.string
  },

  mixins: [
    ApPureMixin,
    ApLayoutMixin
  ],

  getInitialState () {
    return {
      open: false
    }
  },

  render () {
    const s = this
    let { state, props, layouts } = s
    let className = classnames('ap-info-disclosable-item', props.className)
    return (
      <div className={ className }>
        <div className={ classnames('ap-info-disclosable-wrap', {
          'ap-info-disclosable-wrap-open': state.open
        }) }
             style={ state.open ? layouts.wrapOpen : layouts.wrapClosed }
        >
          <div className='ap-info-disclosable-summary'
               ref={ (summary) => { s.summary = summary } }
          >
            <div ref={ (summaryInner) => { s.summaryInner = summaryInner } }>
              <ApInfoItem label={ props.label }
                          unit={ props.unit }
                          value={ props.value }
                          icon={ NEXT_ICON }
                          onTap={ s.toggleDisclosable }
              />
            </div>
          </div>
          <div className='ap-info-disclosable-detail'
               ref={ (detail) => { s.detail = detail } }
          >
            <ApIconButton className='ap-info-disclosable-back'
                          icon={ classnames('ap-info-item-icon ap-info-disclosable-back-icon', PREV_ICON) }
                          simple
                          onTap={ s.toggleDisclosable }
            />
            <div className='ap-info-disclosable-detail-inner'
                 ref={ (detailInner) => { s.detailInner = detailInner } }
            >
              { props.children }
            </div>
          </div>
        </div>
      </div>
    )
  },

  // --------------------
  // For ApLayoutMixin
  // --------------------

  getInitialLayouts () {
    return {
      wrapOpen: {
        height: 'auto'
      },
      wrapClosed: {
        height: 'auto'
      }
    }
  },

  calcLayouts () {
    const s = this
    let { summaryInner, detailInner } = s
    let summaryInnerRect = summaryInner && summaryInner.getBoundingClientRect()
    let detailInnerRect = detailInner && detailInner.getBoundingClientRect()
    return {
      wrapOpen: {
        height: detailInnerRect && detailInnerRect.height
      },
      wrapClosed: {
        height: summaryInnerRect && summaryInnerRect.height
      }
    }
  },

  // --------------------
  // Custom
  // --------------------
  toggleDisclosable () {
    const s = this
    let { state } = s
    s.setState({
      open: !state.open
    })
  }
})

export default ApInfoDisclosableItem
