/**
 * Style for ApNotice.
 * @class ApNoticeStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

var _style_constants = require('./constants/style_constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApNoticeStyle */
var ApNoticeStyle = _react2.default.createClass({
  displayName: 'ApNoticeStyle',

  propTypes: {
    style: _react.PropTypes.object,
    highlightColor: _react.PropTypes.string
  },
  getDefaultProps: function getDefaultProps() {
    return {
      style: {},
      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR,
      normalColor: _apemanReactStyle.ApStyle.NORMAL_COLOR,
      infoColor: _apemanReactStyle.ApStyle.INFO_COLOR,
      warnColor: _apemanReactStyle.ApStyle.WARN_COLOR,
      errorColor: _apemanReactStyle.ApStyle.ERROR_COLOR
    };
  },

  statics: {
    styleData: function styleData(config) {
      var highlightColor = config.highlightColor;
      var backgroundColor = config.backgroundColor;
      var infoColor = config.infoColor;
      var warnColor = config.warnColor;
      var errorColor = config.errorColor;

      var itemHeight = 32;
      var vPadding = 4;
      return {
        all: {
          '.ap-notice': {
            display: 'block',
            transition: 'height ' + _style_constants.TRANSITION_DURATION + 'ms',
            overflow: 'hidden',
            fontSize: '12px',
            background: 'rgba(0,0,0,0.75)',
            color: 'white',
            position: 'relative'
          },
          '.ap-notice-spinner': {
            position: 'absolute',
            left: 0,
            right: 0,
            top: 0,
            bottom: 0,
            backgroundColor: 'rgba(255,255,255,0.5)',
            color: '#DDD',
            textAlign: 'center'
          },
          '.ap-notice-inner': {},
          '.ap-notice-item-inner': {
            display: 'flex',
            width: '100%',
            justifyContent: 'space-between',
            alignItems: 'center',
            boxSizing: 'border-box',
            padding: vPadding + 'px 8px',
            margin: '0 auto',
            minHeight: itemHeight + vPadding * 2 + 'px'
          },
          '.ap-notice-item': {
            display: 'block'
          },
          '.ap-notice-item-hidden': {
            display: 'none !important'
          },
          '.ap-notice-item-action': {
            whiteSpace: 'nowrap'
          },
          '.ap-notice-item-text': {
            fontStyle: 'italic'
          },
          '.ap-notice-item-button': {
            backgroundColor: 'transparent',
            height: itemHeight + 'px',
            padding: '0 8px',
            margin: 0,
            lineHeight: itemHeight + 'px',
            border: 'none'
          },
          '.ap-notice-item-info .ap-notice-item-button': {
            color: '' + infoColor
          },
          '.ap-notice-item-warn .ap-notice-item-button': {
            color: '' + warnColor
          },
          '.ap-notice-item-error .ap-notice-item-button': {
            color: '' + errorColor
          },
          '.ap-notice-item-aligner': {
            display: 'inline-block',
            verticalAlign: 'middle',
            width: '1px',
            marginRight: '-1px',
            opacity: 0
          }
        }
      };
    }
  },
  render: function render() {
    var s = this;
    var props = s.props;

    var _ApNoticeStyle$styleD = ApNoticeStyle.styleData(props);

    var all = _ApNoticeStyle$styleD.all;
    var small = _ApNoticeStyle$styleD.small;
    var medium = _ApNoticeStyle$styleD.medium;
    var large = _ApNoticeStyle$styleD.large;


    return _react2.default.createElement(
      _apemanReactStyle.ApStyle,
      { data: Object.assign(all, props.style),
        smallMediaData: small,
        mediumMediaData: medium,
        largeMediaData: large
      },
      props.children
    );
  }
});

exports.default = ApNoticeStyle;
//# sourceMappingURL=data:application/json;base64,bnVsbA==