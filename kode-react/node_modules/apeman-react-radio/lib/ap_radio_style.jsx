/**
 * Style for ApRadio.
 * @class ApRadioStyle
 */

'use strict'

import React, { Component, PropTypes as types } from 'react'
import { ApStyle } from 'apeman-react-style'

/** @lends ApRadioStyle */
class ApRadioStyle extends Component {
  render () {
    const s = this
    let { props } = s

    let { all, small, medium, large } = ApRadioStyle.styleData(props)

    return (
      <ApStyle data={ Object.assign(all, props.style) }
               smallMediaData={ small }
               mediumMediaData={ medium }
               largeMediaData={ large }
      >{ props.children }</ApStyle>
    )
  }
}

Object.assign(Component, {
  propTypes: {
    style: types.object,
    highlightColor: types.string
  },
  defaultProps: {
    scope: false,
    style: {},
    highlightColor: ApStyle.DEFAULT_HIGHLIGHT_COLOR
  },
  styleData (config) {
    let { highlightColor } = config
    return {
      all: {
        '.ap-radio': {
          display: 'inline-block',
          padding: '0 4px',
          cursor: 'pointer',
          position: 'relative'
        },
        '.ap-radio:hover': {
          opacity: 0.9
        },
        '.ap-radio:active': {
          opacity: 0.75
        },
        '.ap-radio-input': {
          display: 'inline-block',
          padding: '0 2px',
          position: 'relative',
          top: '-2px',
          opacity: 0,
          zIndex: 8
        },
        '.ap-radio-title': {
          display: 'inline-block'
        },
        '.ap-radio-icon': {
          position: 'absolute',
          left: 2,
          top: 0,
          bottom: 0,
          display: 'inline-flex',
          justifyContent: 'center',
          alignItems: 'center'
        },
        '.ap-radio:hover .ap-radio-icon': {
          color: `${highlightColor}`
        },
        '.ap-radio:active .ap-radio-icon': {
          opacity: 0.5
        },
        '.ap-radio-icon-checked': {
          color: `${highlightColor}`
        }
      }
    }
  }
})

export default ApRadioStyle
