/**
 * Button for header.
 * @class ApViewHeaderTitle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _apemanReactIcon = require('apeman-react-icon');

var _apemanReactTouchable = require('apeman-react-touchable');

var _asobj = require('asobj');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApViewHeaderTitle */
var ApViewHeaderTitle = function (_Component) {
  (0, _inherits3.default)(ApViewHeaderTitle, _Component);

  function ApViewHeaderTitle() {
    (0, _classCallCheck3.default)(this, ApViewHeaderTitle);
    return (0, _possibleConstructorReturn3.default)(this, (ApViewHeaderTitle.__proto__ || (0, _getPrototypeOf2.default)(ApViewHeaderTitle)).apply(this, arguments));
  }

  (0, _createClass3.default)(ApViewHeaderTitle, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      var s = this;
      var props = s.props;
      var state = s.state;

      return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
    }
  }, {
    key: 'render',
    value: function render() {
      var s = this;
      var props = s.props;
      var text = props.text;
      var icon = props.icon;


      var isEmpty = !(text || icon);
      if (isEmpty) {
        return null;
      }

      return _react2.default.createElement(
        'h3',
        { className: (0, _classnames2.default)('ap-view-header-title', props.className),
          style: (0, _assign2.default)({}, props.style) },
        _react2.default.createElement(
          'span',
          { className: 'ap-view-header-title-inner' },
          _react2.default.createElement(_apemanReactIcon.ApIcon, { className: icon }),
          _react2.default.createElement(
            'span',
            { className: 'ap-view-header-title-text' },
            text
          ),
          props.children
        )
      );
    }
  }]);
  return ApViewHeaderTitle;
}(_react.Component);

(0, _assign2.default)(ApViewHeaderTitle, {
  // --------------------
  // Specs
  // --------------------

  propTypes: {
    /** Text of the title */
    text: _react.PropTypes.string,
    /** Icon of the title */
    icon: _react.PropTypes.string
  },

  defaultProps: {
    text: null,
    icon: null
  }

});

exports.default = (0, _apemanReactTouchable.withTouch)(ApViewHeaderTitle);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX3ZpZXdfaGVhZGVyX3RpdGxlLmpzeCJdLCJuYW1lcyI6WyJBcFZpZXdIZWFkZXJUaXRsZSIsIm5leHRQcm9wcyIsIm5leHRTdGF0ZSIsInMiLCJwcm9wcyIsInN0YXRlIiwidGV4dCIsImljb24iLCJpc0VtcHR5IiwiY2xhc3NOYW1lIiwic3R5bGUiLCJjaGlsZHJlbiIsInByb3BUeXBlcyIsInN0cmluZyIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBO0lBQ01BLGlCOzs7Ozs7Ozs7OzBDQUNtQkMsUyxFQUFXQyxTLEVBQVc7QUFDM0MsVUFBTUMsSUFBSSxJQUFWO0FBRDJDLFVBRXJDQyxLQUZxQyxHQUVwQkQsQ0FGb0IsQ0FFckNDLEtBRnFDO0FBQUEsVUFFOUJDLEtBRjhCLEdBRXBCRixDQUZvQixDQUU5QkUsS0FGOEI7O0FBRzNDLGFBQU8sQ0FBQyx5QkFBYUQsS0FBYixFQUFvQkgsU0FBcEIsQ0FBRCxJQUFtQyx5QkFBYUksS0FBYixFQUFvQkgsU0FBcEIsQ0FBMUM7QUFDRDs7OzZCQUVTO0FBQ1IsVUFBTUMsSUFBSSxJQUFWO0FBRFEsVUFFRkMsS0FGRSxHQUVRRCxDQUZSLENBRUZDLEtBRkU7QUFBQSxVQUlGRSxJQUpFLEdBSWFGLEtBSmIsQ0FJRkUsSUFKRTtBQUFBLFVBSUlDLElBSkosR0FJYUgsS0FKYixDQUlJRyxJQUpKOzs7QUFNUixVQUFJQyxVQUFVLEVBQUVGLFFBQVFDLElBQVYsQ0FBZDtBQUNBLFVBQUlDLE9BQUosRUFBYTtBQUNYLGVBQU8sSUFBUDtBQUNEOztBQUVELGFBQ0U7QUFBQTtBQUFBLFVBQUksV0FBWSwwQkFBVyxzQkFBWCxFQUFtQ0osTUFBTUssU0FBekMsQ0FBaEI7QUFDSSxpQkFBUSxzQkFBYyxFQUFkLEVBQWtCTCxNQUFNTSxLQUF4QixDQURaO0FBRUk7QUFBQTtBQUFBLFlBQU0sV0FBVSw0QkFBaEI7QUFDSSxtRUFBUSxXQUFZSCxJQUFwQixHQURKO0FBRUk7QUFBQTtBQUFBLGNBQU0sV0FBVSwyQkFBaEI7QUFBOENEO0FBQTlDLFdBRko7QUFHSUYsZ0JBQU1PO0FBSFY7QUFGSixPQURGO0FBVUQ7Ozs7O0FBR0gsc0JBQWNYLGlCQUFkLEVBQWlDO0FBQy9CO0FBQ0E7QUFDQTs7QUFFQVksYUFBVztBQUNUO0FBQ0FOLFVBQU0saUJBQU1PLE1BRkg7QUFHVDtBQUNBTixVQUFNLGlCQUFNTTtBQUpILEdBTG9COztBQVkvQkMsZ0JBQWM7QUFDWlIsVUFBTSxJQURNO0FBRVpDLFVBQU07QUFGTTs7QUFaaUIsQ0FBakM7O2tCQW1CZSxxQ0FBVVAsaUJBQVYsQyIsImZpbGUiOiJhcF92aWV3X2hlYWRlcl90aXRsZS5qc3giLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBCdXR0b24gZm9yIGhlYWRlci5cbiAqIEBjbGFzcyBBcFZpZXdIZWFkZXJUaXRsZVxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50LCBQcm9wVHlwZXMgYXMgdHlwZXMgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnXG5pbXBvcnQgeyBBcEljb24gfSBmcm9tICdhcGVtYW4tcmVhY3QtaWNvbidcbmltcG9ydCB7IHdpdGhUb3VjaCB9IGZyb20gJ2FwZW1hbi1yZWFjdC10b3VjaGFibGUnXG5pbXBvcnQgeyBzaGFsbG93RXF1YWwgfSBmcm9tICdhc29iaidcblxuLyoqIEBsZW5kcyBBcFZpZXdIZWFkZXJUaXRsZSAqL1xuY2xhc3MgQXBWaWV3SGVhZGVyVGl0bGUgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzaG91bGRDb21wb25lbnRVcGRhdGUgKG5leHRQcm9wcywgbmV4dFN0YXRlKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcywgc3RhdGUgfSA9IHNcbiAgICByZXR1cm4gIXNoYWxsb3dFcXVhbChwcm9wcywgbmV4dFByb3BzKSB8fCBzaGFsbG93RXF1YWwoc3RhdGUsIG5leHRTdGF0ZSlcbiAgfVxuXG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcyB9ID0gc1xuXG4gICAgbGV0IHsgdGV4dCwgaWNvbiB9ID0gcHJvcHNcblxuICAgIGxldCBpc0VtcHR5ID0gISh0ZXh0IHx8IGljb24pXG4gICAgaWYgKGlzRW1wdHkpIHtcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxoMyBjbGFzc05hbWU9eyBjbGFzc25hbWVzKCdhcC12aWV3LWhlYWRlci10aXRsZScsIHByb3BzLmNsYXNzTmFtZSkgfVxuICAgICAgICAgIHN0eWxlPXsgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMuc3R5bGUpIH0+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdhcC12aWV3LWhlYWRlci10aXRsZS1pbm5lcic+XG4gICAgICAgICAgICAgIDxBcEljb24gY2xhc3NOYW1lPXsgaWNvbiB9Lz5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdhcC12aWV3LWhlYWRlci10aXRsZS10ZXh0Jz57IHRleHQgfTwvc3Bhbj5cbiAgICAgICAgICAgIHsgcHJvcHMuY2hpbGRyZW4gfVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgIDwvaDM+XG4gICAgKVxuICB9XG59XG5cbk9iamVjdC5hc3NpZ24oQXBWaWV3SGVhZGVyVGl0bGUsIHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gU3BlY3NcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICBwcm9wVHlwZXM6IHtcbiAgICAvKiogVGV4dCBvZiB0aGUgdGl0bGUgKi9cbiAgICB0ZXh0OiB0eXBlcy5zdHJpbmcsXG4gICAgLyoqIEljb24gb2YgdGhlIHRpdGxlICovXG4gICAgaWNvbjogdHlwZXMuc3RyaW5nXG4gIH0sXG5cbiAgZGVmYXVsdFByb3BzOiB7XG4gICAgdGV4dDogbnVsbCxcbiAgICBpY29uOiBudWxsXG4gIH1cblxufSlcblxuZXhwb3J0IGRlZmF1bHQgd2l0aFRvdWNoKEFwVmlld0hlYWRlclRpdGxlKVxuIl19