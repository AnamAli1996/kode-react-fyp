/**
 * Header for view.
 * @class ApViewHeader
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _ap_view_header_button = require('./ap_view_header_button');

var _ap_view_header_button2 = _interopRequireDefault(_ap_view_header_button);

var _ap_view_header_title = require('./ap_view_header_title');

var _ap_view_header_title2 = _interopRequireDefault(_ap_view_header_title);

var _apemanReactContainer = require('apeman-react-container');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApViewHeader */
var ApViewHeader = function (_Component) {
  (0, _inherits3.default)(ApViewHeader, _Component);

  function ApViewHeader() {
    (0, _classCallCheck3.default)(this, ApViewHeader);
    return (0, _possibleConstructorReturn3.default)(this, (ApViewHeader.__proto__ || (0, _getPrototypeOf2.default)(ApViewHeader)).apply(this, arguments));
  }

  (0, _createClass3.default)(ApViewHeader, [{
    key: 'render',
    value: function render() {
      var s = this;
      var props = s.props;


      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)('ap-view-header', props.className),
          style: (0, _assign2.default)({}, props.style) },
        _react2.default.createElement(
          _apemanReactContainer.ApContainer,
          { className: 'ap-view-header-inner' },
          _react2.default.createElement(_ap_view_header_button2.default, { icon: props.leftIcon,
            text: props.leftText,
            onTap: props.onLeftTap,
            className: 'ape-view-header-button-left'
          }),
          _react2.default.createElement(
            'div',
            { className: 'ap-view-header-content' },
            _react2.default.createElement(_ap_view_header_title2.default, { icon: props.titleIcon,
              text: props.titleText,
              onTap: props.onTap
            }),
            props.children
          ),
          _react2.default.createElement(_ap_view_header_button2.default, { icon: props.rightIcon,
            text: props.rightText,
            onTap: props.onRightTap,
            className: 'ape-view-header-button-right'
          })
        )
      );
    }
  }]);
  return ApViewHeader;
}(_react.Component);

(0, _assign2.default)(ApViewHeader, {
  // --------------------
  // Specs
  // --------------------

  propTypes: {
    /** Handler of left button tap */
    onLeftTap: _react.PropTypes.func,
    /** Text of left button */
    leftText: _react.PropTypes.string,
    /** Icon of left button */
    leftIcon: _react.PropTypes.string,
    /** Text of title */
    titleText: _react.PropTypes.string,
    /** Title of icon */
    titleIcon: _react.PropTypes.string,
    /** Text of right button */
    rightText: _react.PropTypes.string,
    /** Icon of right button */
    rightIcon: _react.PropTypes.string,
    /** Handler of right button tap */
    onRightTap: _react.PropTypes.func
  },

  defaultProps: {
    leftText: null,
    leftIcon: null,
    onLeftTap: null,
    titleText: null,
    titleIcon: null,
    rightText: null,
    rightIcon: null,
    onRightTap: null
  },

  // From http://ionicons.com/
  BACK_ICON: 'ion ion-chevron-left',
  NEXT_ICON: 'ion ion-chevron-right',
  ADD_ICON: 'ion ion-plus-round',
  UP_ICON: 'ion ion-chevron-up',
  CLOSE_ICON: 'ion ion-android-close',
  DOWN_ICON: 'ion ion-chevron-down',
  SHARE_ICON: 'ion ion-share',
  COMPOSE_ICON: 'ion ion-compose',
  MENU_ICON: 'ion ion-navicon-round',

  /**
   * Get icon for view pop.
   * @param {string} way - View push way.
   * @returns {string} - Pop icon for a way
   */
  popIcon: function popIcon(way) {
    switch (String(way).toUpperCase()) {
      case 'PUSH_LEFT':
        return ApViewHeader.BACK_ICON;
      default:
        return ApViewHeader.CLOSE_ICON;
    }
  }
});

exports.default = ApViewHeader;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX3ZpZXdfaGVhZGVyLmpzeCJdLCJuYW1lcyI6WyJBcFZpZXdIZWFkZXIiLCJzIiwicHJvcHMiLCJjbGFzc05hbWUiLCJzdHlsZSIsImxlZnRJY29uIiwibGVmdFRleHQiLCJvbkxlZnRUYXAiLCJ0aXRsZUljb24iLCJ0aXRsZVRleHQiLCJvblRhcCIsImNoaWxkcmVuIiwicmlnaHRJY29uIiwicmlnaHRUZXh0Iiwib25SaWdodFRhcCIsInByb3BUeXBlcyIsImZ1bmMiLCJzdHJpbmciLCJkZWZhdWx0UHJvcHMiLCJCQUNLX0lDT04iLCJORVhUX0lDT04iLCJBRERfSUNPTiIsIlVQX0lDT04iLCJDTE9TRV9JQ09OIiwiRE9XTl9JQ09OIiwiU0hBUkVfSUNPTiIsIkNPTVBPU0VfSUNPTiIsIk1FTlVfSUNPTiIsInBvcEljb24iLCJ3YXkiLCJTdHJpbmciLCJ0b1VwcGVyQ2FzZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTtJQUNNQSxZOzs7Ozs7Ozs7OzZCQUNNO0FBQ1IsVUFBTUMsSUFBSSxJQUFWO0FBRFEsVUFFRkMsS0FGRSxHQUVRRCxDQUZSLENBRUZDLEtBRkU7OztBQUlSLGFBQ0U7QUFBQTtBQUFBLFVBQUssV0FBWSwwQkFBVyxnQkFBWCxFQUE2QkEsTUFBTUMsU0FBbkMsQ0FBakI7QUFDSyxpQkFBUSxzQkFBYyxFQUFkLEVBQWtCRCxNQUFNRSxLQUF4QixDQURiO0FBRUU7QUFBQTtBQUFBLFlBQWEsV0FBVSxzQkFBdkI7QUFDRSwyRUFBb0IsTUFBT0YsTUFBTUcsUUFBakM7QUFDb0Isa0JBQU9ILE1BQU1JLFFBRGpDO0FBRW9CLG1CQUFRSixNQUFNSyxTQUZsQztBQUdvQix1QkFBVTtBQUg5QixZQURGO0FBTUU7QUFBQTtBQUFBLGNBQUssV0FBVSx3QkFBZjtBQUNFLDRFQUFtQixNQUFPTCxNQUFNTSxTQUFoQztBQUNtQixvQkFBT04sTUFBTU8sU0FEaEM7QUFFbUIscUJBQVFQLE1BQU1RO0FBRmpDLGNBREY7QUFLSVIsa0JBQU1TO0FBTFYsV0FORjtBQWFFLDJFQUFvQixNQUFPVCxNQUFNVSxTQUFqQztBQUNvQixrQkFBT1YsTUFBTVcsU0FEakM7QUFFb0IsbUJBQVFYLE1BQU1ZLFVBRmxDO0FBR29CLHVCQUFVO0FBSDlCO0FBYkY7QUFGRixPQURGO0FBd0JEOzs7OztBQUdILHNCQUFjZCxZQUFkLEVBQTRCO0FBQzFCO0FBQ0E7QUFDQTs7QUFFQWUsYUFBVztBQUNUO0FBQ0FSLGVBQVcsaUJBQU1TLElBRlI7QUFHVDtBQUNBVixjQUFVLGlCQUFNVyxNQUpQO0FBS1Q7QUFDQVosY0FBVSxpQkFBTVksTUFOUDtBQU9UO0FBQ0FSLGVBQVcsaUJBQU1RLE1BUlI7QUFTVDtBQUNBVCxlQUFXLGlCQUFNUyxNQVZSO0FBV1Q7QUFDQUosZUFBVyxpQkFBTUksTUFaUjtBQWFUO0FBQ0FMLGVBQVcsaUJBQU1LLE1BZFI7QUFlVDtBQUNBSCxnQkFBWSxpQkFBTUU7QUFoQlQsR0FMZTs7QUF3QjFCRSxnQkFBYztBQUNaWixjQUFVLElBREU7QUFFWkQsY0FBVSxJQUZFO0FBR1pFLGVBQVcsSUFIQztBQUlaRSxlQUFXLElBSkM7QUFLWkQsZUFBVyxJQUxDO0FBTVpLLGVBQVcsSUFOQztBQU9aRCxlQUFXLElBUEM7QUFRWkUsZ0JBQVk7QUFSQSxHQXhCWTs7QUFtQzFCO0FBQ0FLLGFBQVcsc0JBcENlO0FBcUMxQkMsYUFBVyx1QkFyQ2U7QUFzQzFCQyxZQUFVLG9CQXRDZ0I7QUF1QzFCQyxXQUFTLG9CQXZDaUI7QUF3QzFCQyxjQUFZLHVCQXhDYztBQXlDMUJDLGFBQVcsc0JBekNlO0FBMEMxQkMsY0FBWSxlQTFDYztBQTJDMUJDLGdCQUFjLGlCQTNDWTtBQTRDMUJDLGFBQVcsdUJBNUNlOztBQThDMUI7Ozs7O0FBS0FDLFNBbkQwQixtQkFtRGpCQyxHQW5EaUIsRUFtRFo7QUFDWixZQUFRQyxPQUFPRCxHQUFQLEVBQVlFLFdBQVosRUFBUjtBQUNFLFdBQUssV0FBTDtBQUNFLGVBQU8vQixhQUFhbUIsU0FBcEI7QUFDRjtBQUNFLGVBQU9uQixhQUFhdUIsVUFBcEI7QUFKSjtBQU1EO0FBMUR5QixDQUE1Qjs7a0JBOERldkIsWSIsImZpbGUiOiJhcF92aWV3X2hlYWRlci5qc3giLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBIZWFkZXIgZm9yIHZpZXcuXG4gKiBAY2xhc3MgQXBWaWV3SGVhZGVyXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudCwgUHJvcFR5cGVzIGFzIHR5cGVzfSBmcm9tICdyZWFjdCdcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnXG5cbmltcG9ydCBBcFZpZXdIZWFkZXJCdXR0b24gZnJvbSAnLi9hcF92aWV3X2hlYWRlcl9idXR0b24nXG5pbXBvcnQgQXBWaWV3SGVhZGVyVGl0bGUgZnJvbSAnLi9hcF92aWV3X2hlYWRlcl90aXRsZSdcbmltcG9ydCB7QXBDb250YWluZXJ9IGZyb20gJ2FwZW1hbi1yZWFjdC1jb250YWluZXInXG5cbi8qKiBAbGVuZHMgQXBWaWV3SGVhZGVyICovXG5jbGFzcyBBcFZpZXdIZWFkZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIgKCkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMgfSA9IHNcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17IGNsYXNzbmFtZXMoJ2FwLXZpZXctaGVhZGVyJywgcHJvcHMuY2xhc3NOYW1lKSB9XG4gICAgICAgICAgIHN0eWxlPXsgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMuc3R5bGUpIH0+XG4gICAgICAgIDxBcENvbnRhaW5lciBjbGFzc05hbWU9J2FwLXZpZXctaGVhZGVyLWlubmVyJz5cbiAgICAgICAgICA8QXBWaWV3SGVhZGVyQnV0dG9uIGljb249eyBwcm9wcy5sZWZ0SWNvbiB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0PXsgcHJvcHMubGVmdFRleHQgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25UYXA9eyBwcm9wcy5vbkxlZnRUYXAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdhcGUtdmlldy1oZWFkZXItYnV0dG9uLWxlZnQnXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nYXAtdmlldy1oZWFkZXItY29udGVudCc+XG4gICAgICAgICAgICA8QXBWaWV3SGVhZGVyVGl0bGUgaWNvbj17IHByb3BzLnRpdGxlSWNvbiB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dD17IHByb3BzLnRpdGxlVGV4dCB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25UYXA9eyBwcm9wcy5vblRhcCB9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgeyBwcm9wcy5jaGlsZHJlbiB9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPEFwVmlld0hlYWRlckJ1dHRvbiBpY29uPXsgcHJvcHMucmlnaHRJY29uIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ9eyBwcm9wcy5yaWdodFRleHQgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25UYXA9eyBwcm9wcy5vblJpZ2h0VGFwIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nYXBlLXZpZXctaGVhZGVyLWJ1dHRvbi1yaWdodCdcbiAgICAgICAgICAvPlxuICAgICAgICA8L0FwQ29udGFpbmVyPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59XG5cbk9iamVjdC5hc3NpZ24oQXBWaWV3SGVhZGVyLCB7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFNwZWNzXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgcHJvcFR5cGVzOiB7XG4gICAgLyoqIEhhbmRsZXIgb2YgbGVmdCBidXR0b24gdGFwICovXG4gICAgb25MZWZ0VGFwOiB0eXBlcy5mdW5jLFxuICAgIC8qKiBUZXh0IG9mIGxlZnQgYnV0dG9uICovXG4gICAgbGVmdFRleHQ6IHR5cGVzLnN0cmluZyxcbiAgICAvKiogSWNvbiBvZiBsZWZ0IGJ1dHRvbiAqL1xuICAgIGxlZnRJY29uOiB0eXBlcy5zdHJpbmcsXG4gICAgLyoqIFRleHQgb2YgdGl0bGUgKi9cbiAgICB0aXRsZVRleHQ6IHR5cGVzLnN0cmluZyxcbiAgICAvKiogVGl0bGUgb2YgaWNvbiAqL1xuICAgIHRpdGxlSWNvbjogdHlwZXMuc3RyaW5nLFxuICAgIC8qKiBUZXh0IG9mIHJpZ2h0IGJ1dHRvbiAqL1xuICAgIHJpZ2h0VGV4dDogdHlwZXMuc3RyaW5nLFxuICAgIC8qKiBJY29uIG9mIHJpZ2h0IGJ1dHRvbiAqL1xuICAgIHJpZ2h0SWNvbjogdHlwZXMuc3RyaW5nLFxuICAgIC8qKiBIYW5kbGVyIG9mIHJpZ2h0IGJ1dHRvbiB0YXAgKi9cbiAgICBvblJpZ2h0VGFwOiB0eXBlcy5mdW5jXG4gIH0sXG5cbiAgZGVmYXVsdFByb3BzOiB7XG4gICAgbGVmdFRleHQ6IG51bGwsXG4gICAgbGVmdEljb246IG51bGwsXG4gICAgb25MZWZ0VGFwOiBudWxsLFxuICAgIHRpdGxlVGV4dDogbnVsbCxcbiAgICB0aXRsZUljb246IG51bGwsXG4gICAgcmlnaHRUZXh0OiBudWxsLFxuICAgIHJpZ2h0SWNvbjogbnVsbCxcbiAgICBvblJpZ2h0VGFwOiBudWxsXG4gIH0sXG5cbiAgLy8gRnJvbSBodHRwOi8vaW9uaWNvbnMuY29tL1xuICBCQUNLX0lDT046ICdpb24gaW9uLWNoZXZyb24tbGVmdCcsXG4gIE5FWFRfSUNPTjogJ2lvbiBpb24tY2hldnJvbi1yaWdodCcsXG4gIEFERF9JQ09OOiAnaW9uIGlvbi1wbHVzLXJvdW5kJyxcbiAgVVBfSUNPTjogJ2lvbiBpb24tY2hldnJvbi11cCcsXG4gIENMT1NFX0lDT046ICdpb24gaW9uLWFuZHJvaWQtY2xvc2UnLFxuICBET1dOX0lDT046ICdpb24gaW9uLWNoZXZyb24tZG93bicsXG4gIFNIQVJFX0lDT046ICdpb24gaW9uLXNoYXJlJyxcbiAgQ09NUE9TRV9JQ09OOiAnaW9uIGlvbi1jb21wb3NlJyxcbiAgTUVOVV9JQ09OOiAnaW9uIGlvbi1uYXZpY29uLXJvdW5kJyxcblxuICAvKipcbiAgICogR2V0IGljb24gZm9yIHZpZXcgcG9wLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gd2F5IC0gVmlldyBwdXNoIHdheS5cbiAgICogQHJldHVybnMge3N0cmluZ30gLSBQb3AgaWNvbiBmb3IgYSB3YXlcbiAgICovXG4gIHBvcEljb24gKHdheSkge1xuICAgIHN3aXRjaCAoU3RyaW5nKHdheSkudG9VcHBlckNhc2UoKSkge1xuICAgICAgY2FzZSAnUFVTSF9MRUZUJzpcbiAgICAgICAgcmV0dXJuIEFwVmlld0hlYWRlci5CQUNLX0lDT05cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBBcFZpZXdIZWFkZXIuQ0xPU0VfSUNPTlxuICAgIH1cbiAgfVxuXG59KVxuXG5leHBvcnQgZGVmYXVsdCBBcFZpZXdIZWFkZXJcbiJdfQ==