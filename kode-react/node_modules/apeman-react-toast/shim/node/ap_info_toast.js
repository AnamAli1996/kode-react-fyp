/**
 * Info toast.
 * @class ApInfoToast
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ap_toast = require('./ap_toast');

var _ap_toast2 = _interopRequireDefault(_ap_toast);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApInfoToast */
var ApInfoToast = _react2.default.createClass({
  displayName: 'ApInfoToast',


  // --------------------
  // Specs
  // --------------------

  propTypes: _ap_toast2.default.propTypes,

  mixins: [],

  statics: {},

  getInitialState: function getInitialState() {
    return {};
  },
  getDefaultProps: function getDefaultProps() {
    return {
      messages: [],
      icon: 'fa fa-exclamation-circle',
      dismiss: null,
      level: 'info'
    };
  },
  render: function render() {
    var s = this;
    var props = s.props;


    return _react2.default.createElement(_ap_toast2.default, _extends({}, props, { className: 'ap-info-toast' }));
  }
});

exports.default = ApInfoToast;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2luZm9fdG9hc3QuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUtBOzs7Ozs7OztBQUVBOzs7O0FBQ0E7Ozs7OztBQUVBO0FBQ0EsSUFBTSxjQUFjLGdCQUFNLFdBQU4sQ0FBa0I7QUFBQTs7O0FBRXBDO0FBQ0E7QUFDQTs7QUFFQSxhQUFXLG1CQUFRLFNBTmlCOztBQVFwQyxVQUFRLEVBUjRCOztBQVVwQyxXQUFTLEVBVjJCOztBQVlwQyxpQkFab0MsNkJBWWpCO0FBQ2pCLFdBQU8sRUFBUDtBQUNELEdBZG1DO0FBZ0JwQyxpQkFoQm9DLDZCQWdCakI7QUFDakIsV0FBTztBQUNMLGdCQUFVLEVBREw7QUFFTCxZQUFNLDBCQUZEO0FBR0wsZUFBUyxJQUhKO0FBSUwsYUFBTztBQUpGLEtBQVA7QUFNRCxHQXZCbUM7QUF5QnBDLFFBekJvQyxvQkF5QjFCO0FBQ1IsUUFBTSxJQUFJLElBQVY7QUFEUSxRQUVGLEtBRkUsR0FFUSxDQUZSLENBRUYsS0FGRTs7O0FBSVIsV0FDRSwrREFBYyxLQUFkLElBQXNCLFdBQVUsZUFBaEMsSUFERjtBQUdEO0FBaENtQyxDQUFsQixDQUFwQjs7a0JBbUNlLFciLCJmaWxlIjoiYXBfaW5mb190b2FzdC5qc3giLCJzb3VyY2VSb290IjoiL1VzZXJzL29rdW5pc2hpbmlzaGkvUHJvamVjdHMvYXBlbWFuLXByb2plY3RzL2FwZW1hbi1yZWFjdC10b2FzdC9jaS8uLi9saWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEluZm8gdG9hc3QuXG4gKiBAY2xhc3MgQXBJbmZvVG9hc3RcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuaW1wb3J0IFJlYWN0LCB7UHJvcFR5cGVzIGFzIHR5cGVzfSBmcm9tICdyZWFjdCdcbmltcG9ydCBBcFRvYXN0IGZyb20gJy4vYXBfdG9hc3QnXG5cbi8qKiBAbGVuZHMgQXBJbmZvVG9hc3QgKi9cbmNvbnN0IEFwSW5mb1RvYXN0ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFNwZWNzXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgcHJvcFR5cGVzOiBBcFRvYXN0LnByb3BUeXBlcyxcblxuICBtaXhpbnM6IFtdLFxuXG4gIHN0YXRpY3M6IHt9LFxuXG4gIGdldEluaXRpYWxTdGF0ZSAoKSB7XG4gICAgcmV0dXJuIHt9XG4gIH0sXG5cbiAgZ2V0RGVmYXVsdFByb3BzICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbWVzc2FnZXM6IFtdLFxuICAgICAgaWNvbjogJ2ZhIGZhLWV4Y2xhbWF0aW9uLWNpcmNsZScsXG4gICAgICBkaXNtaXNzOiBudWxsLFxuICAgICAgbGV2ZWw6ICdpbmZvJ1xuICAgIH1cbiAgfSxcblxuICByZW5kZXIgKCkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMgfSA9IHNcblxuICAgIHJldHVybiAoXG4gICAgICA8QXBUb2FzdCB7IC4uLnByb3BzIH0gY2xhc3NOYW1lPSdhcC1pbmZvLXRvYXN0Jy8+XG4gICAgKVxuICB9XG59KVxuXG5leHBvcnQgZGVmYXVsdCBBcEluZm9Ub2FzdFxuIl19