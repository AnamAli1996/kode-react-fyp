/**
 * apeman react package for search components.
 * @class ApSearch
 */

'use strict'

import React, {PropTypes as types} from 'react'
import ReactDOM from 'react-dom'
import classnames from 'classnames'
import {ApIcon} from 'apeman-react-icon'

const DEFAULT_CLEAR_ICON = 'ion ion-close-round'
const DEFAULT_SEARCH_ICON = 'ion ion-search'

/** @lends ApSearch */
const ApSearch = React.createClass({

  // --------------------
  // Specs
  // --------------------

  propTypes: {
    /** Name of search input */
    name: types.string,
    /** Type of search input */
    type: types.string,
    /** Value of search input */
    value: types.string,
    /** Placeholder of search input */
    placeholder: types.string,
    /** Icon class name of clear button */
    clearIcon: types.string,
    /** Icon class name of search button */
    searchIcon: types.string,
    /** Handler for clear event */
    onClear: types.func,
    /** Open to input */
    open: types.bool,
    /** Render with righted style */
    righted: types.bool
  },

  mixins: [],

  statics: {
    DEFAULT_CLEAR_ICON,
    DEFAULT_SEARCH_ICON
  },

  getInitialState () {
    const s = this
    let { props } = s
    let hasVal = !!props.value
    return {
      closed: !hasVal && !props.open
    }
  },

  getDefaultProps () {
    return {
      name: '',
      type: 'text',
      value: '',
      placeholder: '',
      clearIcon: DEFAULT_CLEAR_ICON,
      searchIcon: DEFAULT_SEARCH_ICON,
      onClear: null,
      open: false,
      righted: false
    }
  },

  render () {
    const s = this
    let { state, props } = s

    let hasVal = !!props.value
    let className = classnames('ap-search-wrap', {
      'ap-search-wrap-empty': !hasVal,
      'ap-search-wrap-closed': !!state.closed,
      'ap-search-wrap-righted': !!props.righted
    })
    return (
      <span className={ className }>
          <a className='ap-search-search-button' onClick={ s.handleSearchTap }>
              <span className='ap-search-aligner'>&nbsp;</span>
              <ApIcon className={ classnames('ap-search-search-icon', props.searchIcon) }/>
          </a>
          <input className={ classnames('ap-search', props.className) }
                 ref={ (input) => { s.input = input } }
                 id={ props.id }
                 name={ props.name }
                 placeholder={ props.placeholder }
                 onChange={ props.onChange }
                 type={ props.type }
                 value={ props.value || '' }/>
          <a className='ap-search-clear-button' onClick={ s.handleClearTap }>
              <span className='ap-search-aligner'>&nbsp;</span>
              <ApIcon className={ classnames('ap-search-clear-icon', props.clearIcon) }/>
          </a>
      </span>
    )
  },

  // --------------------
  // Lifecycle
  // --------------------

  // ------------------
  // Custom
  // ------------------

  handleSearchTap (e) {
    const s = this
    let { state } = s
    let closed = !state.closed
    s.setState({ closed })
    let node = ReactDOM.findDOMNode(s.input)
    if (closed) {
      node.blur()
    } else {
      node.focus()
    }
  },

  handleClearTap (e) {
    const s = this
    let { onClear } = s.props
    if (onClear) {
      onClear(e)
    }
    let node = ReactDOM.findDOMNode(s.input)
    node.focus()
  }

  // ------------------
  // Private
  // ------------------
})

export default ApSearch
