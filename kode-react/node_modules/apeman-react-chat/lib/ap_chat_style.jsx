/**
 * Style for ApChat.
 * @class ApChatStyle
 */

'use strict'

import React, {PropTypes as types} from 'react'
import {ApStyle} from 'apeman-react-style'

/** @lends ApChatStyle */
const ApChatStyle = React.createClass({
  propTypes: {
    style: types.object,
    highlightColor: types.string
  },
  getDefaultProps () {
    return {
      style: {},
      highlightColor: ApStyle.DEFAULT_HIGHLIGHT_COLOR,
      backgroundColor: ApStyle.DEFAULT_BACKGROUND_COLOR
    }
  },
  statics: {
    styleData (config) {
      let { highlightColor, backgroundColor } = config
      let arrowSize = 6

      let arrowPosition = (arrowSize / 2) * -1 + 1.2
      return {
        all: {
          '.ap-chat': {},
          '.ap-chat-item': {
            display: 'flex',
            justifyContent: 'flex-start',
            flexDirection: 'row'
          },
          '.ap-chat-item-align-left': {},
          '.ap-chat-item-align-right': {
            flexDirection: 'row-reverse'
          },
          '.ap-chat-item-balloon': {
            display: 'block',
            maxWidth: ApStyle.CONTENT_WIDTH,
            fontSize: 'smaller',
            margin: '8px 0',
            position: 'relative'
          },
          '.ap-chat-item-balloon-content': {
            position: 'relative',
            zIndex: 2,
            background: backgroundColor,
            borderRadius: '16px',
            padding: '4px 8px',
            display: 'block',
            width: '100%',
            boxSizing: 'border-box'
          },
          '.ap-chat-item-balloon-arrow': {
            position: 'absolute',
            boxSizing: 'border-box',
            width: arrowSize,
            height: arrowSize,
            overflow: 'hidden',
            display: 'inline-block',
            transform: 'skewY(30deg)',
            transformOrigin: '50% 50%',
            borderRadius: '0 0 0 100%',
            top: 4,
            background: backgroundColor,
            left: arrowPosition,
            zIndex: 2
          },
          '.ap-chat-item-align-right .ap-chat-item-balloon-arrow': {
            borderRadius: '0 0 100% 0',
            right: arrowPosition,
            transform: 'skewY(-30deg)',
            left: 'auto'
          },
          '.ap-chat-item-info': {
            fontSize: 'x-small',
            boxSizing: 'border-box',
            padding: '8px 4px',
            opacity: 0.5,
            display: 'inline-flex',
            flexDirection: 'column',
            justifyContent: 'flex-start'
          },
          '.ap-chat-item-align-right .ap-chat-item-info': {
            alignItems: 'flex-end'
          }
        }
      }
    }
  },
  render () {
    const s = this
    let { props } = s

    let { all, small, medium, large } = ApChatStyle.styleData(props)

    return (
      <ApStyle data={ Object.assign(all, props.style) }
               smallMediaData={ small }
               mediumMediaData={ medium }
               largeMediaData={ large }
      >{ props.children }</ApStyle>
    )
  }
})

export default ApChatStyle
