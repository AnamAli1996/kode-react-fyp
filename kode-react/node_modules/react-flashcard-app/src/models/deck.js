import { getPairs } from '../utils/data';

function Deck(data) {
  this.id = data.id;
  this.name = data.name;
  this.cards = getPairs(data);
  this.length = this.cards.length;

  this.getNext = (startIndex, removed, step = 1) => {
    if (this.cards.length > removed.length) {
      let index = startIndex;
      do {
        index = this.nextIndex(index, step);
      } while (removed.indexOf(this.cards[index].id) !== -1);
      return index;
    }
    return -1;
  };

  this.nextIndex = (index, step) => {
    const next = index + step;
    if (next >= this.cards.length) { return 0; }
    if (next < 0) { return this.cards.length - 1; }
    return next;
  };

  this.first = removed =>
    this.getNext(-1, removed);

  this.idByIndex = index =>
    this.cards[index].id;

  this.indexById = (id) => {
    for (let i = 0; i < this.cards.length; i += 1) {
      if (this.cards[i].id === id) {
        return i;
      }
    }
    return -1;
  };

  this.shuffle = () => {
    const shuffledArr = this.cards.concat();
    for (let i = shuffledArr.length; i; i -= 1) {
      const j = Math.floor(Math.random() * i);
      [shuffledArr[i - 1], shuffledArr[j]] = [shuffledArr[j], shuffledArr[i - 1]];
    }
    this.cards = shuffledArr;
    return true;
  };
}

export default Deck;
