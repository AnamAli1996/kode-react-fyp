/**
 * Style for ApViewStack.
 * @class ApViewStackStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApViewStackStyle */
var ApViewStackStyle = _react2.default.createClass({
  displayName: 'ApViewStackStyle',

  propTypes: {
    style: _react.PropTypes.object,
    transitionDuration: _react.PropTypes.number
  },
  getDefaultProps: function getDefaultProps() {
    return {
      style: {},
      transitionDuration: 400
    };
  },

  statics: {
    styleData: function styleData(config) {
      var transitionDuration = config.transitionDuration;

      return {
        all: {
          '.ap-view-stack': {
            display: 'block',
            boxSizing: 'border-box',
            minHeight: '200px',
            minWidth: '200px',
            overflow: 'hidden',
            position: 'relative'
          },
          '.ap-view-stack-empty': {
            overflow: 'visible',
            bottom: '100%',
            right: '100%',
            pointerEvents: 'none',
            transition: 'bottom ' + transitionDuration + 'ms, right ' + transitionDuration + 'ms',
            minWidth: 0,
            minHeight: 0,
            width: 'auto',
            height: 'auto',
            transitionDelay: transitionDuration + 'ms'
          },
          '.ap-view-stack-fixed': {
            position: 'fixed',
            left: 0,
            top: 0,
            right: 0,
            bottom: 0,
            zIndex: 44,
            background: 'transparent'
          },
          '.ap-view-stack-fixed.ap-view-stack-empty': {
            bottom: '100%',
            right: '100%'
          },
          '.ap-view-stack-inner': {
            position: 'absolute',
            left: '-1px',
            top: '-1px',
            right: '-1px',
            bottom: '-1px'
          },
          '.ap-view-stack-inner > *': {
            position: 'absolute',
            left: 0,
            top: 0,
            width: '100%',
            height: '100%',
            boxSizing: 'border-box',
            background: 'white',
            border: '1px solid #F0F0F0',
            boxShadow: '0px 0px 4px rgba(0,0,0,0.1)',
            zIndex: 1
          },
          '.ap-view-stack-inner > *:nth-child(2)': {
            zIndex: 2
          },
          '.ap-view-stack-inner > *:nth-child(1)': {
            zIndex: 4
          },
          // -----------------------
          // PUSH_LEFT pushing animation
          // -----------------------
          '.ap-view-stack-transition-enter.ap-view-way-push-left': {
            left: '100%'
          },
          '.ap-view-stack-transition-enter.ap-view-way-push-left + *': {
            left: '0%'
          },
          '.ap-view-stack-transition-enter.ap-view-stack-transition-enter-active.ap-view-way-push-left': {
            left: '0%',
            transition: 'left ease-out ' + transitionDuration + 'ms'
          },
          '.ap-view-stack-transition-enter.ap-view-stack-transition-enter-active.ap-view-way-push-left + *': {
            left: '-50%',
            transition: 'left ease-out ' + transitionDuration + 'ms'
          },
          '.ap-view-stack-transition-leave.ap-view-way-push-left': {
            left: '0%'
          },
          '.ap-view-stack-transition-leave.ap-view-way-push-left + *': {
            left: '-50%'
          },
          '.ap-view-stack-transition-leave.ap-view-stack-transition-leave-active.ap-view-way-push-left': {
            left: '100%',
            transition: 'left ease-out ' + transitionDuration + 'ms'
          },
          '.ap-view-stack-transition-leave.ap-view-stack-transition-leave-active.ap-view-way-push-left + *': {
            left: '0%',
            transition: 'left ease-out ' + transitionDuration + 'ms'
          },
          // -----------------------
          // FADE_IN pushing animation
          // -----------------------
          '.ap-view-stack-transition-enter.ap-view-way-fade-in': {
            opacity: 0
          },
          '.ap-view-stack-transition-enter.ap-view-stack-transition-enter-active.ap-view-way-fade-in': {
            opacity: 1,
            transition: 'opacity ease-out ' + transitionDuration + 'ms'
          },
          '.ap-view-stack-transition-leave.ap-view-way-fade-in': {
            opacity: 1
          },
          '.ap-view-stack-transition-leave.ap-view-stack-transition-leave-active.ap-view-way-fade-in': {
            opacity: 0,
            transition: 'opacity ease-out ' + transitionDuration + 'ms'
          },
          // -----------------------
          // PULL_UP pushing animation
          // -----------------------
          '.ap-view-stack-transition-enter.ap-view-way-pull-up': {
            top: '100%'
          },
          '.ap-view-stack-transition-enter.ap-view-stack-transition-enter-active.ap-view-way-pull-up': {
            top: '0%',
            transition: 'top ease-out ' + transitionDuration + 'ms'
          },
          '.ap-view-stack-transition-leave.ap-view-way-pull-up': {
            top: '0%'
          },
          '.ap-view-stack-transition-leave.ap-view-stack-transition-leave-active.ap-view-way-pull-up': {
            top: '100%',
            transition: 'top ease-out ' + transitionDuration + 'ms'
          }
        }
      };
    }
  },
  render: function render() {
    var s = this;
    var props = s.props;

    var _ApViewStackStyle$sty = ApViewStackStyle.styleData(props);

    var all = _ApViewStackStyle$sty.all;
    var small = _ApViewStackStyle$sty.small;
    var medium = _ApViewStackStyle$sty.medium;
    var large = _ApViewStackStyle$sty.large;


    return _react2.default.createElement(
      _apemanReactStyle.ApStyle,
      { data: (0, _assign2.default)(all, props.style),
        smallMediaData: small,
        mediumMediaData: medium,
        largeMediaData: large
      },
      props.children
    );
  }
});

exports.default = ApViewStackStyle;
//# sourceMappingURL=data:application/json;base64,