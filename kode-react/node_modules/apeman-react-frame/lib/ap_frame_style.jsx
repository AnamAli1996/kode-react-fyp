/**
 * Style for ApFrame.
 * @class ApFrameStyle
 */

'use strict'

import React, {PropTypes as types} from 'react'
import {ApStyle} from 'apeman-react-style'
import {mix} from 'acolor'

/** @lends ApFrameStyle */
const ApFrameStyle = React.createClass({
  propTypes: {
    style: types.object,
    highlightColor: types.string
  },
  getDefaultProps () {
    return {
      style: {},
      highlightColor: ApStyle.DEFAULT_HIGHLIGHT_COLOR,
      backgroundColor: ApStyle.DEFAULT_BACKGROUND_COLOR
    }
  },
  statics: {
    styleData (config) {
      let {
        highlightColor
      } = config
      return {
        all: {
          '.ap-frame': {
            position: 'relative'
          },
          '.ap-frame-full': {
            position: 'absolute',
            left: 0,
            top: 0,
            right: 0,
            bottom: 0,
            boxSizing: 'border-box',
            overflow: 'hidden'
          },
          '.ap-frame-spinner': {
            width: '100%',
            height: '100%',
            position: 'absolute',
            textAlign: 'center',
            boxSizing: 'content-box',
            zIndex: 4,
            background: ApStyle.COVER_BACKGROUND,
            color: ApStyle.COVER_COLOR
          },
          '.ap-frame-frame': {
            width: '100%',
            height: '100%',
            boxSizing: 'content-box'
          },
          '.ap-markable-frame': {
            position: 'relative',
            overflow: 'auto'
          },
          '.ap-markable-frame-markable-item': {
            position: 'absolute',
            background: highlightColor,
            opacity: '0.75',
            boxSizing: 'border-box',
            border: `2px solid ${mix(highlightColor, '#000')}`,
            boxShadow: '4px 4px 8px rgba(0,0,0,0.5)',
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center'
          }
        },
        small: {},
        medium: {},
        large: {}
      }
    }
  },
  render () {
    const s = this
    let { props } = s

    let { all, small, medium, large } = ApFrameStyle.styleData(props)

    return (
      <ApStyle data={ Object.assign(all, props.style) }
               smallMediaData={ small }
               mediumMediaData={ medium }
               largeMediaData={ large }
      >{ props.children }</ApStyle>
    )
  }
})

export default ApFrameStyle
