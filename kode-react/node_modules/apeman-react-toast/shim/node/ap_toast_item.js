/**
 * Toast item component
 * @class ApToastItem
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _asobj = require('asobj');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _apemanReactIcon = require('apeman-react-icon');

var _apemanReactTouchable = require('apeman-react-touchable');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApToastItem */
var ApToastItem = _react2.default.createClass({
  displayName: 'ApToastItem',

  // --------------------
  // Specs
  // --------------------

  propTypes: {
    text: _react.PropTypes.string,
    icon: _react.PropTypes.string
  },

  mixins: [],

  render: function render() {
    var s = this;
    var props = s.props;

    return _react2.default.createElement(
      'div',
      { className: 'ap-toast-item' },
      _react2.default.createElement(
        'span',
        { className: 'ap-toast-text' },
        _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-toast-item-icon', props.icon) }),
        props.text
      )
    );
  },


  // --------------------
  // Lifecycle
  // --------------------

  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    var s = this;
    var props = s.props;
    var state = s.state;

    return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
  }
});

exports.default = ApToastItem; // Dummy for doc

exports.default = (0, _apemanReactTouchable.withTouch)(ApToastItem);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX3RvYXN0X2l0ZW0uanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBSUE7Ozs7OztBQUVBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7OztBQUVBO0FBQ0EsSUFBTSxjQUFjLGdCQUFNLFdBQU4sQ0FBa0I7QUFBQTs7QUFDcEM7QUFDQTtBQUNBOztBQUVBLGFBQVc7QUFDVCxVQUFNLGlCQUFNLE1BREg7QUFFVCxVQUFNLGlCQUFNO0FBRkgsR0FMeUI7O0FBVXBDLFVBQVEsRUFWNEI7O0FBWXBDLFFBWm9DLG9CQVkxQjtBQUNSLFFBQU0sSUFBSSxJQUFWO0FBRFEsUUFFRixLQUZFLEdBRVEsQ0FGUixDQUVGLEtBRkU7O0FBR1IsV0FDRTtBQUFBO0FBQUEsUUFBSyxXQUFVLGVBQWY7QUFDRTtBQUFBO0FBQUEsVUFBTSxXQUFVLGVBQWhCO0FBQ0ksaUVBQVEsV0FBWSwwQkFBVyxvQkFBWCxFQUFpQyxNQUFNLElBQXZDLENBQXBCLEdBREo7QUFDMEUsY0FBTTtBQURoRjtBQURGLEtBREY7QUFPRCxHQXRCbUM7OztBQXdCcEM7QUFDQTtBQUNBOztBQUVBLHVCQTVCb0MsaUNBNEJiLFNBNUJhLEVBNEJGLFNBNUJFLEVBNEJTO0FBQzNDLFFBQU0sSUFBSSxJQUFWO0FBRDJDLFFBRXJDLEtBRnFDLEdBRXBCLENBRm9CLENBRXJDLEtBRnFDO0FBQUEsUUFFOUIsS0FGOEIsR0FFcEIsQ0FGb0IsQ0FFOUIsS0FGOEI7O0FBRzNDLFdBQU8sQ0FBQyx5QkFBYSxLQUFiLEVBQW9CLFNBQXBCLENBQUQsSUFBbUMseUJBQWEsS0FBYixFQUFvQixTQUFwQixDQUExQztBQUNEO0FBaENtQyxDQUFsQixDQUFwQjs7a0JBbUNlLFcsRUFBWTs7a0JBQ1oscUNBQVUsV0FBVixDIiwiZmlsZSI6ImFwX3RvYXN0X2l0ZW0uanN4Iiwic291cmNlUm9vdCI6Ii9Vc2Vycy9va3VuaXNoaW5pc2hpL1Byb2plY3RzL2FwZW1hbi1wcm9qZWN0cy9hcGVtYW4tcmVhY3QtdG9hc3QvY2kvLi4vbGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUb2FzdCBpdGVtIGNvbXBvbmVudFxuICogQGNsYXNzIEFwVG9hc3RJdGVtXG4gKi9cbid1c2Ugc3RyaWN0J1xuXG5pbXBvcnQgUmVhY3QsIHtQcm9wVHlwZXMgYXMgdHlwZXN9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHtzaGFsbG93RXF1YWx9IGZyb20gJ2Fzb2JqJ1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcydcbmltcG9ydCB7QXBJY29ufSBmcm9tICdhcGVtYW4tcmVhY3QtaWNvbidcbmltcG9ydCB7d2l0aFRvdWNofSBmcm9tICdhcGVtYW4tcmVhY3QtdG91Y2hhYmxlJ1xuXG4vKiogQGxlbmRzIEFwVG9hc3RJdGVtICovXG5jb25zdCBBcFRvYXN0SXRlbSA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gU3BlY3NcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICBwcm9wVHlwZXM6IHtcbiAgICB0ZXh0OiB0eXBlcy5zdHJpbmcsXG4gICAgaWNvbjogdHlwZXMuc3RyaW5nXG4gIH0sXG5cbiAgbWl4aW5zOiBbXSxcblxuICByZW5kZXIgKCkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMgfSA9IHNcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9J2FwLXRvYXN0LWl0ZW0nPlxuICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2FwLXRvYXN0LXRleHQnPlxuICAgICAgICAgICAgPEFwSWNvbiBjbGFzc05hbWU9eyBjbGFzc25hbWVzKCdhcC10b2FzdC1pdGVtLWljb24nLCBwcm9wcy5pY29uKSB9Lz57IHByb3BzLnRleHQgfVxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH0sXG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gTGlmZWN5Y2xlXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlIChuZXh0UHJvcHMsIG5leHRTdGF0ZSkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMsIHN0YXRlIH0gPSBzXG4gICAgcmV0dXJuICFzaGFsbG93RXF1YWwocHJvcHMsIG5leHRQcm9wcykgfHwgc2hhbGxvd0VxdWFsKHN0YXRlLCBuZXh0U3RhdGUpXG4gIH1cbn0pXG5cbmV4cG9ydCBkZWZhdWx0IEFwVG9hc3RJdGVtIC8vIER1bW15IGZvciBkb2NcbmV4cG9ydCBkZWZhdWx0IHdpdGhUb3VjaChBcFRvYXN0SXRlbSlcbiJdfQ==