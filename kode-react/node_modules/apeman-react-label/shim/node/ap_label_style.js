/**
 * Style for ApLabel.
 * @class ApLabelStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApLabelStyle */
var ApLabelStyle = _react2.default.createClass({
  displayName: 'ApLabelStyle',

  propTypes: {
    style: _react.PropTypes.object
  },
  getDefaultProps: function getDefaultProps() {
    return {
      style: {}
    };
  },

  statics: {
    styleData: function styleData(config) {
      var highlightColor = config.highlightColor;
      var backgroundColor = config.backgroundColor;


      return {
        all: {
          '.ap-label': {
            display: 'inline-block',
            padding: '4px 8px',
            fontSize: '14px',
            color: '#888'
          }
        },
        small: {},
        medium: {},
        large: {}
      };
    }
  },
  render: function render() {
    var s = this;
    var props = s.props;

    var _ApLabelStyle$styleDa = ApLabelStyle.styleData(props);

    var all = _ApLabelStyle$styleDa.all;
    var small = _ApLabelStyle$styleDa.small;
    var medium = _ApLabelStyle$styleDa.medium;
    var large = _ApLabelStyle$styleDa.large;


    return _react2.default.createElement(
      _apemanReactStyle.ApStyle,
      { data: Object.assign(all, props.style),
        smallMediaData: small,
        mediumMediaData: medium,
        largeMediaData: large
      },
      props.children
    );
  }
});

exports.default = ApLabelStyle;
//# sourceMappingURL=data:application/json;base64,bnVsbA==