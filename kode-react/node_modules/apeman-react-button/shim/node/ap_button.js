/**
 * Button component.
 * @class ApButton
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _apemanReactTouchable = require('apeman-react-touchable');

var _apemanReactSpinner = require('apeman-react-spinner');

var _asobj = require('asobj');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApButton */
var ApButton = _react2.default.createClass({
  displayName: 'ApButton',


  // --------------------
  // Specs
  // --------------------

  propTypes: {
    /** Disable button tap */
    disabled: _react.PropTypes.bool,
    /** Render with primary style */
    primary: _react.PropTypes.bool,
    /** Render with danger style */
    danger: _react.PropTypes.bool,
    /** Render with wide style */
    wide: _react.PropTypes.bool,
    /** Anchor href */
    href: _react.PropTypes.string,
    /** Document id */
    id: _react.PropTypes.string,
    /** Hide button */
    hidden: _react.PropTypes.bool,
    /** Render with simple style */
    simple: _react.PropTypes.bool,
    /** Data for touch events */
    data: _react.PropTypes.any,
    /** Show spinner */
    spinning: _react.PropTypes.bool,
    /** Theme of spinner */
    spinner: _react.PropTypes.string
  },

  mixins: [],

  getInitialState: function getInitialState() {
    return {};
  },
  getDefaultProps: function getDefaultProps() {
    return {
      disabled: false,
      primary: false,
      danger: false,
      wide: false,
      href: 'javascript:void(0)',
      id: null,
      hidden: false,
      simple: false,
      data: null,
      spinning: false,
      spinner: _apemanReactSpinner.ApSpinner.DEFAULT_THEME
    };
  },
  render: function render() {
    var s = this;
    var props = s.props;


    var className = (0, _classnames2.default)('ap-button', props.className, {
      'ap-button-primary': props.primary,
      'ap-button-danger': props.danger,
      'ap-button-wide': props.wide,
      'ap-button-disabled': props.disabled,
      'ap-button-simple': props.simple,
      'ap-button-spinning': props.spinning,
      'ap-button-hidden': props.hidden
    });
    var aProps = (0, _asobj.clone)(props, {
      without: ['text', 'hasTouch'].concat((0, _toConsumableArray3.default)((0, _keys2.default)(ApButton.propTypes)))
    });
    return _react2.default.createElement(
      'a',
      (0, _extends3.default)({}, aProps, {
        className: className,
        href: props.href,
        id: props.id,
        style: (0, _assign2.default)({}, props.style)
      }),
      props.children,
      props.spinning ? s._renderSpinner() : null
    );
  },


  // --------------------
  // Lifecycle
  // --------------------

  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    var s = this;
    var props = s.props,
        state = s.state;

    return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
  },


  // --------------------
  // Private
  // --------------------

  _renderSpinner: function _renderSpinner() {
    var s = this;
    var props = s.props;

    return _react2.default.createElement(_apemanReactSpinner.ApSpinner, { enabled: true,
      theme: props.spinner,
      className: 'ap-button-spinner'
    });
  }
});

exports.default = (0, _apemanReactTouchable.withTouch)(ApButton, {
  getTouchData: function getTouchData() {
    var s = this;
    var props = s.props;

    return props.data;
  }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2J1dHRvbi5qc3giXSwibmFtZXMiOlsiQXBCdXR0b24iLCJjcmVhdGVDbGFzcyIsInByb3BUeXBlcyIsImRpc2FibGVkIiwiYm9vbCIsInByaW1hcnkiLCJkYW5nZXIiLCJ3aWRlIiwiaHJlZiIsInN0cmluZyIsImlkIiwiaGlkZGVuIiwic2ltcGxlIiwiZGF0YSIsImFueSIsInNwaW5uaW5nIiwic3Bpbm5lciIsIm1peGlucyIsImdldEluaXRpYWxTdGF0ZSIsImdldERlZmF1bHRQcm9wcyIsIkRFRkFVTFRfVEhFTUUiLCJyZW5kZXIiLCJzIiwicHJvcHMiLCJjbGFzc05hbWUiLCJhUHJvcHMiLCJ3aXRob3V0Iiwic3R5bGUiLCJjaGlsZHJlbiIsIl9yZW5kZXJTcGlubmVyIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwibmV4dFByb3BzIiwibmV4dFN0YXRlIiwic3RhdGUiLCJnZXRUb3VjaERhdGEiXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUE7Ozs7QUFDQTs7OztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUE7QUFDQSxJQUFNQSxXQUFXLGdCQUFNQyxXQUFOLENBQWtCO0FBQUE7OztBQUVqQztBQUNBO0FBQ0E7O0FBRUFDLGFBQVc7QUFDVDtBQUNBQyxjQUFVLGlCQUFNQyxJQUZQO0FBR1Q7QUFDQUMsYUFBUyxpQkFBTUQsSUFKTjtBQUtUO0FBQ0FFLFlBQVEsaUJBQU1GLElBTkw7QUFPVDtBQUNBRyxVQUFNLGlCQUFNSCxJQVJIO0FBU1Q7QUFDQUksVUFBTSxpQkFBTUMsTUFWSDtBQVdUO0FBQ0FDLFFBQUksaUJBQU1ELE1BWkQ7QUFhVDtBQUNBRSxZQUFRLGlCQUFNUCxJQWRMO0FBZVQ7QUFDQVEsWUFBUSxpQkFBTVIsSUFoQkw7QUFpQlQ7QUFDQVMsVUFBTSxpQkFBTUMsR0FsQkg7QUFtQlQ7QUFDQUMsY0FBVSxpQkFBTVgsSUFwQlA7QUFxQlQ7QUFDQVksYUFBUyxpQkFBTVA7QUF0Qk4sR0FOc0I7O0FBK0JqQ1EsVUFBUSxFQS9CeUI7O0FBaUNqQ0MsaUJBakNpQyw2QkFpQ2Q7QUFDakIsV0FBTyxFQUFQO0FBQ0QsR0FuQ2dDO0FBcUNqQ0MsaUJBckNpQyw2QkFxQ2Q7QUFDakIsV0FBTztBQUNMaEIsZ0JBQVUsS0FETDtBQUVMRSxlQUFTLEtBRko7QUFHTEMsY0FBUSxLQUhIO0FBSUxDLFlBQU0sS0FKRDtBQUtMQyxZQUFNLG9CQUxEO0FBTUxFLFVBQUksSUFOQztBQU9MQyxjQUFRLEtBUEg7QUFRTEMsY0FBUSxLQVJIO0FBU0xDLFlBQU0sSUFURDtBQVVMRSxnQkFBVSxLQVZMO0FBV0xDLGVBQVMsOEJBQVVJO0FBWGQsS0FBUDtBQWFELEdBbkRnQztBQXFEakNDLFFBckRpQyxvQkFxRHZCO0FBQ1IsUUFBTUMsSUFBSSxJQUFWO0FBRFEsUUFFRkMsS0FGRSxHQUVRRCxDQUZSLENBRUZDLEtBRkU7OztBQUlSLFFBQUlDLFlBQVksMEJBQVcsV0FBWCxFQUF3QkQsTUFBTUMsU0FBOUIsRUFBeUM7QUFDdkQsMkJBQXFCRCxNQUFNbEIsT0FENEI7QUFFdkQsMEJBQW9Ca0IsTUFBTWpCLE1BRjZCO0FBR3ZELHdCQUFrQmlCLE1BQU1oQixJQUgrQjtBQUl2RCw0QkFBc0JnQixNQUFNcEIsUUFKMkI7QUFLdkQsMEJBQW9Cb0IsTUFBTVgsTUFMNkI7QUFNdkQsNEJBQXNCVyxNQUFNUixRQU4yQjtBQU92RCwwQkFBb0JRLE1BQU1aO0FBUDZCLEtBQXpDLENBQWhCO0FBU0EsUUFBSWMsU0FBUyxrQkFBTUYsS0FBTixFQUFhO0FBQ3hCRyxnQkFBVyxNQUFYLEVBQW1CLFVBQW5CLDBDQUFrQyxvQkFBWTFCLFNBQVNFLFNBQXJCLENBQWxDO0FBRHdCLEtBQWIsQ0FBYjtBQUdBLFdBQ0U7QUFBQTtBQUFBLGlDQUFRdUIsTUFBUjtBQUNHLG1CQUFZRCxTQURmO0FBRUcsY0FBT0QsTUFBTWYsSUFGaEI7QUFHRyxZQUFLZSxNQUFNYixFQUhkO0FBSUcsZUFBUSxzQkFBYyxFQUFkLEVBQWtCYSxNQUFNSSxLQUF4QjtBQUpYO0FBS0dKLFlBQU1LLFFBTFQ7QUFNSUwsWUFBTVIsUUFBTixHQUFpQk8sRUFBRU8sY0FBRixFQUFqQixHQUFzQztBQU4xQyxLQURGO0FBVUQsR0EvRWdDOzs7QUFpRmpDO0FBQ0E7QUFDQTs7QUFFQUMsdUJBckZpQyxpQ0FxRlZDLFNBckZVLEVBcUZDQyxTQXJGRCxFQXFGWTtBQUMzQyxRQUFNVixJQUFJLElBQVY7QUFEMkMsUUFFckNDLEtBRnFDLEdBRXBCRCxDQUZvQixDQUVyQ0MsS0FGcUM7QUFBQSxRQUU5QlUsS0FGOEIsR0FFcEJYLENBRm9CLENBRTlCVyxLQUY4Qjs7QUFHM0MsV0FBTyxDQUFDLHlCQUFhVixLQUFiLEVBQW9CUSxTQUFwQixDQUFELElBQW1DLENBQUMseUJBQWFFLEtBQWIsRUFBb0JELFNBQXBCLENBQTNDO0FBQ0QsR0F6RmdDOzs7QUEyRmpDO0FBQ0E7QUFDQTs7QUFFQUgsZ0JBL0ZpQyw0QkErRmY7QUFDaEIsUUFBTVAsSUFBSSxJQUFWO0FBRGdCLFFBRVZDLEtBRlUsR0FFQUQsQ0FGQSxDQUVWQyxLQUZVOztBQUdoQixXQUNFLCtEQUFXLGFBQVg7QUFDVyxhQUFRQSxNQUFNUCxPQUR6QjtBQUVXLGlCQUFVO0FBRnJCLE1BREY7QUFNRDtBQXhHZ0MsQ0FBbEIsQ0FBakI7O2tCQTJHZSxxQ0FBVWhCLFFBQVYsRUFBb0I7QUFDakNrQyxjQURpQywwQkFDakI7QUFDZCxRQUFNWixJQUFJLElBQVY7QUFEYyxRQUVSQyxLQUZRLEdBRUVELENBRkYsQ0FFUkMsS0FGUTs7QUFHZCxXQUFPQSxNQUFNVixJQUFiO0FBQ0Q7QUFMZ0MsQ0FBcEIsQyIsImZpbGUiOiJhcF9idXR0b24uanN4Iiwic291cmNlUm9vdCI6ImxpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQnV0dG9uIGNvbXBvbmVudC5cbiAqIEBjbGFzcyBBcEJ1dHRvblxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG5pbXBvcnQgUmVhY3QsIHtQcm9wVHlwZXMgYXMgdHlwZXN9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcydcbmltcG9ydCB7d2l0aFRvdWNofSBmcm9tICdhcGVtYW4tcmVhY3QtdG91Y2hhYmxlJ1xuaW1wb3J0IHtBcFNwaW5uZXJ9IGZyb20gJ2FwZW1hbi1yZWFjdC1zcGlubmVyJ1xuaW1wb3J0IHtzaGFsbG93RXF1YWwsIGNsb25lfSBmcm9tICdhc29iaidcblxuLyoqIEBsZW5kcyBBcEJ1dHRvbiAqL1xuY29uc3QgQXBCdXR0b24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gU3BlY3NcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICBwcm9wVHlwZXM6IHtcbiAgICAvKiogRGlzYWJsZSBidXR0b24gdGFwICovXG4gICAgZGlzYWJsZWQ6IHR5cGVzLmJvb2wsXG4gICAgLyoqIFJlbmRlciB3aXRoIHByaW1hcnkgc3R5bGUgKi9cbiAgICBwcmltYXJ5OiB0eXBlcy5ib29sLFxuICAgIC8qKiBSZW5kZXIgd2l0aCBkYW5nZXIgc3R5bGUgKi9cbiAgICBkYW5nZXI6IHR5cGVzLmJvb2wsXG4gICAgLyoqIFJlbmRlciB3aXRoIHdpZGUgc3R5bGUgKi9cbiAgICB3aWRlOiB0eXBlcy5ib29sLFxuICAgIC8qKiBBbmNob3IgaHJlZiAqL1xuICAgIGhyZWY6IHR5cGVzLnN0cmluZyxcbiAgICAvKiogRG9jdW1lbnQgaWQgKi9cbiAgICBpZDogdHlwZXMuc3RyaW5nLFxuICAgIC8qKiBIaWRlIGJ1dHRvbiAqL1xuICAgIGhpZGRlbjogdHlwZXMuYm9vbCxcbiAgICAvKiogUmVuZGVyIHdpdGggc2ltcGxlIHN0eWxlICovXG4gICAgc2ltcGxlOiB0eXBlcy5ib29sLFxuICAgIC8qKiBEYXRhIGZvciB0b3VjaCBldmVudHMgKi9cbiAgICBkYXRhOiB0eXBlcy5hbnksXG4gICAgLyoqIFNob3cgc3Bpbm5lciAqL1xuICAgIHNwaW5uaW5nOiB0eXBlcy5ib29sLFxuICAgIC8qKiBUaGVtZSBvZiBzcGlubmVyICovXG4gICAgc3Bpbm5lcjogdHlwZXMuc3RyaW5nXG4gIH0sXG5cbiAgbWl4aW5zOiBbXSxcblxuICBnZXRJbml0aWFsU3RhdGUgKCkge1xuICAgIHJldHVybiB7fVxuICB9LFxuXG4gIGdldERlZmF1bHRQcm9wcyAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICAgIHByaW1hcnk6IGZhbHNlLFxuICAgICAgZGFuZ2VyOiBmYWxzZSxcbiAgICAgIHdpZGU6IGZhbHNlLFxuICAgICAgaHJlZjogJ2phdmFzY3JpcHQ6dm9pZCgwKScsXG4gICAgICBpZDogbnVsbCxcbiAgICAgIGhpZGRlbjogZmFsc2UsXG4gICAgICBzaW1wbGU6IGZhbHNlLFxuICAgICAgZGF0YTogbnVsbCxcbiAgICAgIHNwaW5uaW5nOiBmYWxzZSxcbiAgICAgIHNwaW5uZXI6IEFwU3Bpbm5lci5ERUZBVUxUX1RIRU1FXG4gICAgfVxuICB9LFxuXG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcyB9ID0gc1xuXG4gICAgbGV0IGNsYXNzTmFtZSA9IGNsYXNzbmFtZXMoJ2FwLWJ1dHRvbicsIHByb3BzLmNsYXNzTmFtZSwge1xuICAgICAgJ2FwLWJ1dHRvbi1wcmltYXJ5JzogcHJvcHMucHJpbWFyeSxcbiAgICAgICdhcC1idXR0b24tZGFuZ2VyJzogcHJvcHMuZGFuZ2VyLFxuICAgICAgJ2FwLWJ1dHRvbi13aWRlJzogcHJvcHMud2lkZSxcbiAgICAgICdhcC1idXR0b24tZGlzYWJsZWQnOiBwcm9wcy5kaXNhYmxlZCxcbiAgICAgICdhcC1idXR0b24tc2ltcGxlJzogcHJvcHMuc2ltcGxlLFxuICAgICAgJ2FwLWJ1dHRvbi1zcGlubmluZyc6IHByb3BzLnNwaW5uaW5nLFxuICAgICAgJ2FwLWJ1dHRvbi1oaWRkZW4nOiBwcm9wcy5oaWRkZW5cbiAgICB9KVxuICAgIGxldCBhUHJvcHMgPSBjbG9uZShwcm9wcywge1xuICAgICAgd2l0aG91dDogWyAndGV4dCcsICdoYXNUb3VjaCcsIC4uLk9iamVjdC5rZXlzKEFwQnV0dG9uLnByb3BUeXBlcykgXVxuICAgIH0pXG4gICAgcmV0dXJuIChcbiAgICAgIDxhIHsgLi4uYVByb3BzIH1cbiAgICAgICAgIGNsYXNzTmFtZT17IGNsYXNzTmFtZSB9XG4gICAgICAgICBocmVmPXsgcHJvcHMuaHJlZiB9XG4gICAgICAgICBpZD17IHByb3BzLmlkIH1cbiAgICAgICAgIHN0eWxlPXsgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMuc3R5bGUpIH1cbiAgICAgID57IHByb3BzLmNoaWxkcmVuIH1cbiAgICAgICAgeyBwcm9wcy5zcGlubmluZyA/IHMuX3JlbmRlclNwaW5uZXIoKSA6IG51bGx9XG4gICAgICA8L2E+XG4gICAgKVxuICB9LFxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIExpZmVjeWNsZVxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIHNob3VsZENvbXBvbmVudFVwZGF0ZSAobmV4dFByb3BzLCBuZXh0U3RhdGUpIHtcbiAgICBjb25zdCBzID0gdGhpc1xuICAgIGxldCB7IHByb3BzLCBzdGF0ZSB9ID0gc1xuICAgIHJldHVybiAhc2hhbGxvd0VxdWFsKHByb3BzLCBuZXh0UHJvcHMpIHx8ICFzaGFsbG93RXF1YWwoc3RhdGUsIG5leHRTdGF0ZSlcbiAgfSxcblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBQcml2YXRlXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgX3JlbmRlclNwaW5uZXIgKCkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMgfSA9IHNcbiAgICByZXR1cm4gKFxuICAgICAgPEFwU3Bpbm5lciBlbmFibGVkXG4gICAgICAgICAgICAgICAgIHRoZW1lPXsgcHJvcHMuc3Bpbm5lciB9XG4gICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nYXAtYnV0dG9uLXNwaW5uZXInXG4gICAgICAvPlxuICAgIClcbiAgfVxufSlcblxuZXhwb3J0IGRlZmF1bHQgd2l0aFRvdWNoKEFwQnV0dG9uLCB7XG4gIGdldFRvdWNoRGF0YSAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcyB9ID0gc1xuICAgIHJldHVybiBwcm9wcy5kYXRhXG4gIH1cbn0pXG4iXX0=