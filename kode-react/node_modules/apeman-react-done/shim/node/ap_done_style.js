/**
 * Style for ApDone.
 * @class ApDoneStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/** @lends ApDoneStyle */
var ApDoneStyle = function (_Component) {
  _inherits(ApDoneStyle, _Component);

  function ApDoneStyle() {
    _classCallCheck(this, ApDoneStyle);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApDoneStyle).apply(this, arguments));
  }

  _createClass(ApDoneStyle, [{
    key: 'render',
    value: function render() {
      var s = this;
      var props = s.props;

      var _ApDoneStyle$styleDat = ApDoneStyle.styleData(props);

      var all = _ApDoneStyle$styleDat.all;
      var small = _ApDoneStyle$styleDat.small;
      var medium = _ApDoneStyle$styleDat.medium;
      var large = _ApDoneStyle$styleDat.large;


      return _react2.default.createElement(
        _apemanReactStyle.ApStyle,
        { data: Object.assign(all, props.style),
          smallMediaData: small,
          mediumMediaData: medium,
          largeMediaData: large
        },
        props.children
      );
    }
  }]);

  return ApDoneStyle;
}(_react.Component);

Object.assign(ApDoneStyle, {
  propTypes: {
    style: _react.PropTypes.object,
    highlightColor: _react.PropTypes.string
  },

  defaultProps: {
    style: {},
    highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
    backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
  },
  styleData: function styleData(config) {
    var highlightColor = config.highlightColor;
    var backgroundColor = config.backgroundColor;

    return {
      all: {
        '.ap-done': {
          textAlign: 'center'
        },
        '.ap-done-button-container': {
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center'
        },
        '.ap-done-button': {
          fontSize: '11px',
          padding: '4px 16px'
        },
        '.ap-done-link': {
          display: 'inline-block',
          padding: '8px 16px',
          color: '' + highlightColor,
          textDecoration: 'underline',
          fontSize: '14px'
        },
        '.ap-done-link:hover': {},
        '.ap-done-link:active': {
          opacity: '0.8'
        }
      }

    };
  }
});

exports.default = ApDoneStyle;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2RvbmVfc3R5bGUuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUtBOzs7Ozs7OztBQUVBOzs7O0FBQ0E7Ozs7Ozs7Ozs7QUFFQTtJQUNNLFc7Ozs7Ozs7Ozs7OzZCQUNNO0FBQ1IsVUFBTSxJQUFJLElBQVY7QUFEUSxVQUVGLEtBRkUsR0FFUSxDQUZSLENBRUYsS0FGRTs7QUFBQSxrQ0FJNEIsWUFBWSxTQUFaLENBQXNCLEtBQXRCLENBSjVCOztBQUFBLFVBSUYsR0FKRSx5QkFJRixHQUpFO0FBQUEsVUFJRyxLQUpILHlCQUlHLEtBSkg7QUFBQSxVQUlVLE1BSlYseUJBSVUsTUFKVjtBQUFBLFVBSWtCLEtBSmxCLHlCQUlrQixLQUpsQjs7O0FBTVIsYUFDRTtBQUFBO0FBQUEsVUFBUyxNQUFPLE9BQU8sTUFBUCxDQUFjLEdBQWQsRUFBbUIsTUFBTSxLQUF6QixDQUFoQjtBQUNTLDBCQUFpQixLQUQxQjtBQUVTLDJCQUFrQixNQUYzQjtBQUdTLDBCQUFpQjtBQUgxQjtBQUlHLGNBQU07QUFKVCxPQURGO0FBT0Q7Ozs7OztBQUdILE9BQU8sTUFBUCxDQUFjLFdBQWQsRUFBMkI7QUFDekIsYUFBVztBQUNULFdBQU8saUJBQU0sTUFESjtBQUVULG9CQUFnQixpQkFBTTtBQUZiLEdBRGM7O0FBTXpCLGdCQUFjO0FBQ1osV0FBTyxFQURLO0FBRVosb0JBQWdCLDBCQUFRLHVCQUZaO0FBR1oscUJBQWlCLDBCQUFRO0FBSGIsR0FOVztBQVd6QixXQVh5QixxQkFXZCxNQVhjLEVBV047QUFBQSxRQUNYLGNBRFcsR0FDeUIsTUFEekIsQ0FDWCxjQURXO0FBQUEsUUFDSyxlQURMLEdBQ3lCLE1BRHpCLENBQ0ssZUFETDs7QUFFakIsV0FBTztBQUNMLFdBQUs7QUFDSCxvQkFBWTtBQUNWLHFCQUFXO0FBREQsU0FEVDtBQUlILHFDQUE2QjtBQUMzQixtQkFBUyxNQURrQjtBQUUzQiwwQkFBZ0IsUUFGVztBQUczQixzQkFBWTtBQUhlLFNBSjFCO0FBU0gsMkJBQW1CO0FBQ2pCLG9CQUFVLE1BRE87QUFFakIsbUJBQVM7QUFGUSxTQVRoQjtBQWFILHlCQUFpQjtBQUNmLG1CQUFTLGNBRE07QUFFZixtQkFBUyxVQUZNO0FBR2Ysc0JBQVUsY0FISztBQUlmLDBCQUFnQixXQUpEO0FBS2Ysb0JBQVU7QUFMSyxTQWJkO0FBb0JILCtCQUF1QixFQXBCcEI7QUFxQkgsZ0NBQXdCO0FBQ3RCLG1CQUFTO0FBRGE7QUFyQnJCOztBQURBLEtBQVA7QUE0QkQ7QUF6Q3dCLENBQTNCOztrQkE0Q2UsVyIsImZpbGUiOiJhcF9kb25lX3N0eWxlLmpzeCIsInNvdXJjZVJvb3QiOiJsaWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFN0eWxlIGZvciBBcERvbmUuXG4gKiBAY2xhc3MgQXBEb25lU3R5bGVcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50LCBQcm9wVHlwZXMgYXMgdHlwZXN9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHtBcFN0eWxlfSBmcm9tICdhcGVtYW4tcmVhY3Qtc3R5bGUnXG5cbi8qKiBAbGVuZHMgQXBEb25lU3R5bGUgKi9cbmNsYXNzIEFwRG9uZVN0eWxlIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyICgpIHtcbiAgICBjb25zdCBzID0gdGhpc1xuICAgIGxldCB7IHByb3BzIH0gPSBzXG5cbiAgICBsZXQgeyBhbGwsIHNtYWxsLCBtZWRpdW0sIGxhcmdlIH0gPSBBcERvbmVTdHlsZS5zdHlsZURhdGEocHJvcHMpXG5cbiAgICByZXR1cm4gKFxuICAgICAgPEFwU3R5bGUgZGF0YT17IE9iamVjdC5hc3NpZ24oYWxsLCBwcm9wcy5zdHlsZSkgfVxuICAgICAgICAgICAgICAgc21hbGxNZWRpYURhdGE9eyBzbWFsbCB9XG4gICAgICAgICAgICAgICBtZWRpdW1NZWRpYURhdGE9eyBtZWRpdW0gfVxuICAgICAgICAgICAgICAgbGFyZ2VNZWRpYURhdGE9eyBsYXJnZSB9XG4gICAgICA+eyBwcm9wcy5jaGlsZHJlbiB9PC9BcFN0eWxlPlxuICAgIClcbiAgfVxufVxuXG5PYmplY3QuYXNzaWduKEFwRG9uZVN0eWxlLCB7XG4gIHByb3BUeXBlczoge1xuICAgIHN0eWxlOiB0eXBlcy5vYmplY3QsXG4gICAgaGlnaGxpZ2h0Q29sb3I6IHR5cGVzLnN0cmluZ1xuICB9LFxuXG4gIGRlZmF1bHRQcm9wczoge1xuICAgIHN0eWxlOiB7fSxcbiAgICBoaWdobGlnaHRDb2xvcjogQXBTdHlsZS5ERUZBVUxUX0hJR0hMSUdIVF9DT0xPUixcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IEFwU3R5bGUuREVGQVVMVF9CQUNLR1JPVU5EX0NPTE9SXG4gIH0sXG4gIHN0eWxlRGF0YSAoY29uZmlnKSB7XG4gICAgbGV0IHsgaGlnaGxpZ2h0Q29sb3IsIGJhY2tncm91bmRDb2xvciB9ID0gY29uZmlnXG4gICAgcmV0dXJuIHtcbiAgICAgIGFsbDoge1xuICAgICAgICAnLmFwLWRvbmUnOiB7XG4gICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJ1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLWRvbmUtYnV0dG9uLWNvbnRhaW5lcic6IHtcbiAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInXG4gICAgICAgIH0sXG4gICAgICAgICcuYXAtZG9uZS1idXR0b24nOiB7XG4gICAgICAgICAgZm9udFNpemU6ICcxMXB4JyxcbiAgICAgICAgICBwYWRkaW5nOiAnNHB4IDE2cHgnXG4gICAgICAgIH0sXG4gICAgICAgICcuYXAtZG9uZS1saW5rJzoge1xuICAgICAgICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgICAgICAgIHBhZGRpbmc6ICc4cHggMTZweCcsXG4gICAgICAgICAgY29sb3I6IGAke2hpZ2hsaWdodENvbG9yfWAsXG4gICAgICAgICAgdGV4dERlY29yYXRpb246ICd1bmRlcmxpbmUnLFxuICAgICAgICAgIGZvbnRTaXplOiAnMTRweCdcbiAgICAgICAgfSxcbiAgICAgICAgJy5hcC1kb25lLWxpbms6aG92ZXInOiB7fSxcbiAgICAgICAgJy5hcC1kb25lLWxpbms6YWN0aXZlJzoge1xuICAgICAgICAgIG9wYWNpdHk6ICcwLjgnXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgIH1cbiAgfVxufSlcblxuZXhwb3J0IGRlZmF1bHQgQXBEb25lU3R5bGVcbiJdfQ==