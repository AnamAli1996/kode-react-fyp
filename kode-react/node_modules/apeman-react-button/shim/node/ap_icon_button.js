/**
 * Icon button component.
 * @class ApIconButton
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _apemanReactIcon = require('apeman-react-icon');

var _ap_button = require('./ap_button');

var _ap_button2 = _interopRequireDefault(_ap_button);

var _asobj = require('asobj');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApIconButton */
var ApIconButton = _react2.default.createClass({
  displayName: 'ApIconButton',


  // --------------------
  // Specs
  // --------------------

  propTypes: {
    icon: _react.PropTypes.string,
    text: _react.PropTypes.string,
    simple: _react.PropTypes.bool
  },

  statics: {
    /**
     * Create a icon button.
     * @param {string} text - Text
     * @param {string} icon - Icon class
     * @param {function} onTap - Tap callback
     * @param {Object} props - Other props.
     * @returns {Object} - React element.
     */
    createButton: function createButton(text, icon, onTap, props) {
      return _react2.default.createElement(ApIconButton, (0, _extends3.default)({ text: text,
        icon: icon,
        onTap: onTap
      }, props));
    }
  },

  mixins: [],

  getInitialState: function getInitialState() {
    return {};
  },
  getDefaultProps: function getDefaultProps() {
    return {
      icon: null,
      text: null
    };
  },
  render: function render() {
    var s = this;
    var props = s.props;

    var className = (0, _classnames2.default)('ap-icon-button', {
      'ap-icon-button-simple': !!props.simple
    }, props.className);
    var buttonProps = (0, _asobj.clone)(props, {
      without: ['icon', 'text']
    });
    return _react2.default.createElement(
      _ap_button2.default,
      (0, _extends3.default)({}, buttonProps, {
        className: className,
        wide: false
      }),
      _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-icon-button-icon', props.icon, {}) }),
      props.text ? _react2.default.createElement(
        'span',
        { className: 'ap-icon-button-text' },
        props.text
      ) : null
    );
  },


  // --------------------
  // Lifecycle
  // --------------------

  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    var s = this;
    var props = s.props,
        state = s.state;

    return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
  }
});

exports.default = ApIconButton;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2ljb25fYnV0dG9uLmpzeCJdLCJuYW1lcyI6WyJBcEljb25CdXR0b24iLCJjcmVhdGVDbGFzcyIsInByb3BUeXBlcyIsImljb24iLCJzdHJpbmciLCJ0ZXh0Iiwic2ltcGxlIiwiYm9vbCIsInN0YXRpY3MiLCJjcmVhdGVCdXR0b24iLCJvblRhcCIsInByb3BzIiwibWl4aW5zIiwiZ2V0SW5pdGlhbFN0YXRlIiwiZ2V0RGVmYXVsdFByb3BzIiwicmVuZGVyIiwicyIsImNsYXNzTmFtZSIsImJ1dHRvblByb3BzIiwid2l0aG91dCIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIm5leHRQcm9wcyIsIm5leHRTdGF0ZSIsInN0YXRlIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFLQTs7Ozs7Ozs7OztBQUVBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7OztBQUNBOzs7O0FBRUE7QUFDQSxJQUFNQSxlQUFlLGdCQUFNQyxXQUFOLENBQWtCO0FBQUE7OztBQUVyQztBQUNBO0FBQ0E7O0FBRUFDLGFBQVc7QUFDVEMsVUFBTSxpQkFBTUMsTUFESDtBQUVUQyxVQUFNLGlCQUFNRCxNQUZIO0FBR1RFLFlBQVEsaUJBQU1DO0FBSEwsR0FOMEI7O0FBWXJDQyxXQUFTO0FBQ1A7Ozs7Ozs7O0FBUUFDLGdCQVRPLHdCQVNPSixJQVRQLEVBU2FGLElBVGIsRUFTbUJPLEtBVG5CLEVBUzBCQyxLQVQxQixFQVNpQztBQUN0QyxhQUNFLDhCQUFDLFlBQUQsMkJBQWMsTUFBT04sSUFBckI7QUFDYyxjQUFPRixJQURyQjtBQUVjLGVBQVFPO0FBRnRCLFNBR21CQyxLQUhuQixFQURGO0FBT0Q7QUFqQk0sR0FaNEI7O0FBZ0NyQ0MsVUFBUSxFQWhDNkI7O0FBa0NyQ0MsaUJBbENxQyw2QkFrQ2xCO0FBQ2pCLFdBQU8sRUFBUDtBQUNELEdBcENvQztBQXNDckNDLGlCQXRDcUMsNkJBc0NsQjtBQUNqQixXQUFPO0FBQ0xYLFlBQU0sSUFERDtBQUVMRSxZQUFNO0FBRkQsS0FBUDtBQUlELEdBM0NvQztBQTZDckNVLFFBN0NxQyxvQkE2QzNCO0FBQ1IsUUFBTUMsSUFBSSxJQUFWO0FBRFEsUUFFRkwsS0FGRSxHQUVRSyxDQUZSLENBRUZMLEtBRkU7O0FBR1IsUUFBSU0sWUFBWSwwQkFBVyxnQkFBWCxFQUE2QjtBQUMzQywrQkFBeUIsQ0FBQyxDQUFDTixNQUFNTDtBQURVLEtBQTdCLEVBRWJLLE1BQU1NLFNBRk8sQ0FBaEI7QUFHQSxRQUFJQyxjQUFjLGtCQUFNUCxLQUFOLEVBQWE7QUFDN0JRLGVBQVMsQ0FBRSxNQUFGLEVBQVUsTUFBVjtBQURvQixLQUFiLENBQWxCO0FBR0EsV0FDRTtBQUFBO0FBQUEsaUNBQWVELFdBQWY7QUFDVSxtQkFBWUQsU0FEdEI7QUFFVSxjQUFPO0FBRmpCO0FBSUUsK0RBQVEsV0FBWSwwQkFBVyxxQkFBWCxFQUFrQ04sTUFBTVIsSUFBeEMsRUFBOEMsRUFBOUMsQ0FBcEIsR0FKRjtBQUtJUSxZQUFNTixJQUFOLEdBQWE7QUFBQTtBQUFBLFVBQU0sV0FBVSxxQkFBaEI7QUFBd0NNLGNBQU1OO0FBQTlDLE9BQWIsR0FBMkU7QUFML0UsS0FERjtBQVNELEdBL0RvQzs7O0FBaUVyQztBQUNBO0FBQ0E7O0FBRUFlLHVCQXJFcUMsaUNBcUVkQyxTQXJFYyxFQXFFSEMsU0FyRUcsRUFxRVE7QUFDM0MsUUFBTU4sSUFBSSxJQUFWO0FBRDJDLFFBRXJDTCxLQUZxQyxHQUVwQkssQ0FGb0IsQ0FFckNMLEtBRnFDO0FBQUEsUUFFOUJZLEtBRjhCLEdBRXBCUCxDQUZvQixDQUU5Qk8sS0FGOEI7O0FBRzNDLFdBQU8sQ0FBQyx5QkFBYVosS0FBYixFQUFvQlUsU0FBcEIsQ0FBRCxJQUFtQyxDQUFDLHlCQUFhRSxLQUFiLEVBQW9CRCxTQUFwQixDQUEzQztBQUNEO0FBekVvQyxDQUFsQixDQUFyQjs7a0JBNkVldEIsWSIsImZpbGUiOiJhcF9pY29uX2J1dHRvbi5qc3giLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJY29uIGJ1dHRvbiBjb21wb25lbnQuXG4gKiBAY2xhc3MgQXBJY29uQnV0dG9uXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBSZWFjdCwge1Byb3BUeXBlcyBhcyB0eXBlc30gZnJvbSAncmVhY3QnXG5pbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IHtBcEljb259IGZyb20gJ2FwZW1hbi1yZWFjdC1pY29uJ1xuaW1wb3J0IEFwQnV0dG9uIGZyb20gJy4vYXBfYnV0dG9uJ1xuaW1wb3J0IHtzaGFsbG93RXF1YWwsIGNsb25lfSBmcm9tICdhc29iaidcblxuLyoqIEBsZW5kcyBBcEljb25CdXR0b24gKi9cbmNvbnN0IEFwSWNvbkJ1dHRvbiA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBTcGVjc1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIHByb3BUeXBlczoge1xuICAgIGljb246IHR5cGVzLnN0cmluZyxcbiAgICB0ZXh0OiB0eXBlcy5zdHJpbmcsXG4gICAgc2ltcGxlOiB0eXBlcy5ib29sXG4gIH0sXG5cbiAgc3RhdGljczoge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIGljb24gYnV0dG9uLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IC0gVGV4dFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBpY29uIC0gSWNvbiBjbGFzc1xuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IG9uVGFwIC0gVGFwIGNhbGxiYWNrXG4gICAgICogQHBhcmFtIHtPYmplY3R9IHByb3BzIC0gT3RoZXIgcHJvcHMuXG4gICAgICogQHJldHVybnMge09iamVjdH0gLSBSZWFjdCBlbGVtZW50LlxuICAgICAqL1xuICAgIGNyZWF0ZUJ1dHRvbiAodGV4dCwgaWNvbiwgb25UYXAsIHByb3BzKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8QXBJY29uQnV0dG9uIHRleHQ9eyB0ZXh0IH1cbiAgICAgICAgICAgICAgICAgICAgICBpY29uPXsgaWNvbiB9XG4gICAgICAgICAgICAgICAgICAgICAgb25UYXA9eyBvblRhcCB9XG4gICAgICAgICAgICAgICAgICAgICAgeyAuLi5wcm9wcyB9XG4gICAgICAgIC8+XG4gICAgICApXG4gICAgfVxuICB9LFxuXG4gIG1peGluczogW10sXG5cbiAgZ2V0SW5pdGlhbFN0YXRlICgpIHtcbiAgICByZXR1cm4ge31cbiAgfSxcblxuICBnZXREZWZhdWx0UHJvcHMgKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpY29uOiBudWxsLFxuICAgICAgdGV4dDogbnVsbFxuICAgIH1cbiAgfSxcblxuICByZW5kZXIgKCkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMgfSA9IHNcbiAgICBsZXQgY2xhc3NOYW1lID0gY2xhc3NuYW1lcygnYXAtaWNvbi1idXR0b24nLCB7XG4gICAgICAnYXAtaWNvbi1idXR0b24tc2ltcGxlJzogISFwcm9wcy5zaW1wbGVcbiAgICB9LCBwcm9wcy5jbGFzc05hbWUpXG4gICAgbGV0IGJ1dHRvblByb3BzID0gY2xvbmUocHJvcHMsIHtcbiAgICAgIHdpdGhvdXQ6IFsgJ2ljb24nLCAndGV4dCcgXVxuICAgIH0pXG4gICAgcmV0dXJuIChcbiAgICAgIDxBcEJ1dHRvbiB7IC4uLmJ1dHRvblByb3BzIH1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9eyBjbGFzc05hbWUgfVxuICAgICAgICAgICAgICAgIHdpZGU9eyBmYWxzZSB9XG4gICAgICA+XG4gICAgICAgIDxBcEljb24gY2xhc3NOYW1lPXsgY2xhc3NuYW1lcygnYXAtaWNvbi1idXR0b24taWNvbicsIHByb3BzLmljb24sIHt9KSB9Lz5cbiAgICAgICAgeyBwcm9wcy50ZXh0ID8gPHNwYW4gY2xhc3NOYW1lPSdhcC1pY29uLWJ1dHRvbi10ZXh0Jz57IHByb3BzLnRleHQgfTwvc3Bhbj4gOiBudWxsfVxuICAgICAgPC9BcEJ1dHRvbj5cbiAgICApXG4gIH0sXG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gTGlmZWN5Y2xlXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlIChuZXh0UHJvcHMsIG5leHRTdGF0ZSkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMsIHN0YXRlIH0gPSBzXG4gICAgcmV0dXJuICFzaGFsbG93RXF1YWwocHJvcHMsIG5leHRQcm9wcykgfHwgIXNoYWxsb3dFcXVhbChzdGF0ZSwgbmV4dFN0YXRlKVxuICB9XG5cbn0pXG5cbmV4cG9ydCBkZWZhdWx0IEFwSWNvbkJ1dHRvblxuIl19