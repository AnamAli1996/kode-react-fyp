/**
 * Style for ApCaptcha.
 * @class ApCaptchaStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApCaptchaStyle */
var ApCaptchaStyle = function (_Component) {
  (0, _inherits3.default)(ApCaptchaStyle, _Component);

  function ApCaptchaStyle() {
    (0, _classCallCheck3.default)(this, ApCaptchaStyle);
    return (0, _possibleConstructorReturn3.default)(this, (ApCaptchaStyle.__proto__ || (0, _getPrototypeOf2.default)(ApCaptchaStyle)).apply(this, arguments));
  }

  (0, _createClass3.default)(ApCaptchaStyle, [{
    key: 'render',
    value: function render() {
      var s = this;
      var props = s.props;

      var _ApCaptchaStyle$style = ApCaptchaStyle.styleData(props);

      var all = _ApCaptchaStyle$style.all;
      var small = _ApCaptchaStyle$style.small;
      var medium = _ApCaptchaStyle$style.medium;
      var large = _ApCaptchaStyle$style.large;


      return _react2.default.createElement(
        _apemanReactStyle.ApStyle,
        { data: (0, _assign2.default)(all, props.style),
          smallMediaData: small,
          mediumMediaData: medium,
          largeMediaData: large
        },
        props.children
      );
    }
  }]);
  return ApCaptchaStyle;
}(_react.Component);

(0, _assign2.default)(ApCaptchaStyle, {
  propTypes: {
    style: _react.PropTypes.object
  },
  defaultProps: {
    style: {}
  },
  styleData: function styleData(config) {
    return {
      all: {
        '.ap-captcha': {
          display: 'block',
          position: 'relative',
          background: '#FAFAFA',
          padding: '8px',
          boxSizing: 'border-box',
          textAlign: 'center'
        },
        '.ap-captcha-image': {
          background: 'white',
          border: '1px solid #E0E0E0'
        },
        '.ap-captcha-image .ap-image-spinner': {
          background: 'transparent'
        },
        '.ap-captcha-refresh-button': {
          display: 'block',
          textAlign: 'right',
          cursor: 'pointer',
          padding: '4px 8px',
          position: 'absolute',
          fontSize: '12px',
          right: 0,
          bottom: 0,
          background: 'rgba(255,255,255,0.9)'
        },
        '.ap-captcha-refresh-button:active': {
          opacity: 0.8
        },
        '.ap-captcha-spinner': {
          position: 'absolute',
          left: 0,
          top: 0,
          right: 0,
          bottom: 0,
          zIndex: 4,
          background: 'rgba(255,255,255,0.9)',
          color: '#CCC'
        }
      }
    };
  }
});

exports.default = ApCaptchaStyle;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2NhcHRjaGFfc3R5bGUuanN4Il0sIm5hbWVzIjpbIkFwQ2FwdGNoYVN0eWxlIiwicyIsInByb3BzIiwic3R5bGVEYXRhIiwiYWxsIiwic21hbGwiLCJtZWRpdW0iLCJsYXJnZSIsInN0eWxlIiwiY2hpbGRyZW4iLCJwcm9wVHlwZXMiLCJvYmplY3QiLCJkZWZhdWx0UHJvcHMiLCJjb25maWciLCJkaXNwbGF5IiwicG9zaXRpb24iLCJiYWNrZ3JvdW5kIiwicGFkZGluZyIsImJveFNpemluZyIsInRleHRBbGlnbiIsImJvcmRlciIsImN1cnNvciIsImZvbnRTaXplIiwicmlnaHQiLCJib3R0b20iLCJvcGFjaXR5IiwibGVmdCIsInRvcCIsInpJbmRleCIsImNvbG9yIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUE7Ozs7QUFDQTs7OztBQUVBO0lBQ01BLGM7Ozs7Ozs7Ozs7NkJBQ007QUFDUixVQUFNQyxJQUFJLElBQVY7QUFEUSxVQUVGQyxLQUZFLEdBRVFELENBRlIsQ0FFRkMsS0FGRTs7QUFBQSxrQ0FJNEJGLGVBQWVHLFNBQWYsQ0FBeUJELEtBQXpCLENBSjVCOztBQUFBLFVBSUZFLEdBSkUseUJBSUZBLEdBSkU7QUFBQSxVQUlHQyxLQUpILHlCQUlHQSxLQUpIO0FBQUEsVUFJVUMsTUFKVix5QkFJVUEsTUFKVjtBQUFBLFVBSWtCQyxLQUpsQix5QkFJa0JBLEtBSmxCOzs7QUFNUixhQUNFO0FBQUE7QUFBQSxVQUFTLE1BQU8sc0JBQWNILEdBQWQsRUFBbUJGLE1BQU1NLEtBQXpCLENBQWhCO0FBQ1MsMEJBQWlCSCxLQUQxQjtBQUVTLDJCQUFrQkMsTUFGM0I7QUFHUywwQkFBaUJDO0FBSDFCO0FBSUdMLGNBQU1PO0FBSlQsT0FERjtBQU9EOzs7OztBQUdILHNCQUFjVCxjQUFkLEVBQThCO0FBQzVCVSxhQUFXO0FBQ1RGLFdBQU8saUJBQU1HO0FBREosR0FEaUI7QUFJNUJDLGdCQUFjO0FBQ1pKLFdBQU87QUFESyxHQUpjO0FBTzVCTCxXQVA0QixxQkFPakJVLE1BUGlCLEVBT1Q7QUFDakIsV0FBTztBQUNMVCxXQUFLO0FBQ0gsdUJBQWU7QUFDYlUsbUJBQVMsT0FESTtBQUViQyxvQkFBVSxVQUZHO0FBR2JDLHNCQUFZLFNBSEM7QUFJYkMsbUJBQVMsS0FKSTtBQUtiQyxxQkFBVyxZQUxFO0FBTWJDLHFCQUFXO0FBTkUsU0FEWjtBQVNILDZCQUFxQjtBQUNuQkgsc0JBQVksT0FETztBQUVuQkksa0JBQVE7QUFGVyxTQVRsQjtBQWFILCtDQUF1QztBQUNyQ0osc0JBQVk7QUFEeUIsU0FicEM7QUFnQkgsc0NBQThCO0FBQzVCRixtQkFBUyxPQURtQjtBQUU1QksscUJBQVcsT0FGaUI7QUFHNUJFLGtCQUFRLFNBSG9CO0FBSTVCSixtQkFBUyxTQUptQjtBQUs1QkYsb0JBQVUsVUFMa0I7QUFNNUJPLG9CQUFVLE1BTmtCO0FBTzVCQyxpQkFBTyxDQVBxQjtBQVE1QkMsa0JBQVEsQ0FSb0I7QUFTNUJSLHNCQUFZO0FBVGdCLFNBaEIzQjtBQTJCSCw2Q0FBcUM7QUFDbkNTLG1CQUFTO0FBRDBCLFNBM0JsQztBQThCSCwrQkFBdUI7QUFDckJWLG9CQUFVLFVBRFc7QUFFckJXLGdCQUFNLENBRmU7QUFHckJDLGVBQUssQ0FIZ0I7QUFJckJKLGlCQUFPLENBSmM7QUFLckJDLGtCQUFRLENBTGE7QUFNckJJLGtCQUFRLENBTmE7QUFPckJaLHNCQUFZLHVCQVBTO0FBUXJCYSxpQkFBTztBQVJjO0FBOUJwQjtBQURBLEtBQVA7QUEyQ0Q7QUFuRDJCLENBQTlCOztrQkFzRGU3QixjIiwiZmlsZSI6ImFwX2NhcHRjaGFfc3R5bGUuanN4Iiwic291cmNlUm9vdCI6ImxpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU3R5bGUgZm9yIEFwQ2FwdGNoYS5cbiAqIEBjbGFzcyBBcENhcHRjaGFTdHlsZVxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50LCBQcm9wVHlwZXMgYXMgdHlwZXMgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IEFwU3R5bGUgfSBmcm9tICdhcGVtYW4tcmVhY3Qtc3R5bGUnXG5cbi8qKiBAbGVuZHMgQXBDYXB0Y2hhU3R5bGUgKi9cbmNsYXNzIEFwQ2FwdGNoYVN0eWxlIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyICgpIHtcbiAgICBjb25zdCBzID0gdGhpc1xuICAgIGxldCB7IHByb3BzIH0gPSBzXG5cbiAgICBsZXQgeyBhbGwsIHNtYWxsLCBtZWRpdW0sIGxhcmdlIH0gPSBBcENhcHRjaGFTdHlsZS5zdHlsZURhdGEocHJvcHMpXG5cbiAgICByZXR1cm4gKFxuICAgICAgPEFwU3R5bGUgZGF0YT17IE9iamVjdC5hc3NpZ24oYWxsLCBwcm9wcy5zdHlsZSkgfVxuICAgICAgICAgICAgICAgc21hbGxNZWRpYURhdGE9eyBzbWFsbCB9XG4gICAgICAgICAgICAgICBtZWRpdW1NZWRpYURhdGE9eyBtZWRpdW0gfVxuICAgICAgICAgICAgICAgbGFyZ2VNZWRpYURhdGE9eyBsYXJnZSB9XG4gICAgICA+eyBwcm9wcy5jaGlsZHJlbiB9PC9BcFN0eWxlPlxuICAgIClcbiAgfVxufVxuXG5PYmplY3QuYXNzaWduKEFwQ2FwdGNoYVN0eWxlLCB7XG4gIHByb3BUeXBlczoge1xuICAgIHN0eWxlOiB0eXBlcy5vYmplY3RcbiAgfSxcbiAgZGVmYXVsdFByb3BzOiB7XG4gICAgc3R5bGU6IHt9XG4gIH0sXG4gIHN0eWxlRGF0YSAoY29uZmlnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFsbDoge1xuICAgICAgICAnLmFwLWNhcHRjaGEnOiB7XG4gICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAnI0ZBRkFGQScsXG4gICAgICAgICAgcGFkZGluZzogJzhweCcsXG4gICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJ1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLWNhcHRjaGEtaW1hZ2UnOiB7XG4gICAgICAgICAgYmFja2dyb3VuZDogJ3doaXRlJyxcbiAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgI0UwRTBFMCdcbiAgICAgICAgfSxcbiAgICAgICAgJy5hcC1jYXB0Y2hhLWltYWdlIC5hcC1pbWFnZS1zcGlubmVyJzoge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICd0cmFuc3BhcmVudCdcbiAgICAgICAgfSxcbiAgICAgICAgJy5hcC1jYXB0Y2hhLXJlZnJlc2gtYnV0dG9uJzoge1xuICAgICAgICAgIGRpc3BsYXk6ICdibG9jaycsXG4gICAgICAgICAgdGV4dEFsaWduOiAncmlnaHQnLFxuICAgICAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICAgICAgICAgIHBhZGRpbmc6ICc0cHggOHB4JyxcbiAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICBmb250U2l6ZTogJzEycHgnLFxuICAgICAgICAgIHJpZ2h0OiAwLFxuICAgICAgICAgIGJvdHRvbTogMCxcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAncmdiYSgyNTUsMjU1LDI1NSwwLjkpJ1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLWNhcHRjaGEtcmVmcmVzaC1idXR0b246YWN0aXZlJzoge1xuICAgICAgICAgIG9wYWNpdHk6IDAuOFxuICAgICAgICB9LFxuICAgICAgICAnLmFwLWNhcHRjaGEtc3Bpbm5lcic6IHtcbiAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICByaWdodDogMCxcbiAgICAgICAgICBib3R0b206IDAsXG4gICAgICAgICAgekluZGV4OiA0LFxuICAgICAgICAgIGJhY2tncm91bmQ6ICdyZ2JhKDI1NSwyNTUsMjU1LDAuOSknLFxuICAgICAgICAgIGNvbG9yOiAnI0NDQydcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufSlcblxuZXhwb3J0IGRlZmF1bHQgQXBDYXB0Y2hhU3R5bGVcbiJdfQ==