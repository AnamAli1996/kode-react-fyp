/**
 * Footer for view.
 * @class ApViewFooter
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _apemanReactMixinLayout = require('apeman-react-mixin-layout');

var _apemanReactContainer = require('apeman-react-container');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApViewFooter */
var ApViewFooter = _react2.default.createClass({
  displayName: 'ApViewFooter',


  // --------------------
  // Specs
  // --------------------

  propTypes: {
    /** Fixed to bottom */
    fixed: _react.PropTypes.bool
  },

  mixins: [_apemanReactMixinLayout.ApLayoutMixin],

  statics: {},

  getInitialState: function getInitialState() {
    return {};
  },
  getDefaultProps: function getDefaultProps() {
    return {
      fixed: false
    };
  },
  render: function render() {
    var s = this;
    var props = s.props;
    var layouts = s.layouts;


    return _react2.default.createElement(
      'div',
      { className: (0, _classnames2.default)('ap-view-footer', {
          'ap-view-footer-fixed': props.fixed
        }, props.className),
        style: (0, _assign2.default)({}, props.style) },
      _react2.default.createElement('div', { className: 'ap-view-footer-space',
        ref: 'state',
        style: layouts.space
      }),
      _react2.default.createElement(
        'div',
        { className: 'ap-view-footer-content',
          ref: 'content',
          style: layouts.content
        },
        _react2.default.createElement(
          _apemanReactContainer.ApContainer,
          { className: 'ap-view-footer-inner' },
          props.children
        )
      )
    );
  },

  // --------------------
  // Lifecycle
  // --------------------

  // ------------------
  // For ApLayoutMixin
  // ------------------

  getInitialLayouts: function getInitialLayouts() {
    var s = this;
    return {
      space: {
        height: 'auto'
      },
      content: {}
    };
  },
  calcLayouts: function calcLayouts() {
    var s = this;

    var content = _reactDom2.default.findDOMNode(s.refs['content']);
    var contentRect = content.getBoundingClientRect();
    return {
      space: {
        height: contentRect.height
      },
      content: {}
    };
  }

  // ------------------
  // Private
  // ------------------

});

exports.default = ApViewFooter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX3ZpZXdfZm9vdGVyLmpzeCJdLCJuYW1lcyI6WyJBcFZpZXdGb290ZXIiLCJjcmVhdGVDbGFzcyIsInByb3BUeXBlcyIsImZpeGVkIiwiYm9vbCIsIm1peGlucyIsInN0YXRpY3MiLCJnZXRJbml0aWFsU3RhdGUiLCJnZXREZWZhdWx0UHJvcHMiLCJyZW5kZXIiLCJzIiwicHJvcHMiLCJsYXlvdXRzIiwiY2xhc3NOYW1lIiwic3R5bGUiLCJzcGFjZSIsImNvbnRlbnQiLCJjaGlsZHJlbiIsImdldEluaXRpYWxMYXlvdXRzIiwiaGVpZ2h0IiwiY2FsY0xheW91dHMiLCJmaW5kRE9NTm9kZSIsInJlZnMiLCJjb250ZW50UmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBS0E7Ozs7Ozs7Ozs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7OztBQUVBO0FBQ0EsSUFBTUEsZUFBZSxnQkFBTUMsV0FBTixDQUFrQjtBQUFBOzs7QUFFckM7QUFDQTtBQUNBOztBQUVBQyxhQUFXO0FBQ1Q7QUFDQUMsV0FBTyxpQkFBTUM7QUFGSixHQU4wQjs7QUFXckNDLFVBQVEsdUNBWDZCOztBQWVyQ0MsV0FBUyxFQWY0Qjs7QUFpQnJDQyxpQkFqQnFDLDZCQWlCbEI7QUFDakIsV0FBTyxFQUFQO0FBQ0QsR0FuQm9DO0FBcUJyQ0MsaUJBckJxQyw2QkFxQmxCO0FBQ2pCLFdBQU87QUFDTEwsYUFBTztBQURGLEtBQVA7QUFHRCxHQXpCb0M7QUEyQnJDTSxRQTNCcUMsb0JBMkIzQjtBQUNSLFFBQU1DLElBQUksSUFBVjtBQURRLFFBRUZDLEtBRkUsR0FFaUJELENBRmpCLENBRUZDLEtBRkU7QUFBQSxRQUVLQyxPQUZMLEdBRWlCRixDQUZqQixDQUVLRSxPQUZMOzs7QUFJUixXQUNFO0FBQUE7QUFBQSxRQUFLLFdBQVksMEJBQVcsZ0JBQVgsRUFBNkI7QUFDNUMsa0NBQXdCRCxNQUFNUjtBQURjLFNBQTdCLEVBRWRRLE1BQU1FLFNBRlEsQ0FBakI7QUFHSyxlQUFRLHNCQUFjLEVBQWQsRUFBa0JGLE1BQU1HLEtBQXhCLENBSGI7QUFLRSw2Q0FBSyxXQUFVLHNCQUFmO0FBQ0ssYUFBSSxPQURUO0FBRUssZUFBUUYsUUFBUUc7QUFGckIsUUFMRjtBQVVFO0FBQUE7QUFBQSxVQUFLLFdBQVUsd0JBQWY7QUFDSyxlQUFJLFNBRFQ7QUFFSyxpQkFBUUgsUUFBUUk7QUFGckI7QUFJRTtBQUFBO0FBQUEsWUFBYSxXQUFVLHNCQUF2QjtBQUNJTCxnQkFBTU07QUFEVjtBQUpGO0FBVkYsS0FERjtBQXFCRCxHQXBEb0M7O0FBcURyQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBQyxtQkE3RHFDLCtCQTZEaEI7QUFDbkIsUUFBTVIsSUFBSSxJQUFWO0FBQ0EsV0FBTztBQUNMSyxhQUFPO0FBQ0xJLGdCQUFRO0FBREgsT0FERjtBQUlMSCxlQUFTO0FBSkosS0FBUDtBQU1ELEdBckVvQztBQXVFckNJLGFBdkVxQyx5QkF1RXRCO0FBQ2IsUUFBTVYsSUFBSSxJQUFWOztBQUVBLFFBQUlNLFVBQVUsbUJBQVNLLFdBQVQsQ0FBcUJYLEVBQUVZLElBQUYsQ0FBUSxTQUFSLENBQXJCLENBQWQ7QUFDQSxRQUFJQyxjQUFjUCxRQUFRUSxxQkFBUixFQUFsQjtBQUNBLFdBQU87QUFDTFQsYUFBTztBQUNMSSxnQkFBUUksWUFBWUo7QUFEZixPQURGO0FBSUxILGVBQVM7QUFKSixLQUFQO0FBTUQ7O0FBRUQ7QUFDQTtBQUNBOztBQXRGcUMsQ0FBbEIsQ0FBckI7O2tCQTBGZWhCLFkiLCJmaWxlIjoiYXBfdmlld19mb290ZXIuanN4Iiwic291cmNlUm9vdCI6ImxpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRm9vdGVyIGZvciB2aWV3LlxuICogQGNsYXNzIEFwVmlld0Zvb3RlclxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG5pbXBvcnQgUmVhY3QsIHtQcm9wVHlwZXMgYXMgdHlwZXN9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSdcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnXG5pbXBvcnQge0FwTGF5b3V0TWl4aW59IGZyb20gJ2FwZW1hbi1yZWFjdC1taXhpbi1sYXlvdXQnXG5pbXBvcnQge0FwQ29udGFpbmVyfSBmcm9tICdhcGVtYW4tcmVhY3QtY29udGFpbmVyJ1xuXG4vKiogQGxlbmRzIEFwVmlld0Zvb3RlciAqL1xuY29uc3QgQXBWaWV3Rm9vdGVyID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFNwZWNzXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgcHJvcFR5cGVzOiB7XG4gICAgLyoqIEZpeGVkIHRvIGJvdHRvbSAqL1xuICAgIGZpeGVkOiB0eXBlcy5ib29sXG4gIH0sXG5cbiAgbWl4aW5zOiBbXG4gICAgQXBMYXlvdXRNaXhpblxuICBdLFxuXG4gIHN0YXRpY3M6IHt9LFxuXG4gIGdldEluaXRpYWxTdGF0ZSAoKSB7XG4gICAgcmV0dXJuIHt9XG4gIH0sXG5cbiAgZ2V0RGVmYXVsdFByb3BzICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZml4ZWQ6IGZhbHNlXG4gICAgfVxuICB9LFxuXG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcywgbGF5b3V0cyB9ID0gc1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXsgY2xhc3NuYW1lcygnYXAtdmlldy1mb290ZXInLCB7XG4gICAgICAgICdhcC12aWV3LWZvb3Rlci1maXhlZCc6IHByb3BzLmZpeGVkXG4gICAgICB9LCBwcm9wcy5jbGFzc05hbWUpIH1cbiAgICAgICAgICAgc3R5bGU9eyBPYmplY3QuYXNzaWduKHt9LCBwcm9wcy5zdHlsZSkgfT5cblxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nYXAtdmlldy1mb290ZXItc3BhY2UnXG4gICAgICAgICAgICAgcmVmPSdzdGF0ZSdcbiAgICAgICAgICAgICBzdHlsZT17IGxheW91dHMuc3BhY2UgfVxuICAgICAgICA+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nYXAtdmlldy1mb290ZXItY29udGVudCdcbiAgICAgICAgICAgICByZWY9J2NvbnRlbnQnXG4gICAgICAgICAgICAgc3R5bGU9eyBsYXlvdXRzLmNvbnRlbnQgfVxuICAgICAgICA+XG4gICAgICAgICAgPEFwQ29udGFpbmVyIGNsYXNzTmFtZT0nYXAtdmlldy1mb290ZXItaW5uZXInPlxuICAgICAgICAgICAgeyBwcm9wcy5jaGlsZHJlbiB9XG4gICAgICAgICAgPC9BcENvbnRhaW5lcj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH0sXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIExpZmVjeWNsZVxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBGb3IgQXBMYXlvdXRNaXhpblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS1cblxuICBnZXRJbml0aWFsTGF5b3V0cyAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICByZXR1cm4ge1xuICAgICAgc3BhY2U6IHtcbiAgICAgICAgaGVpZ2h0OiAnYXV0bydcbiAgICAgIH0sXG4gICAgICBjb250ZW50OiB7fVxuICAgIH1cbiAgfSxcblxuICBjYWxjTGF5b3V0cyAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcblxuICAgIGxldCBjb250ZW50ID0gUmVhY3RET00uZmluZERPTU5vZGUocy5yZWZzWyAnY29udGVudCcgXSlcbiAgICBsZXQgY29udGVudFJlY3QgPSBjb250ZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG4gICAgcmV0dXJuIHtcbiAgICAgIHNwYWNlOiB7XG4gICAgICAgIGhlaWdodDogY29udGVudFJlY3QuaGVpZ2h0XG4gICAgICB9LFxuICAgICAgY29udGVudDoge31cbiAgICB9XG4gIH1cblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gUHJpdmF0ZVxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS1cblxufSlcblxuZXhwb3J0IGRlZmF1bHQgQXBWaWV3Rm9vdGVyXG4iXX0=