/**
 * Cell button component.
 * @class ApCellButton
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _ap_button = require('./ap_button');

var _ap_button2 = _interopRequireDefault(_ap_button);

var _asobj = require('asobj');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApCellButton */
var ApCellButton = _react2.default.createClass({
  displayName: 'ApCellButton',


  // --------------------
  // Specs
  // --------------------

  propTypes: {
    disabled: _react.PropTypes.bool,
    onTap: _react.PropTypes.func,
    text: _react.PropTypes.string
  },

  mixins: [],

  getInitialState: function getInitialState() {
    return {};
  },
  getDefaultProps: function getDefaultProps() {
    return {
      disabled: false,
      onTap: null,
      text: null
    };
  },
  render: function render() {
    var s = this;
    var props = s.props;

    return _react2.default.createElement(
      _ap_button2.default,
      (0, _extends3.default)({}, props, {
        className: (0, _classnames2.default)('ap-cell-button', props.className),
        wide: false
      }),
      _react2.default.createElement(
        'span',
        { className: 'ap-cell-button-aligner' },
        '\xA0'
      ),
      _react2.default.createElement(
        'span',
        { className: 'ap-cell-button-text' },
        props.text
      )
    );
  },


  // --------------------
  // Lifecycle
  // --------------------

  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    var s = this;
    var props = s.props,
        state = s.state;

    return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
  }
});

exports.default = ApCellButton;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2NlbGxfYnV0dG9uLmpzeCJdLCJuYW1lcyI6WyJBcENlbGxCdXR0b24iLCJjcmVhdGVDbGFzcyIsInByb3BUeXBlcyIsImRpc2FibGVkIiwiYm9vbCIsIm9uVGFwIiwiZnVuYyIsInRleHQiLCJzdHJpbmciLCJtaXhpbnMiLCJnZXRJbml0aWFsU3RhdGUiLCJnZXREZWZhdWx0UHJvcHMiLCJyZW5kZXIiLCJzIiwicHJvcHMiLCJjbGFzc05hbWUiLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJuZXh0UHJvcHMiLCJuZXh0U3RhdGUiLCJzdGF0ZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBS0E7Ozs7Ozs7Ozs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUVBO0FBQ0EsSUFBTUEsZUFBZSxnQkFBTUMsV0FBTixDQUFrQjtBQUFBOzs7QUFFckM7QUFDQTtBQUNBOztBQUVBQyxhQUFXO0FBQ1RDLGNBQVUsaUJBQU1DLElBRFA7QUFFVEMsV0FBTyxpQkFBTUMsSUFGSjtBQUdUQyxVQUFNLGlCQUFNQztBQUhILEdBTjBCOztBQVlyQ0MsVUFBUSxFQVo2Qjs7QUFlckNDLGlCQWZxQyw2QkFlbEI7QUFDakIsV0FBTyxFQUFQO0FBQ0QsR0FqQm9DO0FBbUJyQ0MsaUJBbkJxQyw2QkFtQmxCO0FBQ2pCLFdBQU87QUFDTFIsZ0JBQVUsS0FETDtBQUVMRSxhQUFPLElBRkY7QUFHTEUsWUFBTTtBQUhELEtBQVA7QUFLRCxHQXpCb0M7QUEyQnJDSyxRQTNCcUMsb0JBMkIzQjtBQUNSLFFBQU1DLElBQUksSUFBVjtBQURRLFFBRUZDLEtBRkUsR0FFUUQsQ0FGUixDQUVGQyxLQUZFOztBQUdSLFdBQ0U7QUFBQTtBQUFBLGlDQUFlQSxLQUFmO0FBQ1UsbUJBQVksMEJBQVcsZ0JBQVgsRUFBNkJBLE1BQU1DLFNBQW5DLENBRHRCO0FBRVUsY0FBTztBQUZqQjtBQUlFO0FBQUE7QUFBQSxVQUFNLFdBQVUsd0JBQWhCO0FBQUE7QUFBQSxPQUpGO0FBS0U7QUFBQTtBQUFBLFVBQU0sV0FBVSxxQkFBaEI7QUFBd0NELGNBQU1QO0FBQTlDO0FBTEYsS0FERjtBQVNELEdBdkNvQzs7O0FBeUNyQztBQUNBO0FBQ0E7O0FBRUFTLHVCQTdDcUMsaUNBNkNkQyxTQTdDYyxFQTZDSEMsU0E3Q0csRUE2Q1E7QUFDM0MsUUFBTUwsSUFBSSxJQUFWO0FBRDJDLFFBRXJDQyxLQUZxQyxHQUVwQkQsQ0FGb0IsQ0FFckNDLEtBRnFDO0FBQUEsUUFFOUJLLEtBRjhCLEdBRXBCTixDQUZvQixDQUU5Qk0sS0FGOEI7O0FBRzNDLFdBQU8sQ0FBQyx5QkFBYUwsS0FBYixFQUFvQkcsU0FBcEIsQ0FBRCxJQUFtQyxDQUFDLHlCQUFhRSxLQUFiLEVBQW9CRCxTQUFwQixDQUEzQztBQUNEO0FBakRvQyxDQUFsQixDQUFyQjs7a0JBb0RlbEIsWSIsImZpbGUiOiJhcF9jZWxsX2J1dHRvbi5qc3giLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDZWxsIGJ1dHRvbiBjb21wb25lbnQuXG4gKiBAY2xhc3MgQXBDZWxsQnV0dG9uXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBSZWFjdCwge1Byb3BUeXBlcyBhcyB0eXBlc30gZnJvbSAncmVhY3QnXG5pbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IEFwQnV0dG9uIGZyb20gJy4vYXBfYnV0dG9uJ1xuXG5pbXBvcnQge3NoYWxsb3dFcXVhbH0gZnJvbSAnYXNvYmonXG5cbi8qKiBAbGVuZHMgQXBDZWxsQnV0dG9uICovXG5jb25zdCBBcENlbGxCdXR0b24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gU3BlY3NcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICBwcm9wVHlwZXM6IHtcbiAgICBkaXNhYmxlZDogdHlwZXMuYm9vbCxcbiAgICBvblRhcDogdHlwZXMuZnVuYyxcbiAgICB0ZXh0OiB0eXBlcy5zdHJpbmdcbiAgfSxcblxuICBtaXhpbnM6IFtcbiAgXSxcblxuICBnZXRJbml0aWFsU3RhdGUgKCkge1xuICAgIHJldHVybiB7fVxuICB9LFxuXG4gIGdldERlZmF1bHRQcm9wcyAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICAgIG9uVGFwOiBudWxsLFxuICAgICAgdGV4dDogbnVsbFxuICAgIH1cbiAgfSxcblxuICByZW5kZXIgKCkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMgfSA9IHNcbiAgICByZXR1cm4gKFxuICAgICAgPEFwQnV0dG9uIHsgLi4ucHJvcHMgfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17IGNsYXNzbmFtZXMoJ2FwLWNlbGwtYnV0dG9uJywgcHJvcHMuY2xhc3NOYW1lKSB9XG4gICAgICAgICAgICAgICAgd2lkZT17IGZhbHNlIH1cbiAgICAgID5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdhcC1jZWxsLWJ1dHRvbi1hbGlnbmVyJz4mbmJzcDs8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT0nYXAtY2VsbC1idXR0b24tdGV4dCc+eyBwcm9wcy50ZXh0IH08L3NwYW4+XG4gICAgICA8L0FwQnV0dG9uPlxuICAgIClcbiAgfSxcblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBMaWZlY3ljbGVcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICBzaG91bGRDb21wb25lbnRVcGRhdGUgKG5leHRQcm9wcywgbmV4dFN0YXRlKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcywgc3RhdGUgfSA9IHNcbiAgICByZXR1cm4gIXNoYWxsb3dFcXVhbChwcm9wcywgbmV4dFByb3BzKSB8fCAhc2hhbGxvd0VxdWFsKHN0YXRlLCBuZXh0U3RhdGUpXG4gIH1cbn0pXG5cbmV4cG9ydCBkZWZhdWx0IEFwQ2VsbEJ1dHRvblxuIl19