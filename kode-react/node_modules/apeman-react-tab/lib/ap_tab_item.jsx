/**
 * Item of tab
 * @class ApTabItem
 */

'use strict'

import React, {Component, PropTypes as types} from 'react'
import classnames from 'classnames'
import {shallowEqual} from 'asobj'
import {withTouch} from 'apeman-react-touchable'

/** @lends ApTabItem */
class ApTabItem extends Component {
  render () {
    const s = this
    let { props } = s
    let className = classnames('ap-tab-item', props.className, {
      'ap-tab-item-selected': !!props.selected
    })
    return (
      <a className={ className }
         href={ props.href }>
        { props.children }
      </a>
    )
  }

  // --------------------
  // Lifecycle
  // --------------------

  shouldComponentUpdate (nextProps, nextState) {
    const s = this
    let { props, state } = s
    return !shallowEqual(props, nextProps) || !shallowEqual(state, nextState)
  }
}

Object.assign(ApTabItem, {
  // --------------------
  // Specs
  // --------------------

  propTypes: {
    /** The tab is selected or not */
    selected: types.bool,
    /** Href of anchor */
    href: types.string
  },

  defaultProps: {
    selected: false,
    href: null
  }

})

export default ApTabItem // Dummy for doc
export default withTouch(ApTabItem)
