/**
 * Style for ApYesnoDialog.
 * @class ApYesnoDialogStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/** @lends ApYesnoDialogStyle */
var ApYesnoDialogStyle = function (_Component) {
  _inherits(ApYesnoDialogStyle, _Component);

  function ApYesnoDialogStyle() {
    _classCallCheck(this, ApYesnoDialogStyle);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApYesnoDialogStyle).apply(this, arguments));
  }

  _createClass(ApYesnoDialogStyle, [{
    key: 'render',
    value: function render() {
      var s = this;
      var props = s.props;

      var _ApYesnoDialogStyle$s = ApYesnoDialogStyle.styleData(props);

      var all = _ApYesnoDialogStyle$s.all;
      var small = _ApYesnoDialogStyle$s.small;
      var medium = _ApYesnoDialogStyle$s.medium;
      var large = _ApYesnoDialogStyle$s.large;


      return _react2.default.createElement(
        _apemanReactStyle.ApStyle,
        { data: Object.assign(all, props.style),
          smallMediaData: small,
          mediumMediaData: medium,
          largeMediaData: large
        },
        props.children
      );
    }
  }]);

  return ApYesnoDialogStyle;
}(_react.Component);

Object.assign(ApYesnoDialogStyle, {
  propTypes: {
    style: _react.PropTypes.object,
    buttonHeight: _react.PropTypes.number,
    highlightColor: _react.PropTypes.string
  },
  defaultProps: {
    style: {},
    buttonHeight: 40,
    borderColor: '#D0D0D0',
    highlightColor: '#38E'
  },
  styleData: function styleData(config) {
    var buttonHeight = config.buttonHeight;
    var borderColor = config.borderColor;
    var highlightColor = config.highlightColor;

    return {
      all: {
        '.ap-yesno-dialog .ap-dialog-body': {
          paddingBottom: buttonHeight + 8 + 'px'
        },
        '.ap-yesno-dialog .ap-dialog-close-button-icon': {
          display: 'none'
        },
        '.ap-yesno-dialog-control': {
          display: 'flex',
          position: 'absolute',
          left: 0,
          right: 0,
          bottom: 0,
          boxSizing: 'border-box',
          overflowX: 'hidden',
          justifyContent: 'flex-end',
          padding: '0 8px',
          backgroundColor: 'rgba(255,255,255,0.9)'
        },
        '.ap-yesno-dialog-button': {
          display: 'block',
          maxWidth: '50%',
          textAlign: 'center',
          margin: '0 -1px',
          color: '' + highlightColor
        },
        '.ap-yesno-dialog-button .ap-touchable': {
          padding: '4px 16px'
        },
        '.ap-yesno-dialog-button-text': {
          display: 'inline-block',
          width: '100%',
          boxSizing: 'border-box',
          lineHeight: buttonHeight + 'px'
        },
        '.ap-yesno-dialog-button:hover': {
          cursor: 'pointer',
          opacity: 0.9
        },
        '.ap-yesno-dialog-button:active': {
          opacity: 0.6
        }
      },
      small: {},
      medium: {},
      large: {}
    };
  }
});

exports.default = ApYesnoDialogStyle;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX3llc25vX2RpYWxvZ19zdHlsZS5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBS0E7Ozs7Ozs7O0FBRUE7Ozs7QUFDQTs7Ozs7Ozs7OztBQUVBO0lBQ00sa0I7Ozs7Ozs7Ozs7OzZCQUNNO0FBQ1IsVUFBTSxJQUFJLElBQVY7QUFEUSxVQUVGLEtBRkUsR0FFUSxDQUZSLENBRUYsS0FGRTs7QUFBQSxrQ0FJNEIsbUJBQW1CLFNBQW5CLENBQTZCLEtBQTdCLENBSjVCOztBQUFBLFVBSUYsR0FKRSx5QkFJRixHQUpFO0FBQUEsVUFJRyxLQUpILHlCQUlHLEtBSkg7QUFBQSxVQUlVLE1BSlYseUJBSVUsTUFKVjtBQUFBLFVBSWtCLEtBSmxCLHlCQUlrQixLQUpsQjs7O0FBTVIsYUFDRTtBQUFBO0FBQUEsVUFBUyxNQUFPLE9BQU8sTUFBUCxDQUFjLEdBQWQsRUFBbUIsTUFBTSxLQUF6QixDQUFoQjtBQUNTLDBCQUFpQixLQUQxQjtBQUVTLDJCQUFrQixNQUYzQjtBQUdTLDBCQUFpQjtBQUgxQjtBQUlHLGNBQU07QUFKVCxPQURGO0FBT0Q7Ozs7OztBQUdILE9BQU8sTUFBUCxDQUFjLGtCQUFkLEVBQWtDO0FBQ2hDLGFBQVc7QUFDVCxXQUFPLGlCQUFNLE1BREo7QUFFVCxrQkFBYyxpQkFBTSxNQUZYO0FBR1Qsb0JBQWdCLGlCQUFNO0FBSGIsR0FEcUI7QUFNaEMsZ0JBQWM7QUFDWixXQUFPLEVBREs7QUFFWixrQkFBYyxFQUZGO0FBR1osaUJBQWEsU0FIRDtBQUlaLG9CQUFnQjtBQUpKLEdBTmtCO0FBWWhDLFdBWmdDLHFCQVlyQixNQVpxQixFQVliO0FBQUEsUUFFZixZQUZlLEdBS2IsTUFMYSxDQUVmLFlBRmU7QUFBQSxRQUdmLFdBSGUsR0FLYixNQUxhLENBR2YsV0FIZTtBQUFBLFFBSWYsY0FKZSxHQUtiLE1BTGEsQ0FJZixjQUplOztBQU1qQixXQUFPO0FBQ0wsV0FBSztBQUNILDRDQUFvQztBQUNsQyx5QkFBa0IsZUFBZSxDQUFqQztBQURrQyxTQURqQztBQUlILHlEQUFpRDtBQUMvQyxtQkFBUztBQURzQyxTQUo5QztBQU9ILG9DQUE0QjtBQUMxQixtQkFBUyxNQURpQjtBQUUxQixvQkFBVSxVQUZnQjtBQUcxQixnQkFBTSxDQUhvQjtBQUkxQixpQkFBTyxDQUptQjtBQUsxQixrQkFBUSxDQUxrQjtBQU0xQixxQkFBVyxZQU5lO0FBTzFCLHFCQUFXLFFBUGU7QUFRMUIsMEJBQWdCLFVBUlU7QUFTMUIsbUJBQVMsT0FUaUI7QUFVMUIsMkJBQWlCO0FBVlMsU0FQekI7QUFtQkgsbUNBQTJCO0FBQ3pCLG1CQUFTLE9BRGdCO0FBRXpCLG9CQUFVLEtBRmU7QUFHekIscUJBQVcsUUFIYztBQUl6QixrQkFBUSxRQUppQjtBQUt6QixzQkFBVTtBQUxlLFNBbkJ4QjtBQTBCSCxpREFBeUM7QUFDdkMsbUJBQVM7QUFEOEIsU0ExQnRDO0FBNkJILHdDQUFnQztBQUM5QixtQkFBUyxjQURxQjtBQUU5QixpQkFBTyxNQUZ1QjtBQUc5QixxQkFBVyxZQUhtQjtBQUk5QixzQkFBZSxZQUFmO0FBSjhCLFNBN0I3QjtBQW1DSCx5Q0FBaUM7QUFDL0Isa0JBQVEsU0FEdUI7QUFFL0IsbUJBQVM7QUFGc0IsU0FuQzlCO0FBdUNILDBDQUFrQztBQUNoQyxtQkFBUztBQUR1QjtBQXZDL0IsT0FEQTtBQTRDTCxhQUFPLEVBNUNGO0FBNkNMLGNBQVEsRUE3Q0g7QUE4Q0wsYUFBTztBQTlDRixLQUFQO0FBZ0REO0FBbEUrQixDQUFsQzs7a0JBcUVlLGtCIiwiZmlsZSI6ImFwX3llc25vX2RpYWxvZ19zdHlsZS5qc3giLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTdHlsZSBmb3IgQXBZZXNub0RpYWxvZy5cbiAqIEBjbGFzcyBBcFllc25vRGlhbG9nU3R5bGVcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50LCBQcm9wVHlwZXMgYXMgdHlwZXN9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHtBcFN0eWxlfSBmcm9tICdhcGVtYW4tcmVhY3Qtc3R5bGUnXG5cbi8qKiBAbGVuZHMgQXBZZXNub0RpYWxvZ1N0eWxlICovXG5jbGFzcyBBcFllc25vRGlhbG9nU3R5bGUgZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIgKCkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMgfSA9IHNcblxuICAgIGxldCB7IGFsbCwgc21hbGwsIG1lZGl1bSwgbGFyZ2UgfSA9IEFwWWVzbm9EaWFsb2dTdHlsZS5zdHlsZURhdGEocHJvcHMpXG5cbiAgICByZXR1cm4gKFxuICAgICAgPEFwU3R5bGUgZGF0YT17IE9iamVjdC5hc3NpZ24oYWxsLCBwcm9wcy5zdHlsZSkgfVxuICAgICAgICAgICAgICAgc21hbGxNZWRpYURhdGE9eyBzbWFsbCB9XG4gICAgICAgICAgICAgICBtZWRpdW1NZWRpYURhdGE9eyBtZWRpdW0gfVxuICAgICAgICAgICAgICAgbGFyZ2VNZWRpYURhdGE9eyBsYXJnZSB9XG4gICAgICA+eyBwcm9wcy5jaGlsZHJlbiB9PC9BcFN0eWxlPlxuICAgIClcbiAgfVxufVxuXG5PYmplY3QuYXNzaWduKEFwWWVzbm9EaWFsb2dTdHlsZSwge1xuICBwcm9wVHlwZXM6IHtcbiAgICBzdHlsZTogdHlwZXMub2JqZWN0LFxuICAgIGJ1dHRvbkhlaWdodDogdHlwZXMubnVtYmVyLFxuICAgIGhpZ2hsaWdodENvbG9yOiB0eXBlcy5zdHJpbmdcbiAgfSxcbiAgZGVmYXVsdFByb3BzOiB7XG4gICAgc3R5bGU6IHt9LFxuICAgIGJ1dHRvbkhlaWdodDogNDAsXG4gICAgYm9yZGVyQ29sb3I6ICcjRDBEMEQwJyxcbiAgICBoaWdobGlnaHRDb2xvcjogJyMzOEUnXG4gIH0sXG4gIHN0eWxlRGF0YSAoY29uZmlnKSB7XG4gICAgbGV0IHtcbiAgICAgIGJ1dHRvbkhlaWdodCxcbiAgICAgIGJvcmRlckNvbG9yLFxuICAgICAgaGlnaGxpZ2h0Q29sb3JcbiAgICB9ID0gY29uZmlnXG4gICAgcmV0dXJuIHtcbiAgICAgIGFsbDoge1xuICAgICAgICAnLmFwLXllc25vLWRpYWxvZyAuYXAtZGlhbG9nLWJvZHknOiB7XG4gICAgICAgICAgcGFkZGluZ0JvdHRvbTogYCR7YnV0dG9uSGVpZ2h0ICsgOH1weGBcbiAgICAgICAgfSxcbiAgICAgICAgJy5hcC15ZXNuby1kaWFsb2cgLmFwLWRpYWxvZy1jbG9zZS1idXR0b24taWNvbic6IHtcbiAgICAgICAgICBkaXNwbGF5OiAnbm9uZSdcbiAgICAgICAgfSxcbiAgICAgICAgJy5hcC15ZXNuby1kaWFsb2ctY29udHJvbCc6IHtcbiAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICByaWdodDogMCxcbiAgICAgICAgICBib3R0b206IDAsXG4gICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgb3ZlcmZsb3dYOiAnaGlkZGVuJyxcbiAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2ZsZXgtZW5kJyxcbiAgICAgICAgICBwYWRkaW5nOiAnMCA4cHgnLFxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMjU1LDI1NSwyNTUsMC45KSdcbiAgICAgICAgfSxcbiAgICAgICAgJy5hcC15ZXNuby1kaWFsb2ctYnV0dG9uJzoge1xuICAgICAgICAgIGRpc3BsYXk6ICdibG9jaycsXG4gICAgICAgICAgbWF4V2lkdGg6ICc1MCUnLFxuICAgICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgICAgICAgbWFyZ2luOiAnMCAtMXB4JyxcbiAgICAgICAgICBjb2xvcjogYCR7aGlnaGxpZ2h0Q29sb3J9YFxuICAgICAgICB9LFxuICAgICAgICAnLmFwLXllc25vLWRpYWxvZy1idXR0b24gLmFwLXRvdWNoYWJsZSc6IHtcbiAgICAgICAgICBwYWRkaW5nOiAnNHB4IDE2cHgnXG4gICAgICAgIH0sXG4gICAgICAgICcuYXAteWVzbm8tZGlhbG9nLWJ1dHRvbi10ZXh0Jzoge1xuICAgICAgICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgbGluZUhlaWdodDogYCR7YnV0dG9uSGVpZ2h0fXB4YFxuICAgICAgICB9LFxuICAgICAgICAnLmFwLXllc25vLWRpYWxvZy1idXR0b246aG92ZXInOiB7XG4gICAgICAgICAgY3Vyc29yOiAncG9pbnRlcicsXG4gICAgICAgICAgb3BhY2l0eTogMC45XG4gICAgICAgIH0sXG4gICAgICAgICcuYXAteWVzbm8tZGlhbG9nLWJ1dHRvbjphY3RpdmUnOiB7XG4gICAgICAgICAgb3BhY2l0eTogMC42XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBzbWFsbDoge30sXG4gICAgICBtZWRpdW06IHt9LFxuICAgICAgbGFyZ2U6IHt9XG4gICAgfVxuICB9XG59KVxuXG5leHBvcnQgZGVmYXVsdCBBcFllc25vRGlhbG9nU3R5bGVcbiJdfQ==