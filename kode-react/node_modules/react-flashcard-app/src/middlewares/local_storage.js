export const getRemoved = (deckIndex) => {
  const removed = localStorage.getItem(`removed-${deckIndex}`);
  if (removed !== null && removed !== '') {
    return removed.split(',').map(item => parseInt(item, 10));
  }
  return [];
};

export const setRemoved = (removed, deckIndex) =>
  localStorage.setItem(`removed-${deckIndex}`, removed);

const localStorageMiddleware = store => next => (action) => {
  let returnValue;
  let newAction;
  switch (action.type) {
    case 'INIT_APP': {
      newAction = action;
      newAction.data.removed = getRemoved(newAction.data.data.id);
      returnValue = next(newAction);
      break;
    }
    case 'RESET':
    case 'REMOVE_CARD':
    case 'UNDO_REMOVE': {
      returnValue = next(action);
      const { deck, removed } = store.getState().app;
      setRemoved(removed, deck.id);
      break;
    }
    default: {
      returnValue = next(action);
      break;
    }
  }
  return returnValue;
};

export default localStorageMiddleware;
