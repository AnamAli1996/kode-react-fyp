/**
 * Item for menu.
 * @class ApMenuItem
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _asobj = require('asobj');

var _apemanReactButton = require('apeman-react-button');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApMenuItem */
var ApMenuItem = _react2.default.createClass({
  displayName: 'ApMenuItem',


  // --------------------
  // Specs
  // --------------------

  propTypes: {
    hidden: _react.PropTypes.bool
  },

  mixins: [],

  statics: {
    /**
     * Create an item.
     * @param {string} icon - Icon class name.
     * @param {string} text - Text of item.
     * @param {function} onTap - On tap.
     * @param {object} props - Properties.
     */
    createItem: function createItem(icon, text, onTap, props) {
      return _react2.default.createElement(ApMenuItem, _extends({ icon: icon,
        text: text,
        onTap: onTap
      }, props));
    }
  },

  getInitialState: function getInitialState() {
    return {};
  },
  getDefaultProps: function getDefaultProps() {
    return {
      hidden: false
    };
  },
  render: function render() {
    var s = this;
    var props = s.props;


    var className = (0, _classnames2.default)('ap-menu-item', {
      'ap-menu-item-hidden': props.hidden
    }, props.className);
    return _react2.default.createElement(
      _apemanReactButton.ApIconButton,
      _extends({}, props, {
        className: className,
        style: Object.assign({}, props.style)
      }),
      props.children
    );
  },


  // --------------------
  // Lifecycle
  // --------------------
  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    var s = this;
    var props = s.props;
    var state = s.state;

    return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
  }

  // ------------------
  // Custom
  // ------------------

  // ------------------
  // Private
  // ------------------

});

exports.default = ApMenuItem;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX21lbnVfaXRlbS5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBS0E7Ozs7Ozs7O0FBRUE7Ozs7QUFDQTs7OztBQUNBOztBQUNBOzs7O0FBRUE7QUFDQSxJQUFNLGFBQWEsZ0JBQU0sV0FBTixDQUFrQjtBQUFBOzs7QUFFbkM7QUFDQTtBQUNBOztBQUVBLGFBQVc7QUFDVCxZQUFRLGlCQUFNO0FBREwsR0FOd0I7O0FBVW5DLFVBQVEsRUFWMkI7O0FBWW5DLFdBQVM7QUFDUDs7Ozs7OztBQU9BLGNBUk8sc0JBUUssSUFSTCxFQVFXLElBUlgsRUFRaUIsS0FSakIsRUFRd0IsS0FSeEIsRUFRK0I7QUFDcEMsYUFDRSw4QkFBQyxVQUFELGFBQVksTUFBTyxJQUFuQjtBQUNZLGNBQU8sSUFEbkI7QUFFWSxlQUFRO0FBRnBCLFNBR2lCLEtBSGpCLEVBREY7QUFPRDtBQWhCTSxHQVowQjs7QUErQm5DLGlCQS9CbUMsNkJBK0JoQjtBQUNqQixXQUFPLEVBQVA7QUFDRCxHQWpDa0M7QUFtQ25DLGlCQW5DbUMsNkJBbUNoQjtBQUNqQixXQUFPO0FBQ0wsY0FBUTtBQURILEtBQVA7QUFHRCxHQXZDa0M7QUF5Q25DLFFBekNtQyxvQkF5Q3pCO0FBQ1IsUUFBTSxJQUFJLElBQVY7QUFEUSxRQUVGLEtBRkUsR0FFUSxDQUZSLENBRUYsS0FGRTs7O0FBSVIsUUFBSSxZQUFZLDBCQUFXLGNBQVgsRUFBMkI7QUFDekMsNkJBQXVCLE1BQU07QUFEWSxLQUEzQixFQUViLE1BQU0sU0FGTyxDQUFoQjtBQUdBLFdBQ0U7QUFBQTtBQUFBLG1CQUFtQixLQUFuQjtBQUNjLG1CQUFZLFNBRDFCO0FBRWMsZUFBUSxPQUFPLE1BQVAsQ0FBYyxFQUFkLEVBQWtCLE1BQU0sS0FBeEI7QUFGdEI7QUFJSSxZQUFNO0FBSlYsS0FERjtBQVFELEdBeERrQzs7O0FBMERuQztBQUNBO0FBQ0E7QUFDQSx1QkE3RG1DLGlDQTZEWixTQTdEWSxFQTZERCxTQTdEQyxFQTZEVTtBQUMzQyxRQUFNLElBQUksSUFBVjtBQUQyQyxRQUVyQyxLQUZxQyxHQUVwQixDQUZvQixDQUVyQyxLQUZxQztBQUFBLFFBRTlCLEtBRjhCLEdBRXBCLENBRm9CLENBRTlCLEtBRjhCOztBQUczQyxXQUFPLENBQUMseUJBQWEsS0FBYixFQUFvQixTQUFwQixDQUFELElBQW1DLHlCQUFhLEtBQWIsRUFBb0IsU0FBcEIsQ0FBMUM7QUFDRDs7QUFFRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQXpFbUMsQ0FBbEIsQ0FBbkI7O2tCQTRFZSxVIiwiZmlsZSI6ImFwX21lbnVfaXRlbS5qc3giLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJdGVtIGZvciBtZW51LlxuICogQGNsYXNzIEFwTWVudUl0ZW1cbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuaW1wb3J0IFJlYWN0LCB7UHJvcFR5cGVzIGFzIHR5cGVzfSBmcm9tICdyZWFjdCdcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnXG5pbXBvcnQge3NoYWxsb3dFcXVhbH0gZnJvbSAnYXNvYmonXG5pbXBvcnQge0FwSWNvbkJ1dHRvbn0gZnJvbSAnYXBlbWFuLXJlYWN0LWJ1dHRvbidcblxuLyoqIEBsZW5kcyBBcE1lbnVJdGVtICovXG5jb25zdCBBcE1lbnVJdGVtID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFNwZWNzXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgcHJvcFR5cGVzOiB7XG4gICAgaGlkZGVuOiB0eXBlcy5ib29sXG4gIH0sXG5cbiAgbWl4aW5zOiBbXSxcblxuICBzdGF0aWNzOiB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGl0ZW0uXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGljb24gLSBJY29uIGNsYXNzIG5hbWUuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQgLSBUZXh0IG9mIGl0ZW0uXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gb25UYXAgLSBPbiB0YXAuXG4gICAgICogQHBhcmFtIHtvYmplY3R9IHByb3BzIC0gUHJvcGVydGllcy5cbiAgICAgKi9cbiAgICBjcmVhdGVJdGVtIChpY29uLCB0ZXh0LCBvblRhcCwgcHJvcHMpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxBcE1lbnVJdGVtIGljb249eyBpY29uIH1cbiAgICAgICAgICAgICAgICAgICAgdGV4dD17IHRleHQgfVxuICAgICAgICAgICAgICAgICAgICBvblRhcD17IG9uVGFwIH1cbiAgICAgICAgICAgICAgICAgICAgeyAuLi5wcm9wcyB9XG4gICAgICAgIC8+XG4gICAgICApXG4gICAgfVxuICB9LFxuXG4gIGdldEluaXRpYWxTdGF0ZSAoKSB7XG4gICAgcmV0dXJuIHt9XG4gIH0sXG5cbiAgZ2V0RGVmYXVsdFByb3BzICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaGlkZGVuOiBmYWxzZVxuICAgIH1cbiAgfSxcblxuICByZW5kZXIgKCkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMgfSA9IHNcblxuICAgIGxldCBjbGFzc05hbWUgPSBjbGFzc25hbWVzKCdhcC1tZW51LWl0ZW0nLCB7XG4gICAgICAnYXAtbWVudS1pdGVtLWhpZGRlbic6IHByb3BzLmhpZGRlblxuICAgIH0sIHByb3BzLmNsYXNzTmFtZSlcbiAgICByZXR1cm4gKFxuICAgICAgPEFwSWNvbkJ1dHRvbiB7IC4uLnByb3BzIH1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXsgY2xhc3NOYW1lIH1cbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9eyBPYmplY3QuYXNzaWduKHt9LCBwcm9wcy5zdHlsZSkgfVxuICAgICAgPlxuICAgICAgICB7IHByb3BzLmNoaWxkcmVuIH1cbiAgICAgIDwvQXBJY29uQnV0dG9uPlxuICAgIClcbiAgfSxcblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBMaWZlY3ljbGVcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlIChuZXh0UHJvcHMsIG5leHRTdGF0ZSkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMsIHN0YXRlIH0gPSBzXG4gICAgcmV0dXJuICFzaGFsbG93RXF1YWwocHJvcHMsIG5leHRQcm9wcykgfHwgc2hhbGxvd0VxdWFsKHN0YXRlLCBuZXh0U3RhdGUpXG4gIH1cblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gQ3VzdG9tXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBQcml2YXRlXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLVxufSlcblxuZXhwb3J0IGRlZmF1bHQgQXBNZW51SXRlbVxuIl19