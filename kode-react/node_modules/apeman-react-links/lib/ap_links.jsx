/**
 * apeman react package for link list component.
 * @class ApLinks
 */

'use strict'

import React, {PropTypes as types} from 'react'
import classnames from 'classnames'

/** @lends ApLinks */
const ApLinks = React.createClass({

  // --------------------
  // Specs
  // --------------------

  propTypes: {
    links: types.oneOfType([
      types.object,
      types.func
    ]),
    plain: types.bool,
    righted: types.bool
  },

  mixins: [],

  statics: {},

  getInitialState () {
    return {}
  },

  getDefaultProps () {
    return {
      links: {},
      plain: false,
      righted: false

    }
  },

  render () {
    const s = this
    let { props } = s
    let links = props.links || {}
    return (
      <ul className={ classnames('ap-links', {
            'ap-links-plain': props.plain,
            'ap-links-righted': props.righted
            }, props.className) }>
        {
          Object.keys(links).map((key) => (
              <li className="ap-links-item"
                  key={ `ap-links-item-${key}` }>
                {s._renderAnchor(key, links[ key ])}
              </li>
            )
          )
        }
      </ul>
    )
  },

  _renderAnchor (text, link) {
    const s = this
    let href = null
    let onClick = null
    if (typeof link === 'function') {
      return (
        <a href="javascript:void(0)"
           onClick={ link }>{ text }</a>
      )
    } else {
      return (
        <a href={ link }>{ text }</a>
      )
    }
  }
})

export default ApLinks
