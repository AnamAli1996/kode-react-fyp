/**
 * List item icon component.
 * @class ApListItemIcon
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _apemanReactIcon = require('apeman-react-icon');

var _asobj = require('asobj');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApListItemIcon */
var ApListItemIcon = _react2.default.createClass({
  displayName: 'ApListItemIcon',


  // --------------------
  // Specs
  // --------------------

  propTypes: {},

  mixins: [],

  statics: {},

  getInitialState: function getInitialState() {
    return {};
  },
  getDefaultProps: function getDefaultProps() {
    return {};
  },
  render: function render() {
    var s = this;
    var props = s.props;


    return _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-list-item-icon', props.className),
      style: (0, _assign2.default)({}, props.style) });
  },


  // --------------------
  // Lifecycle
  // --------------------

  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    var s = this;
    var props = s.props,
        state = s.state;

    return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
  }
});

exports.default = ApListItemIcon;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2xpc3RfaXRlbV9pY29uLmpzeCJdLCJuYW1lcyI6WyJBcExpc3RJdGVtSWNvbiIsImNyZWF0ZUNsYXNzIiwicHJvcFR5cGVzIiwibWl4aW5zIiwic3RhdGljcyIsImdldEluaXRpYWxTdGF0ZSIsImdldERlZmF1bHRQcm9wcyIsInJlbmRlciIsInMiLCJwcm9wcyIsImNsYXNzTmFtZSIsInN0eWxlIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwibmV4dFByb3BzIiwibmV4dFN0YXRlIiwic3RhdGUiXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUtBOzs7Ozs7Ozs7O0FBRUE7Ozs7QUFDQTs7OztBQUNBOztBQUNBOzs7O0FBRUE7QUFDQSxJQUFNQSxpQkFBaUIsZ0JBQU1DLFdBQU4sQ0FBa0I7QUFBQTs7O0FBRXZDO0FBQ0E7QUFDQTs7QUFFQUMsYUFBVyxFQU40Qjs7QUFRdkNDLFVBQVEsRUFSK0I7O0FBVXZDQyxXQUFTLEVBVjhCOztBQVl2Q0MsaUJBWnVDLDZCQVlwQjtBQUNqQixXQUFPLEVBQVA7QUFDRCxHQWRzQztBQWdCdkNDLGlCQWhCdUMsNkJBZ0JwQjtBQUNqQixXQUFPLEVBQVA7QUFDRCxHQWxCc0M7QUFvQnZDQyxRQXBCdUMsb0JBb0I3QjtBQUNSLFFBQU1DLElBQUksSUFBVjtBQURRLFFBRUZDLEtBRkUsR0FFUUQsQ0FGUixDQUVGQyxLQUZFOzs7QUFJUixXQUNFLHlEQUFRLFdBQVksMEJBQVcsbUJBQVgsRUFBZ0NBLE1BQU1DLFNBQXRDLENBQXBCO0FBQ1EsYUFBUSxzQkFBYyxFQUFkLEVBQWtCRCxNQUFNRSxLQUF4QixDQURoQixHQURGO0FBS0QsR0E3QnNDOzs7QUErQnZDO0FBQ0E7QUFDQTs7QUFFQUMsdUJBbkN1QyxpQ0FtQ2hCQyxTQW5DZ0IsRUFtQ0xDLFNBbkNLLEVBbUNNO0FBQzNDLFFBQU1OLElBQUksSUFBVjtBQUQyQyxRQUVyQ0MsS0FGcUMsR0FFcEJELENBRm9CLENBRXJDQyxLQUZxQztBQUFBLFFBRTlCTSxLQUY4QixHQUVwQlAsQ0FGb0IsQ0FFOUJPLEtBRjhCOztBQUczQyxXQUFPLENBQUMseUJBQWFOLEtBQWIsRUFBb0JJLFNBQXBCLENBQUQsSUFBbUMseUJBQWFFLEtBQWIsRUFBb0JELFNBQXBCLENBQTFDO0FBQ0Q7QUF2Q3NDLENBQWxCLENBQXZCOztrQkEyQ2VkLGMiLCJmaWxlIjoiYXBfbGlzdF9pdGVtX2ljb24uanN4Iiwic291cmNlUm9vdCI6ImxpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGlzdCBpdGVtIGljb24gY29tcG9uZW50LlxuICogQGNsYXNzIEFwTGlzdEl0ZW1JY29uXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBSZWFjdCwge1Byb3BUeXBlcyBhcyB0eXBlc30gZnJvbSAncmVhY3QnXG5pbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IHtBcEljb259IGZyb20gJ2FwZW1hbi1yZWFjdC1pY29uJ1xuaW1wb3J0IHtzaGFsbG93RXF1YWx9IGZyb20gJ2Fzb2JqJ1xuXG4vKiogQGxlbmRzIEFwTGlzdEl0ZW1JY29uICovXG5jb25zdCBBcExpc3RJdGVtSWNvbiA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBTcGVjc1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIHByb3BUeXBlczoge30sXG5cbiAgbWl4aW5zOiBbXSxcblxuICBzdGF0aWNzOiB7fSxcblxuICBnZXRJbml0aWFsU3RhdGUgKCkge1xuICAgIHJldHVybiB7fVxuICB9LFxuXG4gIGdldERlZmF1bHRQcm9wcyAoKSB7XG4gICAgcmV0dXJuIHt9XG4gIH0sXG5cbiAgcmVuZGVyICgpIHtcbiAgICBjb25zdCBzID0gdGhpc1xuICAgIGxldCB7IHByb3BzIH0gPSBzXG5cbiAgICByZXR1cm4gKFxuICAgICAgPEFwSWNvbiBjbGFzc05hbWU9eyBjbGFzc25hbWVzKCdhcC1saXN0LWl0ZW0taWNvbicsIHByb3BzLmNsYXNzTmFtZSkgfVxuICAgICAgICAgICAgICBzdHlsZT17IE9iamVjdC5hc3NpZ24oe30sIHByb3BzLnN0eWxlKSB9PlxuICAgICAgPC9BcEljb24+XG4gICAgKVxuICB9LFxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIExpZmVjeWNsZVxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIHNob3VsZENvbXBvbmVudFVwZGF0ZSAobmV4dFByb3BzLCBuZXh0U3RhdGUpIHtcbiAgICBjb25zdCBzID0gdGhpc1xuICAgIGxldCB7IHByb3BzLCBzdGF0ZSB9ID0gc1xuICAgIHJldHVybiAhc2hhbGxvd0VxdWFsKHByb3BzLCBuZXh0UHJvcHMpIHx8IHNoYWxsb3dFcXVhbChzdGF0ZSwgbmV4dFN0YXRlKVxuICB9XG5cbn0pXG5cbmV4cG9ydCBkZWZhdWx0IEFwTGlzdEl0ZW1JY29uXG4iXX0=