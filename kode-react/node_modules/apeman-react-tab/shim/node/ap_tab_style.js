/**
 * Style for ApTab.
 * @class ApTabStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/** @lends ApTabStyle */
var ApTabStyle = function (_Component) {
  _inherits(ApTabStyle, _Component);

  function ApTabStyle() {
    _classCallCheck(this, ApTabStyle);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApTabStyle).apply(this, arguments));
  }

  _createClass(ApTabStyle, [{
    key: 'render',
    value: function render() {
      var s = this;
      var props = s.props;

      var _ApTabStyle$styleData = ApTabStyle.styleData(props);

      var all = _ApTabStyle$styleData.all;
      var small = _ApTabStyle$styleData.small;
      var medium = _ApTabStyle$styleData.medium;
      var large = _ApTabStyle$styleData.large;


      return _react2.default.createElement(
        _apemanReactStyle.ApStyle,
        { data: Object.assign(all, props.style),
          smallMediaData: small,
          mediumMediaData: medium,
          largeMediaData: large
        },
        props.children
      );
    }
  }]);

  return ApTabStyle;
}(_react.Component);

Object.assign(ApTabStyle, {
  propTypes: {
    style: _react.PropTypes.object,
    highlightColor: _react.PropTypes.string,
    backgroundColor: _react.PropTypes.string,
    borderColor: _react.PropTypes.string
  },

  defaultProps: {
    style: {},
    highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
    backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR,
    borderColor: '#888'
  },
  styleData: function styleData(config) {
    var highlightColor = config.highlightColor;
    var borderColor = config.borderColor;
    var backgroundColor = config.backgroundColor;

    return {
      all: {
        '.ap-tab': {
          display: 'flex'
        },
        '.ap-tab-item': {
          display: 'inline-block',
          flex: 1,
          textAlign: 'center',
          padding: '8px',
          color: '#555',
          border: '1px solid ' + borderColor,
          marginRight: '-1px',
          position: 'relative',
          textDecoration: 'none'
        },
        '.ap-tab-item:hover': {
          boxSizing: 'border-box',
          cursor: 'pointer',
          textDecoration: 'none'
        },
        '.ap-tab-item-selected': {
          color: '' + highlightColor,
          borderColor: '' + highlightColor,
          zIndex: 2
        },
        '.ap-tab-item:active': {
          color: '' + highlightColor,
          borderColor: '' + highlightColor
        },
        '.ap-tab-group': {
          display: 'block',
          padding: '4px 0 0',
          border: '1px solid ' + borderColor,
          background: '#EEE'
        },
        '.ap-tab-content': {
          display: 'none',
          borderTop: '1px solid ' + borderColor,
          marginTop: '-1px',
          position: 'relative',
          zIndex: 2,
          padding: '4px 8px',
          background: backgroundColor
        },
        '.ap-tab-content-selected': {
          display: 'block'
        },
        '.ap-tab-group .ap-tab': {
          margin: '4px 8px 0'
        },
        '.ap-tab-group .ap-tab-item': {
          padding: '4px 0 2px',
          borderBottom: 'none',
          position: 'relative',
          zIndex: 1,
          color: '#888',
          borderColor: 'transparent'
        },
        '.ap-tab-group .ap-tab-item-selected': {
          zIndex: 3,
          background: backgroundColor,
          color: 'inherit',
          borderColor: borderColor
        }
      }
    };
  }
});

exports.default = ApTabStyle;
//# sourceMappingURL=data:application/json;base64,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QjtBQTFEcEM7QUFEQSxLQUFQO0FBbUVEO0FBbkZ1QixDQUExQjs7a0JBc0ZlLFUiLCJmaWxlIjoiYXBfdGFiX3N0eWxlLmpzeCIsInNvdXJjZVJvb3QiOiJsaWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFN0eWxlIGZvciBBcFRhYi5cbiAqIEBjbGFzcyBBcFRhYlN0eWxlXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudCwgUHJvcFR5cGVzIGFzIHR5cGVzfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7QXBTdHlsZX0gZnJvbSAnYXBlbWFuLXJlYWN0LXN0eWxlJ1xuXG4vKiogQGxlbmRzIEFwVGFiU3R5bGUgKi9cbmNsYXNzIEFwVGFiU3R5bGUgZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIgKCkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMgfSA9IHNcblxuICAgIGxldCB7IGFsbCwgc21hbGwsIG1lZGl1bSwgbGFyZ2UgfSA9IEFwVGFiU3R5bGUuc3R5bGVEYXRhKHByb3BzKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxBcFN0eWxlIGRhdGE9eyBPYmplY3QuYXNzaWduKGFsbCwgcHJvcHMuc3R5bGUpIH1cbiAgICAgICAgICAgICAgIHNtYWxsTWVkaWFEYXRhPXsgc21hbGwgfVxuICAgICAgICAgICAgICAgbWVkaXVtTWVkaWFEYXRhPXsgbWVkaXVtIH1cbiAgICAgICAgICAgICAgIGxhcmdlTWVkaWFEYXRhPXsgbGFyZ2UgfVxuICAgICAgPnsgcHJvcHMuY2hpbGRyZW4gfTwvQXBTdHlsZT5cbiAgICApXG4gIH1cbn1cblxuT2JqZWN0LmFzc2lnbihBcFRhYlN0eWxlLCB7XG4gIHByb3BUeXBlczoge1xuICAgIHN0eWxlOiB0eXBlcy5vYmplY3QsXG4gICAgaGlnaGxpZ2h0Q29sb3I6IHR5cGVzLnN0cmluZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHR5cGVzLnN0cmluZyxcbiAgICBib3JkZXJDb2xvcjogdHlwZXMuc3RyaW5nXG4gIH0sXG5cbiAgZGVmYXVsdFByb3BzOiB7XG4gICAgc3R5bGU6IHt9LFxuICAgIGhpZ2hsaWdodENvbG9yOiBBcFN0eWxlLkRFRkFVTFRfSElHSExJR0hUX0NPTE9SLFxuICAgIGJhY2tncm91bmRDb2xvcjogQXBTdHlsZS5ERUZBVUxUX0JBQ0tHUk9VTkRfQ09MT1IsXG4gICAgYm9yZGVyQ29sb3I6ICcjODg4J1xuICB9LFxuICBzdHlsZURhdGEgKGNvbmZpZykge1xuICAgIGxldCB7IGhpZ2hsaWdodENvbG9yLCBib3JkZXJDb2xvciwgYmFja2dyb3VuZENvbG9yIH0gPSBjb25maWdcbiAgICByZXR1cm4ge1xuICAgICAgYWxsOiB7XG4gICAgICAgICcuYXAtdGFiJzoge1xuICAgICAgICAgIGRpc3BsYXk6ICdmbGV4J1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLXRhYi1pdGVtJzoge1xuICAgICAgICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgICAgICAgIGZsZXg6IDEsXG4gICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgICBwYWRkaW5nOiAnOHB4JyxcbiAgICAgICAgICBjb2xvcjogJyM1NTUnLFxuICAgICAgICAgIGJvcmRlcjogYDFweCBzb2xpZCAke2JvcmRlckNvbG9yfWAsXG4gICAgICAgICAgbWFyZ2luUmlnaHQ6ICctMXB4JyxcbiAgICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgICB0ZXh0RGVjb3JhdGlvbjogJ25vbmUnXG4gICAgICAgIH0sXG4gICAgICAgICcuYXAtdGFiLWl0ZW06aG92ZXInOiB7XG4gICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgY3Vyc29yOiAncG9pbnRlcicsXG4gICAgICAgICAgdGV4dERlY29yYXRpb246ICdub25lJ1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLXRhYi1pdGVtLXNlbGVjdGVkJzoge1xuICAgICAgICAgIGNvbG9yOiBgJHtoaWdobGlnaHRDb2xvcn1gLFxuICAgICAgICAgIGJvcmRlckNvbG9yOiBgJHtoaWdobGlnaHRDb2xvcn1gLFxuICAgICAgICAgIHpJbmRleDogMlxuICAgICAgICB9LFxuICAgICAgICAnLmFwLXRhYi1pdGVtOmFjdGl2ZSc6IHtcbiAgICAgICAgICBjb2xvcjogYCR7aGlnaGxpZ2h0Q29sb3J9YCxcbiAgICAgICAgICBib3JkZXJDb2xvcjogYCR7aGlnaGxpZ2h0Q29sb3J9YFxuICAgICAgICB9LFxuICAgICAgICAnLmFwLXRhYi1ncm91cCc6IHtcbiAgICAgICAgICBkaXNwbGF5OiAnYmxvY2snLFxuICAgICAgICAgIHBhZGRpbmc6ICc0cHggMCAwJyxcbiAgICAgICAgICBib3JkZXI6IGAxcHggc29saWQgJHtib3JkZXJDb2xvcn1gLFxuICAgICAgICAgIGJhY2tncm91bmQ6ICcjRUVFJ1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLXRhYi1jb250ZW50Jzoge1xuICAgICAgICAgIGRpc3BsYXk6ICdub25lJyxcbiAgICAgICAgICBib3JkZXJUb3A6IGAxcHggc29saWQgJHtib3JkZXJDb2xvcn1gLFxuICAgICAgICAgIG1hcmdpblRvcDogJy0xcHgnLFxuICAgICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgICAgICAgIHpJbmRleDogMixcbiAgICAgICAgICBwYWRkaW5nOiAnNHB4IDhweCcsXG4gICAgICAgICAgYmFja2dyb3VuZDogYmFja2dyb3VuZENvbG9yXG4gICAgICAgIH0sXG4gICAgICAgICcuYXAtdGFiLWNvbnRlbnQtc2VsZWN0ZWQnOiB7XG4gICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJ1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLXRhYi1ncm91cCAuYXAtdGFiJzoge1xuICAgICAgICAgIG1hcmdpbjogJzRweCA4cHggMCdcbiAgICAgICAgfSxcbiAgICAgICAgJy5hcC10YWItZ3JvdXAgLmFwLXRhYi1pdGVtJzoge1xuICAgICAgICAgIHBhZGRpbmc6ICc0cHggMCAycHgnLFxuICAgICAgICAgIGJvcmRlckJvdHRvbTogJ25vbmUnLFxuICAgICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgICAgICAgIHpJbmRleDogMSxcbiAgICAgICAgICBjb2xvcjogJyM4ODgnLFxuICAgICAgICAgIGJvcmRlckNvbG9yOiAndHJhbnNwYXJlbnQnXG4gICAgICAgIH0sXG4gICAgICAgICcuYXAtdGFiLWdyb3VwIC5hcC10YWItaXRlbS1zZWxlY3RlZCc6IHtcbiAgICAgICAgICB6SW5kZXg6IDMsXG4gICAgICAgICAgYmFja2dyb3VuZDogYmFja2dyb3VuZENvbG9yLFxuICAgICAgICAgIGNvbG9yOiAnaW5oZXJpdCcsXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IGJvcmRlckNvbG9yXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn0pXG5cbmV4cG9ydCBkZWZhdWx0IEFwVGFiU3R5bGVcbiJdfQ==