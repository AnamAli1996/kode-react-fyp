/**
 * List bar message component.
 * @class ApListBarMessage
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApListBarMessage */
var ApListBarMessage = _react2.default.createClass({
  displayName: 'ApListBarMessage',


  // --------------------
  // Specs
  // --------------------

  render: function render() {
    var s = this;
    var state = s.state,
        props = s.props;


    return _react2.default.createElement(
      'span',
      { className: (0, _classnames2.default)('ap-list-bar-message', props.className),
        style: (0, _assign2.default)({}, props.style) },
      props.children
    );
  }

  // --------------------
  // Lifecycle
  // --------------------

  // ------------------
  // Custom
  // ------------------

  // ------------------
  // Private
  // ------------------

});

exports.default = ApListBarMessage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2xpc3RfYmFyX21lc3NhZ2UuanN4Il0sIm5hbWVzIjpbIkFwTGlzdEJhck1lc3NhZ2UiLCJjcmVhdGVDbGFzcyIsInJlbmRlciIsInMiLCJzdGF0ZSIsInByb3BzIiwiY2xhc3NOYW1lIiwic3R5bGUiLCJjaGlsZHJlbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBS0E7Ozs7Ozs7Ozs7QUFFQTs7OztBQUNBOzs7Ozs7QUFFQTtBQUNBLElBQU1BLG1CQUFtQixnQkFBTUMsV0FBTixDQUFrQjtBQUFBOzs7QUFFekM7QUFDQTtBQUNBOztBQUVBQyxRQU55QyxvQkFNL0I7QUFDUixRQUFNQyxJQUFJLElBQVY7QUFEUSxRQUVGQyxLQUZFLEdBRWVELENBRmYsQ0FFRkMsS0FGRTtBQUFBLFFBRUtDLEtBRkwsR0FFZUYsQ0FGZixDQUVLRSxLQUZMOzs7QUFJUixXQUNFO0FBQUE7QUFBQSxRQUFNLFdBQVksMEJBQVcscUJBQVgsRUFBa0NBLE1BQU1DLFNBQXhDLENBQWxCO0FBQ00sZUFBUSxzQkFBYyxFQUFkLEVBQWtCRCxNQUFNRSxLQUF4QixDQURkO0FBRU1GLFlBQU1HO0FBRlosS0FERjtBQU1EOztBQUVEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQTVCeUMsQ0FBbEIsQ0FBekI7O2tCQStCZVIsZ0IiLCJmaWxlIjoiYXBfbGlzdF9iYXJfbWVzc2FnZS5qc3giLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaXN0IGJhciBtZXNzYWdlIGNvbXBvbmVudC5cbiAqIEBjbGFzcyBBcExpc3RCYXJNZXNzYWdlXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBSZWFjdCwge1Byb3BUeXBlcyBhcyB0eXBlc30gZnJvbSAncmVhY3QnXG5pbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJ1xuXG4vKiogQGxlbmRzIEFwTGlzdEJhck1lc3NhZ2UgKi9cbmNvbnN0IEFwTGlzdEJhck1lc3NhZ2UgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gU3BlY3NcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICByZW5kZXIgKCkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgc3RhdGUsIHByb3BzIH0gPSBzXG5cbiAgICByZXR1cm4gKFxuICAgICAgPHNwYW4gY2xhc3NOYW1lPXsgY2xhc3NuYW1lcygnYXAtbGlzdC1iYXItbWVzc2FnZScsIHByb3BzLmNsYXNzTmFtZSkgfVxuICAgICAgICAgICAgc3R5bGU9eyBPYmplY3QuYXNzaWduKHt9LCBwcm9wcy5zdHlsZSkgfT5cblx0XHQgICAgICAgIHsgcHJvcHMuY2hpbGRyZW4gfVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgIClcbiAgfVxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIExpZmVjeWNsZVxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBDdXN0b21cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFByaXZhdGVcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tXG59KVxuXG5leHBvcnQgZGVmYXVsdCBBcExpc3RCYXJNZXNzYWdlO1xuIl19